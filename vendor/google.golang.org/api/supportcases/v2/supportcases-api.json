{
 "kind": "discovery#restDescription",
 "etag": "\"YWOzh2SDasdU84ArJnpYek-OMdg/jlUeQ39CT-heXQN-O7GqkbWfDjU\"",
 "discoveryVersion": "v1",
 "id": "supportcases:v2",
 "name": "supportcases",
 "version": "v2",
 "revision": "20170329",
 "title": "Google Support Cases Private API",
 "description": "Support Cases API",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "https://www.gstatic.com/images/branding/product/1x/googleg_16dp.png",
  "x32": "https://www.gstatic.com/images/branding/product/1x/googleg_32dp.png"
 },
 "documentationLink": "https://sites.google.com/a/google.com/cases/",
 "protocol": "rest",
 "baseUrl": "https://supportcases.googleapis.com/v2/",
 "basePath": "/v2/",
 "rootUrl": "https://supportcases.googleapis.com/",
 "servicePath": "v2/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/cases": {
     "description": "View and manage your Google Support Cases"
    },
    "https://www.googleapis.com/auth/cases.readonly": {
     "description": "View your Google Support Cases"
    },
    "https://www.googleapis.com/auth/supportcontent": {
     "description": "View and manage your support data"
    }
   }
  }
 },
 "schemas": {
  "Account": {
   "id": "Account",
   "type": "object",
   "properties": {
    "accountId": {
     "type": "string"
    },
    "productId": {
     "type": "string"
    },
    "productName": {
     "type": "string"
    }
   }
  },
  "AccountLookupTool": {
   "id": "AccountLookupTool",
   "type": "object",
   "properties": {
    "productId": {
     "type": "string"
    },
    "productName": {
     "type": "string"
    },
    "urlTemplate": {
     "type": "string"
    }
   }
  },
  "AccountReview": {
   "id": "AccountReview",
   "type": "object",
   "properties": {
    "reviewKey": {
     "$ref": "ReviewKey"
    },
    "reviewState": {
     "type": "string",
     "enum": [
      "ASSIGNED",
      "CLOSED",
      "REVIEW_STATE_UNSPECIFIED",
      "UNASSIGNED",
      "UNKNOWN_REVIEW_STATE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "reviewType": {
     "type": "string",
     "enum": [
      "ACCOUNT_REVIEW_TYPE_UNSPECIFIED",
      "AML",
      "BVID_COMPLIANCE_FRAUD",
      "ID_VERIFICATION_UNKNOWN_TYPE",
      "LEGACY_HOLD_REVIEW",
      "OFFLINE_SANCTIONS_COMPLIANCE_FRAUD",
      "ONLINE_SANCTIONS",
      "RISK_FRAUD"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "AccountSignalResult": {
   "id": "AccountSignalResult",
   "type": "object",
   "properties": {
    "bvidDocsSubmissionStatus": {
     "$ref": "CustomerDocsSubmissionStatus"
    },
    "gaiaCheckoutServiceStatus": {
     "type": "string",
     "enum": [
      "GAIA_ACCOUNT_SERVICE_STATUS_DISABLED",
      "GAIA_ACCOUNT_SERVICE_STATUS_REGISTERED",
      "GAIA_ACCOUNT_SERVICE_STATUS_SUSPENDED",
      "GAIA_ACCOUNT_SERVICE_STATUS_UNSPECIFIED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "hasPositiveWalletBalance": {
     "type": "boolean"
    },
    "isVip": {
     "type": "boolean"
    },
    "mostRecentTransactionType": {
     "type": "string",
     "enum": [
      "GOOGLE_PLAY",
      "GOOGLE_STORE",
      "P2P_RECEIVER",
      "P2P_SENDER",
      "TAP_AND_PAY",
      "UNKNOWN_WALLET_TRANSACTION_TYPE",
      "WALLET_CARD",
      "YOUTUBE_PURCHASE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "offlineCheckDocsSubmissionStatus": {
     "$ref": "CustomerDocsSubmissionStatus"
    },
    "riskDocsSubmissionStatus": {
     "$ref": "CustomerDocsSubmissionStatus"
    },
    "sanctionsDocsSubmissionStatus": {
     "$ref": "CustomerDocsSubmissionStatus"
    },
    "type": {
     "type": "string",
     "enum": [
      "ACCOUNT_SIGNAL_TYPE_UNSPECIFIED",
      "CUSTOMER_BVID_DOCS_SUBMISSION_STATUS",
      "CUSTOMER_OFFLINE_CHECK_DOCS_SUBMISSION_STATUS",
      "CUSTOMER_RISK_DOCS_SUBMISSION_STATUS",
      "CUSTOMER_SANCTIONS_DOCS_SUBMISSION_STATUS",
      "GAIA_ACCOUNT_CHECKOUT_SERVICE_STATUS",
      "HAS_POSITIVE_WALLET_BALANCE",
      "IS_VIP",
      "MOST_RECENT_TRANSACTION_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "Action": {
   "id": "Action",
   "type": "object",
   "properties": {
    "cannedResponses": {
     "$ref": "CannedResponseAction"
    },
    "issueCategories": {
     "$ref": "IssueCategoryAction"
    },
    "nextState": {
     "type": "string",
     "enum": [
      "ASSIGNED",
      "BLOCKED_BY",
      "FINISHED",
      "IN_CONSULT",
      "NEED_INFO",
      "NEW",
      "SOLUTION_OFFERED",
      "UNASSIGNED",
      "UNKNOWN_CASE_STATE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "Action1": {
   "id": "Action1",
   "type": "object",
   "properties": {
    "alertMessage": {
     "type": "string"
    },
    "consultAction": {
     "$ref": "ConsultAction"
    },
    "difmAction": {
     "$ref": "DifmAction"
    },
    "scriptId": {
     "type": "integer",
     "format": "int32"
    },
    "showSummaryAction": {
     "$ref": "ShowSummaryAction"
    },
    "transferAction": {
     "$ref": "TransferAction"
    }
   }
  },
  "Address": {
   "id": "Address",
   "type": "object",
   "properties": {
    "addressLine1": {
     "type": "string"
    },
    "addressLine2": {
     "type": "string"
    },
    "addressLine3": {
     "type": "string"
    },
    "addressee": {
     "type": "string"
    },
    "city": {
     "type": "string"
    },
    "countryCode": {
     "type": "string"
    },
    "postalCode": {
     "type": "string"
    },
    "stateProvinceCode": {
     "type": "string"
    }
   }
  },
  "AfterSendSetting": {
   "id": "AfterSendSetting",
   "type": "object",
   "properties": {
    "stateAfterSend": {
     "type": "string",
     "enum": [
      "NEEDS_INFO",
      "SOLUTION_OFFERED",
      "UNKNOWN_STATE_AFTER_SEND"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    }
   }
  },
  "AgentActivity": {
   "id": "AgentActivity",
   "type": "object",
   "properties": {
    "agentActivityId": {
     "type": "string"
    },
    "assignee": {
     "$ref": "Assignee"
    },
    "caseId": {
     "type": "string"
    },
    "cohortMetadataCollection": {
     "$ref": "CohortMetadataCollection"
    },
    "description": {
     "type": "string"
    },
    "desktopScreenshareEvent": {
     "$ref": "DesktopScreenshareEvent"
    },
    "mobileScreenshareEvent": {
     "$ref": "MobileScreenshareEvent"
    },
    "phoneCall": {
     "$ref": "PhoneCall"
    },
    "pitch": {
     "$ref": "Pitch"
    },
    "relation": {
     "$ref": "Relation"
    },
    "requestDeviceSignalsEvent": {
     "$ref": "RequestDeviceSignalsEvent"
    },
    "resolutionOpened": {
     "$ref": "ResolutionOpened"
    },
    "startTime": {
     "type": "string"
    }
   }
  },
  "AgentActivitySource": {
   "id": "AgentActivitySource",
   "type": "object"
  },
  "AgentSetting": {
   "id": "AgentSetting",
   "type": "object",
   "properties": {
    "agentSettingId": {
     "type": "string"
    },
    "aliasInfo": {
     "$ref": "AliasInfo"
    },
    "defaultLocale": {
     "type": "string"
    },
    "defaultProductId": {
     "type": "string"
    },
    "employmentInfo": {
     "$ref": "EmploymentInfo"
    },
    "firstName": {
     "type": "string"
    },
    "focusInfo": {
     "$ref": "FocusInfo"
    },
    "includeReassignedInAutoassign": {
     "type": "boolean"
    },
    "languageCode": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "phoneSetting": {
     "$ref": "PhoneSetting"
    },
    "preferredName": {
     "type": "string"
    },
    "sidewinderRole": {
     "$ref": "SidewinderRole"
    },
    "status": {
     "type": "string",
     "enum": [
      "ACTIVE",
      "DELETED",
      "INACTIVE",
      "UNKNOWN_AGENT_STATUS"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "AgentTransfer": {
   "id": "AgentTransfer",
   "type": "object",
   "properties": {
    "sourceAgent": {
     "$ref": "Identity"
    },
    "targetAgent": {
     "$ref": "Identity"
    }
   }
  },
  "AgentUnreadCasesInfo": {
   "id": "AgentUnreadCasesInfo",
   "type": "object",
   "properties": {
    "unreadCasesInfo": {
     "type": "array",
     "items": {
      "$ref": "UnreadCaseInfo"
     }
    }
   }
  },
  "AliasInfo": {
   "id": "AliasInfo",
   "type": "object",
   "properties": {
    "externalName": {
     "type": "string"
    },
    "personalAlias": {
     "type": "string"
    }
   }
  },
  "Answer": {
   "id": "Answer",
   "type": "object",
   "properties": {
    "question": {
     "type": "string",
     "enum": [
      "DEVICE_TYPE",
      "PURCHASED_APP_NAME",
      "PURCHASED_BOOK_NAME",
      "PURCHASED_VIDEO_NAME",
      "QUESTION_NOT_SET"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "skipReason": {
     "type": "string",
     "enum": [
      "DOES_NOT_KNOW",
      "NOT_LISTED",
      "SKIP_REASON_NOT_SET"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "text": {
     "type": "string"
    }
   }
  },
  "AnswerSet": {
   "id": "AnswerSet",
   "type": "object",
   "properties": {
    "customerAnswers": {
     "type": "array",
     "items": {
      "$ref": "CustomerAnswer"
     }
    },
    "questionSetType": {
     "type": "string",
     "enum": [
      "PAYMENT_METHOD_QUESTION_SET",
      "PHONE_NUMBER_QUESTION_SET",
      "POSTAL_CODE_QUESTION_SET",
      "UNKNOWN_QUESTION_SET_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "AssignCohortsRequest": {
   "id": "AssignCohortsRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    }
   }
  },
  "AssignCohortsResponse": {
   "id": "AssignCohortsResponse",
   "type": "object",
   "properties": {
    "cohorts": {
     "type": "array",
     "items": {
      "$ref": "Cohort2"
     }
    }
   }
  },
  "AssignRequest": {
   "id": "AssignRequest",
   "type": "object",
   "properties": {
    "assignedByScreenPop": {
     "type": "boolean"
    },
    "emailAddress": {
     "type": "string"
    }
   }
  },
  "AssignResponse": {
   "id": "AssignResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "Assignee": {
   "id": "Assignee",
   "type": "object",
   "properties": {
    "displayName": {
     "type": "string"
    },
    "emailAddress": {
     "type": "string"
    }
   }
  },
  "Assignee1": {
   "id": "Assignee1",
   "type": "object",
   "properties": {
    "displayName": {
     "type": "string"
    },
    "emailAddress": {
     "type": "string"
    }
   }
  },
  "Assignee2": {
   "id": "Assignee2",
   "type": "object",
   "properties": {
    "ldap": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "Attachment": {
   "id": "Attachment",
   "type": "object",
   "properties": {
    "attachmentId": {
     "type": "string"
    },
    "communicationId": {
     "type": "string"
    }
   }
  },
  "Attachment1": {
   "id": "Attachment1",
   "type": "object",
   "properties": {
    "attachmentId": {
     "type": "string"
    },
    "communicationId": {
     "type": "string"
    }
   }
  },
  "AttachmentInfo": {
   "id": "AttachmentInfo",
   "type": "object",
   "properties": {
    "attachmentId": {
     "type": "string"
    },
    "contentId": {
     "type": "string"
    },
    "fileName": {
     "type": "string"
    },
    "mimeType": {
     "type": "string"
    }
   }
  },
  "Attribute": {
   "id": "Attribute",
   "type": "object",
   "properties": {
    "attributeId": {
     "type": "string"
    },
    "attributeName": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "enumValue": {
     "type": "array",
     "items": {
      "$ref": "EnumValue"
     }
    },
    "name": {
     "type": "string"
    },
    "valueType": {
     "type": "string",
     "enum": [
      "BOOL",
      "DOUBLE",
      "ENUM",
      "INT",
      "INT64",
      "STRING",
      "TIMESTAMP",
      "UNKNOWN_VALUE_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "Attribute1": {
   "id": "Attribute1",
   "type": "object",
   "properties": {
    "attributeId": {
     "type": "string"
    },
    "attributeName": {
     "type": "string"
    },
    "entries": {
     "type": "array",
     "items": {
      "$ref": "Entry"
     }
    }
   }
  },
  "AuthenticateRequest": {
   "id": "AuthenticateRequest",
   "type": "object",
   "properties": {
    "agentSsoCookie": {
     "type": "string"
    },
    "answerSets": {
     "type": "array",
     "items": {
      "$ref": "AnswerSet"
     }
    },
    "customerEmail": {
     "type": "string"
    }
   }
  },
  "AuthenticateResponse": {
   "id": "AuthenticateResponse",
   "type": "object",
   "properties": {
    "customer": {
     "$ref": "Customer"
    },
    "result": {
     "type": "string",
     "enum": [
      "FAIL",
      "PASS",
      "PENDING",
      "UNKNOWN_RESULT"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "verificationResults": {
     "type": "array",
     "items": {
      "$ref": "VerificationResult"
     }
    }
   }
  },
  "Authentication": {
   "id": "Authentication",
   "type": "object",
   "properties": {
    "authenticateTime": {
     "type": "string"
    },
    "channel": {
     "type": "string",
     "enum": [
      "AGENT",
      "CLICK_TO_CALL",
      "CUF",
      "REALTIME",
      "UNKNOWN_CHANNEL"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "emailAddress": {
     "type": "string"
    },
    "result": {
     "type": "string",
     "enum": [
      "FAIL",
      "PASS",
      "PENDING",
      "UNKNOWN_RESULT"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "AuthenticationBankAccount": {
   "id": "AuthenticationBankAccount",
   "type": "object",
   "properties": {
    "bankAccountTypeDisplayName": {
     "type": "string"
    },
    "bankAccountTypeToken": {
     "type": "string"
    }
   }
  },
  "AuthenticationCreditCard": {
   "id": "AuthenticationCreditCard",
   "type": "object",
   "properties": {
    "creditCardDisplayName": {
     "type": "string"
    },
    "creditCardTypeToken": {
     "type": "string"
    }
   }
  },
  "AuthenticationCreditCard1": {
   "id": "AuthenticationCreditCard1",
   "type": "object",
   "properties": {
    "creditCardDisplayName": {
     "type": "string"
    },
    "creditCardTypeToken": {
     "type": "string"
    }
   }
  },
  "AuthenticationInfo": {
   "id": "AuthenticationInfo",
   "type": "object",
   "properties": {
    "status": {
     "type": "string",
     "enum": [
      "FAILED",
      "SUCCESS",
      "UNKNOWN_AUTH_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    }
   }
  },
  "AuthenticationSettings": {
   "id": "AuthenticationSettings",
   "type": "object",
   "properties": {
    "authenticationSupported": {
     "type": "boolean"
    },
    "exemptFromAuthentication": {
     "type": "boolean"
    }
   }
  },
  "AutoAssignRequest": {
   "id": "AutoAssignRequest",
   "type": "object"
  },
  "AutoAssignResponse": {
   "id": "AutoAssignResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    },
    "searchName": {
     "type": "string"
    }
   }
  },
  "AutocheckResult": {
   "id": "AutocheckResult",
   "type": "object",
   "properties": {
    "autocheckId": {
     "type": "string"
    },
    "autocheckTime": {
     "type": "string"
    },
    "descriptionId": {
     "type": "string"
    },
    "scriptId": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "AUTOCHECK_STATUS_NOT_SET",
      "ERROR",
      "FAIL",
      "NO",
      "NOT_RUN",
      "PASS",
      "YES"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "AvailableQuestion": {
   "id": "AvailableQuestion",
   "type": "object",
   "properties": {
    "authenticationCreditCards": {
     "type": "array",
     "items": {
      "$ref": "AuthenticationCreditCard1"
     }
    },
    "question": {
     "type": "string",
     "enum": [
      "BANK_ACCOUNT",
      "CREDIT_CARD",
      "DCB",
      "PAYPAL",
      "PHONE_NUMBER",
      "PLAY_BALANCE",
      "POSTAL_CODE",
      "UNKNOWN_QUESTION",
      "WALLET_BALANCE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "questionSources": {
     "type": "array",
     "items": {
      "$ref": "QuestionSource"
     }
    },
    "questionToken": {
     "type": "string"
    }
   }
  },
  "BankAccount": {
   "id": "BankAccount",
   "type": "object",
   "properties": {
    "accountSuffix": {
     "type": "string"
    },
    "bankAccountToken": {
     "type": "string"
    },
    "countryName": {
     "type": "string"
    }
   }
  },
  "BankAccount1": {
   "id": "BankAccount1",
   "type": "object",
   "properties": {
    "accountNumberSuffix": {
     "type": "string"
    },
    "bankAccountTypeToken": {
     "type": "string"
    }
   }
  },
  "BankAccountCountry": {
   "id": "BankAccountCountry",
   "type": "object",
   "properties": {
    "bankAccountToken": {
     "type": "string"
    },
    "countryName": {
     "type": "string"
    }
   }
  },
  "BatchCreatePitchRequest": {
   "id": "BatchCreatePitchRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "eventId": {
     "type": "string"
    },
    "opportunityIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "pitches": {
     "type": "array",
     "items": {
      "$ref": "Pitch1"
     }
    }
   }
  },
  "BatchCreatePitchResponse": {
   "id": "BatchCreatePitchResponse",
   "type": "object",
   "properties": {
    "responses": {
     "type": "array",
     "items": {
      "$ref": "CreatePitchResponse"
     }
    }
   }
  },
  "BatchGetCategoryInfosResponse": {
   "id": "BatchGetCategoryInfosResponse",
   "type": "object",
   "properties": {
    "categoryInfos": {
     "type": "array",
     "items": {
      "$ref": "CategoryInfo"
     }
    }
   }
  },
  "BatchUpdateAttributesRequest": {
   "id": "BatchUpdateAttributesRequest",
   "type": "object",
   "properties": {
    "attributes": {
     "type": "array",
     "items": {
      "$ref": "Attribute1"
     }
    }
   }
  },
  "BatchUpdateAttributesResponse": {
   "id": "BatchUpdateAttributesResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "BlockRequest": {
   "id": "BlockRequest",
   "type": "object",
   "properties": {
    "borgAlertId": {
     "type": "string"
    },
    "buganizerId": {
     "type": "string",
     "format": "int64"
    },
    "orderId": {
     "type": "string"
    },
    "pcrId": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "BlockResponse": {
   "id": "BlockResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "BuildNewEmailRequest": {
   "id": "BuildNewEmailRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    }
   }
  },
  "BuildNewEmailResponse": {
   "id": "BuildNewEmailResponse",
   "type": "object",
   "properties": {
    "emailTemplate": {
     "$ref": "Email"
    },
    "footerIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "headerIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "BuildReplyEmailRequest": {
   "id": "BuildReplyEmailRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "messageId": {
     "type": "string"
    },
    "replyType": {
     "type": "string",
     "enum": [
      "REPLY",
      "REPLY_ALL",
      "UNKNOWN_REPLY_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "timeZone": {
     "type": "string"
    }
   }
  },
  "BuildReplyEmailResponse": {
   "id": "BuildReplyEmailResponse",
   "type": "object",
   "properties": {
    "emailTemplate": {
     "$ref": "Email"
    }
   }
  },
  "Business": {
   "id": "Business",
   "type": "object",
   "properties": {
    "address": {
     "$ref": "Address"
    },
    "listingId": {
     "type": "string",
     "format": "uint64"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "CallBackRequest": {
   "id": "CallBackRequest",
   "type": "object"
  },
  "CallBackResponse": {
   "id": "CallBackResponse",
   "type": "object",
   "properties": {
    "callbackStatus": {
     "type": "string",
     "enum": [
      "AGENT_BUSY",
      "AGENT_HUNG_UP_EARLY",
      "AGENT_NOT_ANSWERED",
      "AGENT_NOT_CONNECTED",
      "AGENT_NOT_LOGGED_IN",
      "AUTHENTICATION_ERROR",
      "CALLBACK_STATUS_UNSPECIFIED",
      "CALL_CONNECTED",
      "CALL_IN_PROGRESS",
      "CUSTOMER_BUSY",
      "CUSTOMER_NOT_ANSWERED",
      "CUSTOMER_NOT_CONNECTED",
      "INTERNAL_ERROR",
      "INVALID_AGENT_SETTING",
      "INVALID_CUSTOMER_NUMBER"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "customer": {
     "$ref": "Customer"
    }
   }
  },
  "Campaign": {
   "id": "Campaign",
   "type": "object",
   "properties": {
    "campaignId": {
     "type": "string",
     "format": "int64"
    },
    "campaignName": {
     "type": "string"
    },
    "rank": {
     "type": "number",
     "format": "double"
    }
   }
  },
  "CancelAuthHoldRequest": {
   "id": "CancelAuthHoldRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    }
   }
  },
  "CancelComponentsRequest": {
   "id": "CancelComponentsRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "componentTokens": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "reason": {
     "type": "string",
     "enum": [
      "CANCEL_REFUND_REASON_UNKNOWN",
      "FEATURE_NOT_WORKING",
      "FRIEND_OR_FAMILY_CHARGES",
      "NO_LONGER_WANTED_REMORSE",
      "PURCHASE_BY_ACCIDENT",
      "SELF_SERVICE_REFUND",
      "UNRECOGNIZED_CHARGES_PAYMENT_FRAUD"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "revokeAccess": {
     "type": "boolean"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "CancelComponentsResponse": {
   "id": "CancelComponentsResponse",
   "type": "object",
   "properties": {
    "componentTokens": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "result": {
     "type": "string",
     "enum": [
      "ALREADY_CANCELED",
      "APPROVED",
      "CANCEL_RESULT_UNKNOWN",
      "CANCEL_RETRIABLE",
      "PERMANENT_CANCEL_FAILED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "CancelEntitlementRequest": {
   "id": "CancelEntitlementRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "entitlementToken": {
     "type": "string"
    },
    "entitlementTokens": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "reason": {
     "type": "string",
     "enum": [
      "CANCEL_REFUND_REASON_UNKNOWN",
      "FEATURE_NOT_WORKING",
      "FRIEND_OR_FAMILY_CHARGES",
      "NO_LONGER_WANTED_REMORSE",
      "PURCHASE_BY_ACCIDENT",
      "SELF_SERVICE_REFUND",
      "UNRECOGNIZED_CHARGES_PAYMENT_FRAUD"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "revokeAccess": {
     "type": "boolean"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "CancelEntitlementResponse": {
   "id": "CancelEntitlementResponse",
   "type": "object",
   "properties": {
    "cancelResultInfo": {
     "type": "array",
     "items": {
      "$ref": "CancelResultInfo"
     }
    },
    "entitlementToken": {
     "type": "string"
    },
    "result": {
     "type": "string",
     "enum": [
      "ALREADY_CANCELED",
      "APPROVED",
      "CANCEL_RESULT_UNKNOWN",
      "CANCEL_RETRIABLE",
      "PERMANENT_CANCEL_FAILED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "CancelHardwareOrderRequest": {
   "id": "CancelHardwareOrderRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "CancelHistorySummaryInfo": {
   "id": "CancelHistorySummaryInfo",
   "type": "object",
   "properties": {
    "cancelResult": {
     "type": "string",
     "enum": [
      "ALREADY_CANCELED",
      "APPROVED",
      "CANCEL_RESULT_UNKNOWN",
      "CANCEL_RETRIABLE",
      "PERMANENT_CANCEL_FAILED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "numberOfCancels": {
     "type": "integer",
     "format": "int32"
    },
    "productType": {
     "type": "string",
     "enum": [
      "BUNDLE",
      "LIVE_EVENT",
      "MOVIE",
      "PRODUCT_TYPE_UNKNOWN",
      "RED",
      "SEASON",
      "SHOW",
      "UNPLUGGED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "revoke": {
     "type": "boolean"
    }
   }
  },
  "CancelInfo": {
   "id": "CancelInfo",
   "type": "object",
   "properties": {
    "cancelReason": {
     "type": "string",
     "enum": [
      "CANCEL_REASON_NOT_SET",
      "INVALID_ADDRESS",
      "OTHER",
      "PAYMENT_ISSUE",
      "USER_INITIATED",
      "USER_REQUESTED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "cancelTime": {
     "type": "string"
    }
   }
  },
  "CancelResultInfo": {
   "id": "CancelResultInfo",
   "type": "object",
   "properties": {
    "entitlementToken": {
     "type": "string"
    },
    "result": {
     "type": "string",
     "enum": [
      "ALREADY_CANCELED",
      "APPROVED",
      "CANCEL_RESULT_UNKNOWN",
      "CANCEL_RETRIABLE",
      "PERMANENT_CANCEL_FAILED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "CancelRmaRequest": {
   "id": "CancelRmaRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "reason": {
     "type": "string",
     "enum": [
      "CANCEL_REASON_NOT_SET",
      "CUSTOMER_CHANGED_MIND",
      "FIX_AGENT_ERROR",
      "OTHER"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "CancelRmaResponse": {
   "id": "CancelRmaResponse",
   "type": "object",
   "properties": {
    "result": {
     "type": "string",
     "enum": [
      "CANCEL_RESULT_NOT_SET",
      "SUCCESSFUL",
      "UNSUCCESSFUL_CART_LINK_USED",
      "UNSUCCESSFUL_NOT_PENDING",
      "UNSUCCESSFUL_UNKNOWN"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "CancelSendRequest": {
   "id": "CancelSendRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    }
   }
  },
  "CancelSubscriptionRequest": {
   "id": "CancelSubscriptionRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "customerEmail": {
     "type": "string"
    },
    "locale": {
     "type": "string"
    },
    "reason": {
     "type": "string",
     "enum": [
      "CANCEL_REASON_ACCIDENTAL_PURCHASE",
      "CANCEL_REASON_DEFECTIVE",
      "CANCEL_REASON_DID_NOT_RECEIVE",
      "CANCEL_REASON_FRAUD",
      "CANCEL_REASON_FRIENDLY_FRAUD",
      "CANCEL_REASON_REMORSE",
      "CANCEL_REASON_UNSPECIFIED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "ssoCookie": {
     "type": "string"
    },
    "subscription": {
     "$ref": "Subscription"
    }
   }
  },
  "CancelSubscriptionResponse": {
   "id": "CancelSubscriptionResponse",
   "type": "object",
   "properties": {
    "cancelRejectionReason": {
     "type": "string",
     "enum": [
      "CANCEL_REJECTION_REASON_UNSPECIFIED",
      "SUBSCRIPTION_IS_NOT_CANCELLABLE"
     ],
     "enumDescriptions": [
      "",
      ""
     ]
    }
   }
  },
  "CannedResponse": {
   "id": "CannedResponse",
   "type": "object",
   "properties": {
    "kmsId": {
     "type": "integer",
     "format": "int32"
    },
    "locale": {
     "type": "string"
    },
    "type": {
     "type": "string",
     "enum": [
      "CHAT",
      "EMAIL",
      "EMAIL_AND_CHAT",
      "UNKNOWN_CHANNEL_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "CannedResponse1": {
   "id": "CannedResponse1",
   "type": "object",
   "properties": {
    "kmsId": {
     "type": "integer",
     "format": "int32"
    },
    "locale": {
     "type": "string"
    },
    "type": {
     "type": "string",
     "enum": [
      "CHAT",
      "EMAIL",
      "UNKNOWN_CHANNEL_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "url": {
     "type": "string"
    }
   }
  },
  "CannedResponseAction": {
   "id": "CannedResponseAction",
   "type": "object",
   "properties": {
    "cannedResponseIds": {
     "type": "array",
     "items": {
      "type": "integer",
      "format": "int32"
     }
    }
   }
  },
  "CardLookupCriteria": {
   "id": "CardLookupCriteria",
   "type": "object",
   "properties": {
    "activationNumber": {
     "type": "string"
    },
    "redemptionCode": {
     "type": "string"
    }
   }
  },
  "Case": {
   "id": "Case",
   "type": "object",
   "properties": {
    "agentUpdateTimeMap": {
     "type": "object",
     "additionalProperties": {
      "type": "string"
     }
    },
    "assignee": {
     "$ref": "Assignee1"
    },
    "attributeMap": {
     "type": "object",
     "additionalProperties": {
      "$ref": "Attribute1"
     }
    },
    "caseId": {
     "type": "string"
    },
    "communicationInfo": {
     "$ref": "CommunicationInfo"
    },
    "createTime": {
     "type": "string"
    },
    "creator": {
     "$ref": "Source"
    },
    "customer": {
     "$ref": "Customer"
    },
    "dueByTime": {
     "type": "string"
    },
    "issue": {
     "$ref": "Issue"
    },
    "name": {
     "type": "string"
    },
    "priority": {
     "type": "integer",
     "format": "int32"
    },
    "relations": {
     "type": "array",
     "items": {
      "$ref": "Relation1"
     }
    },
    "state": {
     "type": "string",
     "enum": [
      "ASSIGNED",
      "BLOCKED_BY",
      "FINISHED",
      "IN_CONSULT",
      "NEED_INFO",
      "NEW",
      "SOLUTION_OFFERED",
      "UNASSIGNED",
      "UNKNOWN_CASE_STATE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "transitionTime": {
     "type": "string"
    },
    "updateTime": {
     "type": "string"
    },
    "workflowInfo": {
     "$ref": "WorkflowInfo"
    }
   }
  },
  "CaseData": {
   "id": "CaseData",
   "type": "object",
   "properties": {
    "assignee": {
     "$ref": "Assignee2"
    },
    "caseId": {
     "type": "string"
    },
    "categories": {
     "type": "array",
     "items": {
      "$ref": "Category1"
     }
    },
    "productName": {
     "type": "string"
    },
    "state": {
     "type": "string",
     "enum": [
      "ASSIGNED",
      "BLOCKED_BY",
      "FINISHED",
      "IN_CONSULT",
      "NEED_INFO",
      "NEW",
      "SOLUTION_OFFERED",
      "UNASSIGNED",
      "UNKNOWN_CASE_STATE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "CasesReviewKey": {
   "id": "CasesReviewKey",
   "type": "object",
   "properties": {
    "review3Id": {
     "type": "string"
    },
    "reviewId": {
     "type": "string"
    },
    "targetUnderReview": {
     "type": "string"
    },
    "token": {
     "type": "string"
    }
   }
  },
  "CasesTransactionIdentifier": {
   "id": "CasesTransactionIdentifier",
   "type": "object",
   "properties": {
    "orderId": {
     "type": "string"
    },
    "transactionId": {
     "type": "string"
    },
    "transactionType": {
     "type": "string",
     "enum": [
      "GOOGLE_PLAY",
      "GOOGLE_STORE",
      "P2P_RECEIVER",
      "P2P_SENDER",
      "TAP_AND_PAY",
      "UNKNOWN_WALLET_TRANSACTION_TYPE",
      "WALLET_CARD",
      "YOUTUBE_PURCHASE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "CasesWorkflow": {
   "id": "CasesWorkflow",
   "type": "object",
   "properties": {
    "hardwareOrderWorkflow": {
     "$ref": "HardwareOrderWorkflow"
    },
    "walletUnauthCharges": {
     "$ref": "UnauthorizedChargesWorkflow"
    }
   }
  },
  "Category": {
   "id": "Category",
   "type": "object",
   "properties": {
    "isBaseline": {
     "type": "boolean"
    },
    "path": {
     "$ref": "Path"
    }
   }
  },
  "Category1": {
   "id": "Category1",
   "type": "object",
   "properties": {
    "isBaseline": {
     "type": "boolean"
    },
    "path": {
     "$ref": "Path1"
    }
   }
  },
  "Category2": {
   "id": "Category2",
   "type": "object",
   "properties": {
    "nodes": {
     "type": "array",
     "items": {
      "$ref": "Node2"
     }
    }
   }
  },
  "Category3": {
   "id": "Category3",
   "type": "object",
   "properties": {
    "nodes": {
     "type": "array",
     "items": {
      "$ref": "Node3"
     }
    }
   }
  },
  "Category4": {
   "id": "Category4",
   "type": "object",
   "properties": {
    "nodes": {
     "type": "array",
     "items": {
      "$ref": "Node4"
     }
    }
   }
  },
  "Category5": {
   "id": "Category5",
   "type": "object",
   "properties": {
    "nodes": {
     "type": "array",
     "items": {
      "$ref": "Node5"
     }
    }
   }
  },
  "CategoryInfo": {
   "id": "CategoryInfo",
   "type": "object",
   "properties": {
    "children": {
     "type": "array",
     "items": {
      "$ref": "CategoryInfo"
     }
    },
    "matchDetail": {
     "$ref": "MatchDetail"
    },
    "name": {
     "type": "string"
    },
    "numChildren": {
     "type": "integer",
     "format": "int32"
    },
    "pathIds": {
     "type": "array",
     "items": {
      "type": "integer",
      "format": "int32"
     }
    },
    "pathNames": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "CategoryPath": {
   "id": "CategoryPath",
   "type": "object",
   "properties": {
    "pathIds": {
     "type": "array",
     "items": {
      "type": "integer",
      "format": "int32"
     }
    }
   }
  },
  "CategoryPath1": {
   "id": "CategoryPath1",
   "type": "object",
   "properties": {
    "nodes": {
     "type": "array",
     "items": {
      "type": "integer",
      "format": "int32"
     }
    }
   }
  },
  "ChannelCount": {
   "id": "ChannelCount",
   "type": "object",
   "properties": {
    "channel": {
     "type": "string",
     "enum": [
      "ADOPTION",
      "CHAT",
      "EMAIL",
      "GOAL",
      "HANGOUT",
      "INCENTIVE",
      "MARKETING_EMAIL",
      "MEETING",
      "NOTE",
      "PHONE",
      "STUB",
      "TRAX",
      "UNKNOWN_EVENT_TYPE",
      "WEB"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "count": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "Charge": {
   "id": "Charge",
   "type": "object",
   "properties": {
    "chargeTime": {
     "type": "string"
    },
    "lineItems": {
     "type": "array",
     "items": {
      "$ref": "TransactionLineItem"
     }
    },
    "localizedChargeTime": {
     "$ref": "LocalizedTimestamp"
    },
    "priceIncludesTax": {
     "type": "boolean"
    },
    "prorated": {
     "type": "boolean"
    },
    "totalAmount": {
     "$ref": "Money"
    }
   }
  },
  "Chat": {
   "id": "Chat",
   "type": "object",
   "properties": {
    "chatPools": {
     "type": "array",
     "items": {
      "$ref": "ChatPool1"
     }
    }
   }
  },
  "Chat1": {
   "id": "Chat1",
   "type": "object",
   "properties": {
    "chatPools": {
     "type": "array",
     "items": {
      "$ref": "ChatPool2"
     }
    }
   }
  },
  "ChatMessage": {
   "id": "ChatMessage",
   "type": "object",
   "properties": {
    "isAgent": {
     "type": "boolean"
    },
    "payload": {
     "type": "string"
    },
    "senderName": {
     "type": "string"
    }
   }
  },
  "ChatPool": {
   "id": "ChatPool",
   "type": "object",
   "properties": {
    "chatPoolId": {
     "type": "string"
    },
    "chatPoolName": {
     "type": "string"
    }
   }
  },
  "ChatPool1": {
   "id": "ChatPool1",
   "type": "object",
   "properties": {
    "chatPoolId": {
     "type": "string"
    },
    "locale": {
     "type": "string"
    }
   }
  },
  "ChatPool2": {
   "id": "ChatPool2",
   "type": "object",
   "properties": {
    "chatPoolId": {
     "type": "string"
    },
    "locale": {
     "type": "string"
    }
   }
  },
  "ChatTransfer": {
   "id": "ChatTransfer",
   "type": "object",
   "properties": {
    "sourceChatPool": {
     "$ref": "ChatPool"
    },
    "targetChatPool": {
     "$ref": "ChatPool"
    }
   }
  },
  "CheckRedeemerRequest": {
   "id": "CheckRedeemerRequest",
   "type": "object",
   "properties": {
    "activationNumber": {
     "type": "string"
    },
    "caseId": {
     "type": "string"
    },
    "emailToCheck": {
     "type": "string"
    },
    "redemptionCode": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "CheckRedeemerResponse": {
   "id": "CheckRedeemerResponse",
   "type": "object",
   "properties": {
    "emailToCheck": {
     "type": "string"
    },
    "isRedeemer": {
     "type": "boolean"
    }
   }
  },
  "CheckWalletAccountResponse": {
   "id": "CheckWalletAccountResponse",
   "type": "object",
   "properties": {
    "hasValidWalletAccount": {
     "type": "boolean"
    }
   }
  },
  "Cohort": {
   "id": "Cohort",
   "type": "object",
   "properties": {
    "canonicalName": {
     "type": "string"
    },
    "displayName": {
     "type": "string"
    },
    "treatmentsId": {
     "type": "string"
    }
   }
  },
  "Cohort1": {
   "id": "Cohort1",
   "type": "object",
   "properties": {
    "canonicalName": {
     "type": "string"
    },
    "displayName": {
     "type": "string"
    },
    "displayStateRestriction": {
     "type": "string",
     "enum": [
      "HIDE",
      "NONE",
      "SHOW",
      "UNKNOWN_DISPLAY_STATE_RESTRICTION"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "Cohort2": {
   "id": "Cohort2",
   "type": "object",
   "properties": {
    "canonicalName": {
     "type": "string"
    },
    "displayName": {
     "type": "string"
    },
    "displayStateRestriction": {
     "type": "string",
     "enum": [
      "HIDE",
      "NONE",
      "SHOW",
      "UNKNOWN_DISPLAY_STATE_RESTRICTION"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "formId": {
     "type": "string"
    },
    "helpcenterName": {
     "type": "string"
    },
    "treatmentsId": {
     "type": "string"
    }
   }
  },
  "CohortMetadataCollection": {
   "id": "CohortMetadataCollection",
   "type": "object",
   "properties": {
    "cohort": {
     "$ref": "Cohort"
    },
    "formMetadata": {
     "$ref": "FormMetadata"
    }
   }
  },
  "Communication": {
   "id": "Communication",
   "type": "object",
   "properties": {
    "allowsCaseSplit": {
     "type": "boolean"
    },
    "attachments": {
     "type": "array",
     "items": {
      "$ref": "AttachmentInfo"
     }
    },
    "authenticationInfo": {
     "$ref": "AuthenticationInfo"
    },
    "caseId": {
     "type": "string"
    },
    "communicationId": {
     "type": "string"
    },
    "consultInfo": {
     "$ref": "ConsultInfo"
    },
    "contentInfo": {
     "$ref": "ContentInfo"
    },
    "draftInfo": {
     "$ref": "DraftInfo"
    },
    "email": {
     "$ref": "Email"
    },
    "escalationInfo": {
     "$ref": "EscalationInfo"
    },
    "form": {
     "$ref": "Form"
    },
    "inResponseTo": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "note": {
     "$ref": "Note"
    },
    "phoneInfo": {
     "$ref": "PhoneInfo"
    },
    "realTime": {
     "$ref": "RealTime"
    },
    "recipients": {
     "type": "array",
     "items": {
      "$ref": "Identity"
     }
    },
    "routingInfo": {
     "$ref": "RoutingInfo"
    },
    "sender": {
     "$ref": "Identity"
    },
    "source": {
     "$ref": "Source"
    },
    "subject": {
     "type": "string"
    },
    "updateTime": {
     "type": "string"
    }
   }
  },
  "CommunicationInfo": {
   "id": "CommunicationInfo",
   "type": "object",
   "properties": {
    "lastClosedTime": {
     "type": "string"
    },
    "lastCommunicationTime": {
     "type": "string"
    },
    "lastIncomingEmailTime": {
     "type": "string"
    },
    "lastOutgoingCommunicationTime": {
     "type": "string"
    },
    "lastOutgoingEmailTime": {
     "type": "string"
    },
    "numCommunications": {
     "type": "integer",
     "format": "int32"
    },
    "numConsults": {
     "type": "integer",
     "format": "int32"
    },
    "numIncomingEmails": {
     "type": "integer",
     "format": "int32"
    },
    "numOutgoingEmails": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "ComponentData": {
   "id": "ComponentData",
   "type": "object",
   "properties": {
    "components": {
     "type": "array",
     "items": {
      "$ref": "SubscriptionComponent"
     }
    }
   }
  },
  "ComponentToken": {
   "id": "ComponentToken",
   "type": "object",
   "properties": {
    "token": {
     "type": "string"
    }
   }
  },
  "ConsultAction": {
   "id": "ConsultAction",
   "type": "object",
   "properties": {
    "consultDifm": {
     "$ref": "DifmAction"
    },
    "postConsultAnswerHelpCenter": {
     "type": "string"
    },
    "postConsultAnswerId": {
     "type": "string"
    }
   }
  },
  "ConsultInfo": {
   "id": "ConsultInfo",
   "type": "object"
  },
  "ConsultSettings": {
   "id": "ConsultSettings",
   "type": "object",
   "properties": {
    "topCategory": {
     "$ref": "Category2"
    }
   }
  },
  "Contact": {
   "id": "Contact",
   "type": "object",
   "properties": {
    "contactName": {
     "type": "string"
    },
    "emailAddress": {
     "$ref": "EmailAddress"
    }
   }
  },
  "ContactInfo": {
   "id": "ContactInfo",
   "type": "object",
   "properties": {
    "callbackNumber": {
     "$ref": "PhoneNumber"
    },
    "contactName": {
     "type": "string"
    },
    "emailAddress": {
     "type": "string"
    }
   }
  },
  "ContentInfo": {
   "id": "ContentInfo",
   "type": "object",
   "properties": {
    "bodyCrIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "footerCrIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "headerCrIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "helpcenterLinkIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "CreateAgentActivityRequest": {
   "id": "CreateAgentActivityRequest",
   "type": "object",
   "properties": {
    "agentActivity": {
     "$ref": "AgentActivity"
    }
   }
  },
  "CreateConsultNoteRequest": {
   "id": "CreateConsultNoteRequest",
   "type": "object",
   "properties": {
    "body": {
     "type": "string"
    },
    "caseId": {
     "type": "string"
    },
    "inReplyTo": {
     "type": "string"
    },
    "isHtml": {
     "type": "boolean"
    },
    "subject": {
     "type": "string"
    }
   }
  },
  "CreateConsultNoteResponse": {
   "id": "CreateConsultNoteResponse",
   "type": "object",
   "properties": {
    "communication": {
     "$ref": "Communication"
    }
   }
  },
  "CreateEmailRequest": {
   "id": "CreateEmailRequest",
   "type": "object",
   "properties": {
    "afterSendSetting": {
     "$ref": "AfterSendSetting"
    },
    "bccAddresses": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "body": {
     "type": "string"
    },
    "cannedResponseIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "caseId": {
     "type": "string"
    },
    "ccAddresses": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "footerIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "fromAddress": {
     "type": "string"
    },
    "headerIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "inReplyTo": {
     "type": "string"
    },
    "isHtml": {
     "type": "boolean"
    },
    "subject": {
     "type": "string"
    },
    "toAddresses": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "CreateEmailResponse": {
   "id": "CreateEmailResponse",
   "type": "object",
   "properties": {
    "communication": {
     "$ref": "Communication"
    }
   }
  },
  "CreateExchangeWithoutReturnRequest": {
   "id": "CreateExchangeWithoutReturnRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "device": {
     "$ref": "LostStolenDevice"
    },
    "shipment": {
     "$ref": "LostStolenShipment"
    },
    "skipAddressValidation": {
     "type": "boolean"
    },
    "ssoCookie": {
     "type": "string"
    },
    "updatedAddress": {
     "$ref": "MailingAddress"
    }
   }
  },
  "CreateExchangeWithoutReturnResponse": {
   "id": "CreateExchangeWithoutReturnResponse",
   "type": "object",
   "properties": {
    "failureType": {
     "type": "string",
     "enum": [
      "FAILURE_TYPE_NOT_SET",
      "FAILURE_TYPE_UNKNOWN",
      "NOTES_INVALID",
      "PHONE_NUMBER_INVALID",
      "RMA_ALREADY_OPEN_FOR_ASSET",
      "SHIPPING_ADDRESS_ADDRESSEE_INVALID",
      "SHIPPING_ADDRESS_CITY_INVALID",
      "SHIPPING_ADDRESS_COUNTRY_CODE_INVALID",
      "SHIPPING_ADDRESS_INVALID",
      "SHIPPING_ADDRESS_LINE_1_INVALID",
      "SHIPPING_ADDRESS_LINE_2_INVALID",
      "SHIPPING_ADDRESS_LINE_3_INVALID",
      "SHIPPING_ADDRESS_POSTAL_CODE_INVALID",
      "SHIPPING_ADDRESS_STATE_PROVINCE_CODE_INVALID",
      "WALLET_ACCOUNT_REQUIRED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "failures": {
     "type": "array",
     "items": {
      "$ref": "RmaFailure"
     }
    },
    "rmaNumber": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "CreateFromHelpCenterDeepLinkRequest": {
   "id": "CreateFromHelpCenterDeepLinkRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "url": {
     "type": "string"
    }
   }
  },
  "CreateNewCaseRequest": {
   "id": "CreateNewCaseRequest",
   "type": "object"
  },
  "CreateNewCaseResponse": {
   "id": "CreateNewCaseResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "CreateNoteConsultCaseRequest": {
   "id": "CreateNoteConsultCaseRequest",
   "type": "object",
   "properties": {
    "attachments": {
     "type": "array",
     "items": {
      "$ref": "Attachment"
     }
    },
    "attributes": {
     "type": "array",
     "items": {
      "$ref": "Attribute1"
     }
    },
    "body": {
     "type": "string"
    },
    "consultFormId": {
     "type": "string"
    },
    "formFields": {
     "type": "array",
     "items": {
      "$ref": "FormField1"
     }
    },
    "issueCategory": {
     "$ref": "Category3"
    },
    "subject": {
     "type": "string"
    },
    "targetCaseCategories": {
     "type": "array",
     "items": {
      "$ref": "Category3"
     }
    },
    "targetTeamId": {
     "type": "string"
    }
   }
  },
  "CreateNoteConsultCaseResponse": {
   "id": "CreateNoteConsultCaseResponse",
   "type": "object",
   "properties": {
    "targetCaseId": {
     "type": "string"
    }
   }
  },
  "CreateNoteRequest": {
   "id": "CreateNoteRequest",
   "type": "object",
   "properties": {
    "body": {
     "type": "string"
    },
    "cannedResponseIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "caseId": {
     "type": "string"
    },
    "isHtml": {
     "type": "boolean"
    },
    "noteType": {
     "type": "string",
     "enum": [
      "PHONE",
      "UNKNOWN_NOTE_TYPE",
      "USER"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "subject": {
     "type": "string"
    }
   }
  },
  "CreateNoteResponse": {
   "id": "CreateNoteResponse",
   "type": "object",
   "properties": {
    "communication": {
     "$ref": "Communication"
    }
   }
  },
  "CreatePitchResponse": {
   "id": "CreatePitchResponse",
   "type": "object",
   "properties": {
    "opportunityId": {
     "type": "string"
    },
    "pitchId": {
     "$ref": "PitchId"
    },
    "status": {
     "$ref": "Status"
    }
   }
  },
  "CreateRealTimeConsultCaseRequest": {
   "id": "CreateRealTimeConsultCaseRequest",
   "type": "object",
   "properties": {
    "attachments": {
     "type": "array",
     "items": {
      "$ref": "Attachment1"
     }
    },
    "attributes": {
     "type": "array",
     "items": {
      "$ref": "Attribute1"
     }
    },
    "body": {
     "type": "string"
    },
    "chatPoolId": {
     "type": "string"
    },
    "consultFormId": {
     "type": "string"
    },
    "formFields": {
     "type": "array",
     "items": {
      "$ref": "FormField2"
     }
    },
    "issueCategory": {
     "$ref": "Category4"
    },
    "subject": {
     "type": "string"
    },
    "targetCaseCategories": {
     "type": "array",
     "items": {
      "$ref": "Category4"
     }
    }
   }
  },
  "CreateRealTimeConsultCaseResponse": {
   "id": "CreateRealTimeConsultCaseResponse",
   "type": "object",
   "properties": {
    "targetCaseId": {
     "type": "string"
    }
   }
  },
  "CreateTroubleshooterSessionRequest": {
   "id": "CreateTroubleshooterSessionRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "issueId": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "CreateWorkflowRequest": {
   "id": "CreateWorkflowRequest",
   "type": "object",
   "properties": {
    "workflow": {
     "$ref": "CasesWorkflow"
    }
   }
  },
  "CreditCard": {
   "id": "CreditCard",
   "type": "object",
   "properties": {
    "billingName": {
     "type": "string"
    },
    "billingPostalCode": {
     "type": "string"
    },
    "cardNumberSuffix": {
     "type": "string"
    },
    "creditCardToken": {
     "type": "string"
    },
    "creditCardType": {
     "$ref": "CreditCardType"
    }
   }
  },
  "CreditCard1": {
   "id": "CreditCard1",
   "type": "object",
   "properties": {
    "creditCardSuffix": {
     "type": "string"
    },
    "creditCardType": {
     "type": "string",
     "enum": [
      "AMEX",
      "CARTES_BANCAIRES",
      "DISCOVER",
      "JCB",
      "MASTERCARD",
      "UKNOWN_AUTHENTICATION_CARD_TYPE",
      "VISA"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "creditCardTypeToken": {
     "type": "string"
    }
   }
  },
  "CreditCardType": {
   "id": "CreditCardType",
   "type": "object",
   "properties": {
    "backgroundUrl": {
     "type": "string"
    },
    "creditCardTypeToken": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "displayName": {
     "type": "string"
    },
    "logoUrl": {
     "type": "string"
    }
   }
  },
  "Customer": {
   "id": "Customer",
   "type": "object",
   "properties": {
    "attributeMap": {
     "type": "object",
     "additionalProperties": {
      "$ref": "Attribute1"
     }
    },
    "authentication": {
     "$ref": "Authentication"
    },
    "cohorts": {
     "type": "array",
     "items": {
      "$ref": "Cohort1"
     }
    },
    "contact": {
     "$ref": "ContactInfo"
    },
    "gaiaAccountStatus": {
     "type": "string",
     "enum": [
      "ACTIVE",
      "DELETED",
      "DISABLED",
      "INVALID",
      "PURGED",
      "UNKNOWN_GAIA_ACCOUNT_STATUS"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "profileImageUrl": {
     "type": "string"
    },
    "timezone": {
     "$ref": "Timezone"
    }
   }
  },
  "CustomerAnswer": {
   "id": "CustomerAnswer",
   "type": "object",
   "properties": {
    "bankAccount": {
     "$ref": "BankAccount1"
    },
    "creditCard": {
     "$ref": "CreditCard1"
    },
    "dcb": {
     "$ref": "Dcb"
    },
    "paypal": {
     "$ref": "Paypal1"
    },
    "phoneNumber": {
     "$ref": "PhoneNumber"
    },
    "playBalance": {
     "$ref": "Money"
    },
    "postalCode": {
     "type": "string"
    },
    "questionToken": {
     "type": "string"
    },
    "walletBalance": {
     "$ref": "Money"
    }
   }
  },
  "CustomerDocsSubmissionStatus": {
   "id": "CustomerDocsSubmissionStatus",
   "type": "object",
   "properties": {
    "hasSubmittedDocs": {
     "type": "boolean"
    },
    "submitTime": {
     "type": "string"
    }
   }
  },
  "CustomerIssue": {
   "id": "CustomerIssue",
   "type": "object",
   "properties": {
    "description": {
     "type": "string"
    },
    "displayName": {
     "type": "string"
    },
    "issueFailures": {
     "type": "array",
     "items": {
      "$ref": "IssueFailure"
     }
    },
    "issueId": {
     "type": "string"
    },
    "issueStatus": {
     "type": "string",
     "enum": [
      "FAIL",
      "ISSUE_STATUS_UNSPECIFIED",
      "NOT_RUN",
      "PASS"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "rank": {
     "type": "number",
     "format": "double"
    }
   }
  },
  "Date": {
   "id": "Date",
   "type": "object",
   "properties": {
    "day": {
     "type": "integer",
     "format": "int32"
    },
    "month": {
     "type": "integer",
     "format": "int32"
    },
    "year": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "Dcb": {
   "id": "Dcb",
   "type": "object",
   "properties": {
    "phoneNumber": {
     "type": "string"
    }
   }
  },
  "DeauthenticateRequest": {
   "id": "DeauthenticateRequest",
   "type": "object",
   "properties": {
    "customerEmail": {
     "type": "string"
    }
   }
  },
  "DeauthenticateResponse": {
   "id": "DeauthenticateResponse",
   "type": "object",
   "properties": {
    "customer": {
     "$ref": "Customer"
    }
   }
  },
  "DedupeRequest": {
   "id": "DedupeRequest",
   "type": "object",
   "properties": {
    "duplicateCaseIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "reason": {
     "type": "string"
    }
   }
  },
  "DedupeResponse": {
   "id": "DedupeResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "DeliveryInfo": {
   "id": "DeliveryInfo",
   "type": "object",
   "properties": {
    "deliveryStatus": {
     "type": "string",
     "enum": [
      "FAILED",
      "NOT_SCHEDULED",
      "PENDING",
      "SENT",
      "UNKNOWN_DELIVERY_STATUS"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "DesktopScreenshareAcceptEvent": {
   "id": "DesktopScreenshareAcceptEvent",
   "type": "object"
  },
  "DesktopScreenshareAutoDeclineEvent": {
   "id": "DesktopScreenshareAutoDeclineEvent",
   "type": "object",
   "properties": {
    "declineType": {
     "type": "string",
     "enum": [
      "NOT_SUPPORTED",
      "UNKNOWN_AUTO_DECLINE_TYPE"
     ],
     "enumDescriptions": [
      "",
      ""
     ]
    }
   }
  },
  "DesktopScreenshareCancelEvent": {
   "id": "DesktopScreenshareCancelEvent",
   "type": "object"
  },
  "DesktopScreenshareCleanupEvent": {
   "id": "DesktopScreenshareCleanupEvent",
   "type": "object"
  },
  "DesktopScreenshareConnectEvent": {
   "id": "DesktopScreenshareConnectEvent",
   "type": "object"
  },
  "DesktopScreenshareDeclineEvent": {
   "id": "DesktopScreenshareDeclineEvent",
   "type": "object"
  },
  "DesktopScreenshareDisconnectEvent": {
   "id": "DesktopScreenshareDisconnectEvent",
   "type": "object"
  },
  "DesktopScreenshareEndEvent": {
   "id": "DesktopScreenshareEndEvent",
   "type": "object",
   "properties": {
    "agentEnded": {
     "type": "boolean"
    }
   }
  },
  "DesktopScreenshareEvent": {
   "id": "DesktopScreenshareEvent",
   "type": "object",
   "properties": {
    "acceptEvent": {
     "$ref": "DesktopScreenshareAcceptEvent"
    },
    "autoDeclineEvent": {
     "$ref": "DesktopScreenshareAutoDeclineEvent"
    },
    "cancelEvent": {
     "$ref": "DesktopScreenshareCancelEvent"
    },
    "cleanupEvent": {
     "$ref": "DesktopScreenshareCleanupEvent"
    },
    "connectEvent": {
     "$ref": "DesktopScreenshareConnectEvent"
    },
    "declineEvent": {
     "$ref": "DesktopScreenshareDeclineEvent"
    },
    "disconnectEvent": {
     "$ref": "DesktopScreenshareDisconnectEvent"
    },
    "endEvent": {
     "$ref": "DesktopScreenshareEndEvent"
    },
    "initiateEvent": {
     "$ref": "DesktopScreenshareInitiateEvent"
    },
    "invitationId": {
     "type": "string"
    },
    "inviteEvent": {
     "$ref": "DesktopScreenshareInviteEvent"
    },
    "joinEvent": {
     "$ref": "DesktopScreenshareJoinEvent"
    },
    "leaveEvent": {
     "$ref": "DesktopScreenshareLeaveEvent"
    },
    "receivedEvent": {
     "$ref": "DesktopScreenshareReceivedEvent"
    },
    "revivedEvent": {
     "$ref": "DesktopScreenshareRevivedEvent"
    },
    "startingConnectEvent": {
     "$ref": "DesktopScreenshareStartingConnectEvent"
    }
   }
  },
  "DesktopScreenshareInitiateEvent": {
   "id": "DesktopScreenshareInitiateEvent",
   "type": "object",
   "properties": {
    "screensharingState": {
     "type": "string",
     "enum": [
      "SUPPORTED",
      "UNKNOWN",
      "UNKNOWN_SCREENSHARING_STATE",
      "UNSUPPORTED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "DesktopScreenshareInviteEvent": {
   "id": "DesktopScreenshareInviteEvent",
   "type": "object"
  },
  "DesktopScreenshareJoinEvent": {
   "id": "DesktopScreenshareJoinEvent",
   "type": "object",
   "properties": {
    "agentJoined": {
     "type": "boolean"
    }
   }
  },
  "DesktopScreenshareLeaveEvent": {
   "id": "DesktopScreenshareLeaveEvent",
   "type": "object",
   "properties": {
    "agentLeft": {
     "type": "boolean"
    }
   }
  },
  "DesktopScreenshareReceivedEvent": {
   "id": "DesktopScreenshareReceivedEvent",
   "type": "object"
  },
  "DesktopScreenshareRevivedEvent": {
   "id": "DesktopScreenshareRevivedEvent",
   "type": "object"
  },
  "DesktopScreenshareStartingConnectEvent": {
   "id": "DesktopScreenshareStartingConnectEvent",
   "type": "object"
  },
  "Device": {
   "id": "Device",
   "type": "object",
   "properties": {
    "actions": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "ADVANCED_EXCHANGE",
       "EXCHANGE",
       "EXCHANGE_WITHOUT_RETURN",
       "REPAIR",
       "RETURN",
       "UNKNOWN_ACTION",
       "WARRANTY_REFUND"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "countryOfPurchase": {
     "type": "string"
    },
    "deviceClass": {
     "type": "string",
     "enum": [
      "CHROMEBOOK",
      "UNKNOWN_DEVICE_CLASS"
     ],
     "enumDescriptions": [
      "",
      ""
     ]
    },
    "deviceId": {
     "type": "string"
    },
    "displayName": {
     "type": "string"
    },
    "doaEndDate": {
     "type": "string"
    },
    "doaExpired": {
     "type": "boolean"
    },
    "exchangeGpn": {
     "type": "string"
    },
    "extendedWarrantyActive": {
     "type": "boolean"
    },
    "extendedWarrantyContractId": {
     "type": "string"
    },
    "extendedWarrantyEndDate": {
     "type": "string"
    },
    "extendedWarrantyExpired": {
     "type": "boolean"
    },
    "gpn": {
     "type": "string"
    },
    "hashedFullDeviceId": {
     "type": "string"
    },
    "noRmaTypeReason": {
     "type": "string",
     "enum": [
      "CONVERTED_TO_DASH_R",
      "GOOGLE_SHOPPING_EXPRESS",
      "NO_DATA_AVAILABLE",
      "NO_LONGER_SUPPORTED",
      "NO_RMA_REASON_SET",
      "UNKNOWN_NO_RMA_REASON",
      "UNSUPPORTED_3PR_DEVICE",
      "WALK_IN_CENTERS_ONLY"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "orderNumber": {
     "type": "string"
    },
    "pointOfPurchase": {
     "type": "string",
     "enum": [
      "BULK_ORDER",
      "EVENT_GIVEAWAY",
      "GOOGLER_GIFT",
      "GOOGLE_PLAY",
      "RETAIL",
      "UNKNOWN_POINT_OF_PURCHASE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "purchaseDate": {
     "type": "string"
    },
    "remorseEndDate": {
     "type": "string"
    },
    "remorseExpired": {
     "type": "boolean"
    },
    "replacementDevices": {
     "type": "array",
     "items": {
      "$ref": "ReplacementDevice"
     }
    },
    "rmaTypes": {
     "type": "array",
     "items": {
      "$ref": "RmaType"
     }
    },
    "rmas": {
     "type": "array",
     "items": {
      "$ref": "DeviceRma"
     }
    },
    "shipDate": {
     "type": "string"
    },
    "shipmentId": {
     "type": "string"
    },
    "supportedBy3pr": {
     "type": "boolean"
    },
    "warrantyEndDate": {
     "type": "string"
    },
    "warrantyExpired": {
     "type": "boolean"
    }
   }
  },
  "Device1": {
   "id": "Device1",
   "type": "object",
   "properties": {
    "action": {
     "type": "string",
     "enum": [
      "ADVANCED_EXCHANGE",
      "EXCHANGE",
      "EXCHANGE_WITHOUT_RETURN",
      "REPAIR",
      "RETURN",
      "RMA_ACTION_NOT_SET",
      "WARRANTY_REFUND"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "deviceId": {
     "type": "string"
    },
    "displayName": {
     "type": "string"
    },
    "hashedFullDeviceId": {
     "type": "string"
    },
    "rmaNumber": {
     "type": "string"
    },
    "state": {
     "type": "string",
     "enum": [
      "RMA_CANCELLED",
      "RMA_COMPLETED",
      "RMA_INCOMPLETE",
      "RMA_PENDING",
      "RMA_STATE_NOT_SET",
      "RMA_SUBMITTED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "Device2": {
   "id": "Device2",
   "type": "object",
   "properties": {
    "androidId": {
     "type": "string"
    },
    "displayName": {
     "type": "string"
    },
    "imei": {
     "type": "string"
    },
    "lastUsedTime": {
     "type": "string"
    },
    "manufacturer": {
     "type": "string"
    },
    "modelName": {
     "type": "string"
    },
    "registrationTime": {
     "type": "string"
    }
   }
  },
  "DeviceRma": {
   "id": "DeviceRma",
   "type": "object",
   "properties": {
    "authHold": {
     "type": "boolean"
    },
    "availableFlows": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "GENERATE_PACKING_LABEL",
       "GENERATE_REPLACEMENT_CART_LINK",
       "GENERATE_SHIPPING_LABEL",
       "SUBMIT_RMA",
       "UNKNOWN_FLOW",
       "UPDATE_ADDRESS_AND_SEND_SHIPPING_EMAIL"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "cancelable": {
     "type": "boolean"
    },
    "identifier": {
     "$ref": "RmaIdentifier"
    },
    "state": {
     "type": "string",
     "enum": [
      "RMA_CANCELLED",
      "RMA_COMPLETED",
      "RMA_INCOMPLETE",
      "RMA_PENDING",
      "RMA_SUBMITTED",
      "UNKNOWN_RMA_STATE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "DifmAction": {
   "id": "DifmAction",
   "type": "object",
   "properties": {
    "difmId": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "DirectCarrierBilling": {
   "id": "DirectCarrierBilling",
   "type": "object",
   "properties": {
    "phoneNumber": {
     "type": "string"
    }
   }
  },
  "DiscardDraftRequest": {
   "id": "DiscardDraftRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    }
   }
  },
  "DiscardDraftResponse": {
   "id": "DiscardDraftResponse",
   "type": "object"
  },
  "Docid": {
   "id": "Docid",
   "type": "object",
   "properties": {
    "backend": {
     "type": "string"
    },
    "backendDocid": {
     "type": "string"
    },
    "type": {
     "type": "string",
     "enum": [
      "ANDROID_APK",
      "ANDROID_APP",
      "ANDROID_DEVELOPER",
      "ANDROID_DYNAMIC_MODULE",
      "ANDROID_IN_APP_ITEM",
      "APK",
      "APPS_RECS_TOPIC_METADATA",
      "APPS_TOPIC",
      "BADGE",
      "BADGE_CONTAINER",
      "BOOKS_EDITORIAL_ARTICLE",
      "BOOKS_EXPLORE_ANNOUNCEMENT",
      "BOOKS_EXPLORE_NEWSSTAND_POST",
      "BOOKS_EXPLORE_YOUTUBE_VIDEO",
      "BUNDLE",
      "CHROME_APP",
      "CLUSTER",
      "CONTAINER",
      "DOCUMENT_TYPE_UNSPECIFIED",
      "DYNAMIC_ANDROID_IN_APP_ITEM",
      "DYNAMIC_SUBSCRIPTION",
      "EDITORIAL",
      "ENTERTAINMENT_STORY",
      "HARDWARE",
      "HARDWARE_PROMOTION",
      "HARDWARE_SHIPPING",
      "LINK",
      "MAGAZINE",
      "MAGAZINE_ISSUE",
      "MOVIES_PERSISTED_CLUSTER",
      "MOVIE_PERSON",
      "MUSIC_ACCESS",
      "MUSIC_ADAPTIVE_HOME_CARD_IMAGE",
      "MUSIC_ALBUM",
      "MUSIC_ARTIST",
      "MUSIC_AUDIO_AD",
      "MUSIC_BROWSE_CATEGORY",
      "MUSIC_CONCERT",
      "MUSIC_NOW_MODULE_HEADING",
      "MUSIC_PODCAST_EPISODE",
      "MUSIC_PODCAST_SERIES",
      "MUSIC_SITUATION",
      "MUSIC_SONG",
      "MUSIC_STATION",
      "MUSIC_USER_PLAYLIST",
      "MUSIC_VENUE",
      "NEWS_EDITION",
      "NEWS_ISSUE",
      "OCEAN_AUDIOBOOK",
      "OCEAN_AUTHOR",
      "OCEAN_BOOK",
      "OCEAN_BOOK_SERIES",
      "PERSON",
      "PLAY_BALANCE_TOP_UP",
      "PLAY_STORED_VALUE",
      "STREAM",
      "SUBSCRIPTION",
      "SUGGEST_CONTAINER",
      "TALENT",
      "TOPIC",
      "TV_BROADCASTER",
      "TV_EPISODE",
      "TV_SEASON",
      "TV_SHOW",
      "VETTED_APP_FEATURE",
      "VIDEO_DISTRIBUTOR",
      "VOUCHER",
      "YOUTUBE_MOVIE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "DraftInfo": {
   "id": "DraftInfo",
   "type": "object",
   "properties": {
    "transitionToState": {
     "type": "string",
     "enum": [
      "ASSIGNED",
      "BLOCKED_BY",
      "FINISHED",
      "IN_CONSULT",
      "NEED_INFO",
      "NEW",
      "SOLUTION_OFFERED",
      "UNASSIGNED",
      "UNKNOWN_CASE_STATE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "Duplicate": {
   "id": "Duplicate",
   "type": "object",
   "properties": {
    "sourceCaseId": {
     "type": "string"
    },
    "targetCaseId": {
     "type": "string"
    }
   }
  },
  "EasterEggSettings": {
   "id": "EasterEggSettings",
   "type": "object",
   "properties": {
    "disableBoostCard": {
     "type": "boolean"
    }
   }
  },
  "Email": {
   "id": "Email",
   "type": "object",
   "properties": {
    "body": {
     "type": "string"
    },
    "deliveryInfo": {
     "$ref": "DeliveryInfo"
    },
    "headers": {
     "$ref": "Headers"
    },
    "isHtml": {
     "type": "boolean"
    },
    "type": {
     "type": "string",
     "enum": [
      "NEW",
      "REPLY",
      "REPLY_ALL",
      "UNKNOWN_EMAIL_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "Email1": {
   "id": "Email1",
   "type": "object",
   "properties": {
    "sla": {
     "type": "string"
    }
   }
  },
  "Email2": {
   "id": "Email2",
   "type": "object",
   "properties": {
    "locale": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "sla": {
     "type": "string"
    }
   }
  },
  "EmailAddress": {
   "id": "EmailAddress",
   "type": "object",
   "properties": {
    "type": {
     "type": "string",
     "enum": [
      "EXTERNAL",
      "PERSONAL_ALIAS",
      "PRODUCT_ALIAS",
      "TEAM_ALIAS",
      "UNKNOWN_EMAIL_ADDRESS_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "value": {
     "type": "string"
    }
   }
  },
  "EmploymentInfo": {
   "id": "EmploymentInfo",
   "type": "object",
   "properties": {
    "employmentType": {
     "type": "string"
    },
    "location": {
     "type": "string"
    },
    "tvcStaffingPartner": {
     "type": "string"
    }
   }
  },
  "Empty": {
   "id": "Empty",
   "type": "object"
  },
  "Entitlement": {
   "id": "Entitlement",
   "type": "object",
   "properties": {
    "actions": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "CANCELABLE",
       "ENTITLEMENT_ACTIONS_UNKNOWN",
       "REVOKABLE"
      ],
      "enumDescriptions": [
       "",
       "",
       ""
      ]
     }
    },
    "badges": {
     "type": "array",
     "items": {
      "$ref": "EntitlementBadge"
     }
    },
    "billingBackend": {
     "type": "string",
     "enum": [
      "BILLING",
      "CDP",
      "PAYMENT_BACKEND_UNDEFINED"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "billingPeriod": {
     "$ref": "Period"
    },
    "cancelTime": {
     "type": "string"
    },
    "componentData": {
     "$ref": "ComponentData"
    },
    "customerTimezone": {
     "type": "string"
    },
    "entitlementToken": {
     "type": "string"
    },
    "hasFuturePayments": {
     "type": "boolean"
    },
    "inFreeTrial": {
     "type": "boolean"
    },
    "isActive": {
     "type": "boolean"
    },
    "isCancelable": {
     "type": "boolean"
    },
    "isRevokable": {
     "type": "boolean"
    },
    "localizedCancelTime": {
     "$ref": "LocalizedTimestamp"
    },
    "localizedPurchaseTime": {
     "$ref": "LocalizedTimestamp"
    },
    "name": {
     "type": "string"
    },
    "orderId": {
     "type": "string"
    },
    "productType": {
     "type": "string",
     "enum": [
      "BUNDLE",
      "LIVE_EVENT",
      "MOVIE",
      "PRODUCT_TYPE_UNKNOWN",
      "RED",
      "SEASON",
      "SHOW",
      "UNPLUGGED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "purchaseTime": {
     "type": "string"
    },
    "redSignals": {
     "$ref": "RedSignals"
    },
    "shmoovieSignals": {
     "$ref": "ShmoovieSignals"
    },
    "state": {
     "type": "string",
     "enum": [
      "ACTIVE_NOT_RENEWING",
      "ACTIVE_RENEWING",
      "ENTITLEMENT_STATE_ERROR",
      "ENTITLEMENT_STATE_UNKNOWN",
      "INACTIVE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "unpluggedSignals": {
     "$ref": "UnpluggedSignals"
    },
    "url": {
     "type": "string"
    },
    "utcOffset": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "EntitlementBadge": {
   "id": "EntitlementBadge",
   "type": "object",
   "properties": {
    "type": {
     "type": "string",
     "enum": [
      "FAMILY_HEAD",
      "FAMILY_MEMBER",
      "FREE_TRIAL",
      "GRACE_PERIOD",
      "IN_FREE_TRIAL",
      "IOS",
      "UNDEFINED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "EntitlementComponent": {
   "id": "EntitlementComponent",
   "type": "object",
   "properties": {
    "accessExpiryTime": {
     "type": "string"
    },
    "accessStartTime": {
     "type": "string"
    },
    "actions": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "CANCELABLE",
       "ENTITLEMENT_ACTIONS_UNKNOWN",
       "REVOKABLE"
      ],
      "enumDescriptions": [
       "",
       "",
       ""
      ]
     }
    },
    "cancelTime": {
     "type": "string"
    },
    "componentToken": {
     "type": "string"
    },
    "entitlementId": {
     "type": "string"
    },
    "hasFuturePayments": {
     "type": "boolean"
    },
    "introductoryPrice": {
     "$ref": "Money"
    },
    "isActive": {
     "type": "boolean"
    },
    "isBasePackage": {
     "type": "boolean"
    },
    "isCancelable": {
     "type": "boolean"
    },
    "isRevokable": {
     "type": "boolean"
    },
    "itemId": {
     "type": "string"
    },
    "lineItemKey": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "localizedAccessExpiryTime": {
     "$ref": "LocalizedTimestamp"
    },
    "localizedAccessStartTime": {
     "$ref": "LocalizedTimestamp"
    },
    "localizedCancelTime": {
     "$ref": "LocalizedTimestamp"
    },
    "localizedTrialEndTime": {
     "$ref": "LocalizedTimestamp"
    },
    "monthlyPrice": {
     "$ref": "Money"
    },
    "state": {
     "type": "string",
     "enum": [
      "ACTIVE_NOT_RENEWING",
      "ACTIVE_RENEWING",
      "ENTITLEMENT_STATE_ERROR",
      "ENTITLEMENT_STATE_UNKNOWN",
      "INACTIVE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "title": {
     "type": "string"
    },
    "trialEndTime": {
     "type": "string"
    },
    "trialPeriod": {
     "$ref": "Period"
    }
   }
  },
  "Entry": {
   "id": "Entry",
   "type": "object",
   "properties": {
    "boolValue": {
     "type": "boolean"
    },
    "doubleValue": {
     "type": "number",
     "format": "double"
    },
    "enumValue": {
     "type": "string"
    },
    "int64Value": {
     "type": "string",
     "format": "int64"
    },
    "intValue": {
     "type": "integer",
     "format": "int32"
    },
    "sources": {
     "type": "array",
     "items": {
      "$ref": "Source"
     }
    },
    "stringValue": {
     "type": "string"
    },
    "timeValue": {
     "type": "string"
    }
   }
  },
  "EnumValue": {
   "id": "EnumValue",
   "type": "object",
   "properties": {
    "displayValue": {
     "type": "string"
    },
    "value": {
     "type": "string"
    }
   }
  },
  "EscalateRequest": {
   "id": "EscalateRequest",
   "type": "object",
   "properties": {
    "escalationId": {
     "type": "string"
    },
    "locale": {
     "type": "string"
    },
    "productId": {
     "type": "string"
    },
    "reason": {
     "type": "string"
    }
   }
  },
  "EscalateResponse": {
   "id": "EscalateResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "EscalateSettings": {
   "id": "EscalateSettings",
   "type": "object"
  },
  "EscalationInfo": {
   "id": "EscalationInfo",
   "type": "object",
   "properties": {
    "agentTransfer": {
     "$ref": "AgentTransfer"
    },
    "chatTransfer": {
     "$ref": "ChatTransfer"
    },
    "escalationTargetName": {
     "type": "string"
    },
    "localeTransfer": {
     "$ref": "LocaleTransfer"
    }
   }
  },
  "EscalationTarget": {
   "id": "EscalationTarget",
   "type": "object",
   "properties": {
    "chat": {
     "$ref": "Chat"
    },
    "email": {
     "$ref": "Email1"
    },
    "targetId": {
     "type": "string"
    },
    "targetName": {
     "type": "string"
    }
   }
  },
  "ExtendedWarrantyInfo": {
   "id": "ExtendedWarrantyInfo",
   "type": "object",
   "properties": {
    "contractId": {
     "type": "string"
    },
    "lineItemId": {
     "type": "integer",
     "format": "int32"
    },
    "price": {
     "$ref": "Money"
    }
   }
  },
  "ExternalToolSettings": {
   "id": "ExternalToolSettings",
   "type": "object",
   "properties": {
    "accountLookupTools": {
     "type": "array",
     "items": {
      "$ref": "AccountLookupTool"
     }
    }
   }
  },
  "FinalizeConsultNoteRequest": {
   "id": "FinalizeConsultNoteRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    }
   }
  },
  "FinalizeConsultNoteResponse": {
   "id": "FinalizeConsultNoteResponse",
   "type": "object",
   "properties": {
    "communication": {
     "$ref": "Communication"
    }
   }
  },
  "FinalizeNoteRequest": {
   "id": "FinalizeNoteRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    }
   }
  },
  "FinalizeNoteResponse": {
   "id": "FinalizeNoteResponse",
   "type": "object",
   "properties": {
    "communication": {
     "$ref": "Communication"
    }
   }
  },
  "FinishRequest": {
   "id": "FinishRequest",
   "type": "object"
  },
  "FinishResponse": {
   "id": "FinishResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "FocusInfo": {
   "id": "FocusInfo",
   "type": "object",
   "properties": {
    "profileImageUrl": {
     "type": "string"
    }
   }
  },
  "Form": {
   "id": "Form",
   "type": "object"
  },
  "FormField": {
   "id": "FormField",
   "type": "object",
   "properties": {
    "label": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "values": {
     "type": "array",
     "items": {
      "$ref": "FormFieldValue"
     }
    }
   }
  },
  "FormField1": {
   "id": "FormField1",
   "type": "object",
   "properties": {
    "formFieldDisplayValues": {
     "type": "array",
     "items": {
      "$ref": "FormFieldValue1"
     }
    },
    "formFieldLabel": {
     "type": "string"
    },
    "formFieldName": {
     "type": "string"
    },
    "formFieldValues": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "FormField2": {
   "id": "FormField2",
   "type": "object",
   "properties": {
    "formFieldDisplayValues": {
     "type": "array",
     "items": {
      "$ref": "FormFieldValue2"
     }
    },
    "formFieldLabel": {
     "type": "string"
    },
    "formFieldName": {
     "type": "string"
    },
    "formFieldValues": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "FormFieldValue": {
   "id": "FormFieldValue",
   "type": "object",
   "properties": {
    "displayValue": {
     "type": "string"
    },
    "value": {
     "type": "string"
    }
   }
  },
  "FormFieldValue1": {
   "id": "FormFieldValue1",
   "type": "object",
   "properties": {
    "displayValue": {
     "type": "string"
    },
    "value": {
     "type": "string"
    }
   }
  },
  "FormFieldValue2": {
   "id": "FormFieldValue2",
   "type": "object",
   "properties": {
    "displayValue": {
     "type": "string"
    },
    "value": {
     "type": "string"
    }
   }
  },
  "FormMetadata": {
   "id": "FormMetadata",
   "type": "object",
   "properties": {
    "formFields": {
     "type": "array",
     "items": {
      "$ref": "FormField"
     }
    },
    "formId": {
     "type": "string"
    },
    "helpcenterName": {
     "type": "string"
    }
   }
  },
  "GetAccountReviewStatusRequest": {
   "id": "GetAccountReviewStatusRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "reviewKey": {
     "$ref": "ReviewKey"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "GetAccountReviewStatusResponse": {
   "id": "GetAccountReviewStatusResponse",
   "type": "object",
   "properties": {
    "reviewAction": {
     "type": "string",
     "enum": [
      "REVIEW_FIX_ACTION_UNSPECIFIED"
     ],
     "enumDescriptions": [
      ""
     ]
    },
    "reviewKey": {
     "$ref": "ReviewKey"
    },
    "reviewState": {
     "type": "string",
     "enum": [
      "ASSIGNED",
      "CLOSED",
      "REVIEW_STATE_UNSPECIFIED",
      "UNASSIGNED",
      "UNKNOWN_REVIEW_STATE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "GetAccountSignalsResponse": {
   "id": "GetAccountSignalsResponse",
   "type": "object",
   "properties": {
    "results": {
     "type": "array",
     "items": {
      "$ref": "AccountSignalResult"
     }
    }
   }
  },
  "GetAgentSearchCountResponse": {
   "id": "GetAgentSearchCountResponse",
   "type": "object",
   "properties": {
    "searchCounts": {
     "type": "array",
     "items": {
      "$ref": "SearchCount"
     }
    }
   }
  },
  "GetAgentUnreadCasesInfoResponse": {
   "id": "GetAgentUnreadCasesInfoResponse",
   "type": "object",
   "properties": {
    "agentUnreadCasesInfo": {
     "$ref": "AgentUnreadCasesInfo"
    }
   }
  },
  "GetAuthenticationCreditCardTypesRequest": {
   "id": "GetAuthenticationCreditCardTypesRequest",
   "type": "object",
   "properties": {
    "customerEmail": {
     "type": "string"
    }
   }
  },
  "GetAuthenticationCreditCardTypesResponse": {
   "id": "GetAuthenticationCreditCardTypesResponse",
   "type": "object",
   "properties": {
    "authenticationCreditCards": {
     "type": "array",
     "items": {
      "$ref": "AuthenticationCreditCard"
     }
    },
    "creditCardTypes": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "AMEX",
       "CARTES_BANCAIRES",
       "DISCOVER",
       "JCB",
       "MASTERCARD",
       "UKNOWN_AUTHENTICATION_CARD_TYPE",
       "VISA"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    }
   }
  },
  "GetAuthenticationQuestionsRequest": {
   "id": "GetAuthenticationQuestionsRequest",
   "type": "object",
   "properties": {
    "agentSsoCookie": {
     "type": "string"
    },
    "customerEmail": {
     "type": "string"
    }
   }
  },
  "GetAuthenticationQuestionsResponse": {
   "id": "GetAuthenticationQuestionsResponse",
   "type": "object",
   "properties": {
    "questionSets": {
     "type": "array",
     "items": {
      "$ref": "QuestionSet"
     }
    }
   }
  },
  "GetAuthenticationResultRequest": {
   "id": "GetAuthenticationResultRequest",
   "type": "object",
   "properties": {
    "agentSsoCookie": {
     "type": "string"
    },
    "customerEmail": {
     "type": "string"
    }
   }
  },
  "GetAuthenticationResultResponse": {
   "id": "GetAuthenticationResultResponse",
   "type": "object",
   "properties": {
    "result": {
     "type": "string",
     "enum": [
      "FAIL",
      "PASS",
      "PENDING",
      "UNKNOWN_RESULT"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "GetBusinessListingsRequest": {
   "id": "GetBusinessListingsRequest",
   "type": "object",
   "properties": {
    "emailAddress": {
     "type": "string"
    }
   }
  },
  "GetBusinessListingsResponse": {
   "id": "GetBusinessListingsResponse",
   "type": "object",
   "properties": {
    "listings": {
     "type": "array",
     "items": {
      "$ref": "Business"
     }
    }
   }
  },
  "GetByDeviceIdResponse": {
   "id": "GetByDeviceIdResponse",
   "type": "object",
   "properties": {
    "device": {
     "$ref": "Device"
    }
   }
  },
  "GetCancellationStatusRequest": {
   "id": "GetCancellationStatusRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "GetCancellationStatusResponse": {
   "id": "GetCancellationStatusResponse",
   "type": "object",
   "properties": {
    "reason": {
     "type": "string",
     "enum": [
      "CANCEL_REASON_ACCIDENTAL_PURCHASE",
      "CANCEL_REASON_DEFECTIVE",
      "CANCEL_REASON_DID_NOT_RECEIVE",
      "CANCEL_REASON_FRAUD",
      "CANCEL_REASON_FRIENDLY_FRAUD",
      "CANCEL_REASON_REMORSE",
      "CANCEL_REASON_UNSPECIFIED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "subscription": {
     "$ref": "Subscription"
    }
   }
  },
  "GetConsultSlaRequest": {
   "id": "GetConsultSlaRequest",
   "type": "object",
   "properties": {
    "channel": {
     "type": "string",
     "enum": [
      "NOTE",
      "UNKNOWN_CHANNEL"
     ],
     "enumDescriptions": [
      "",
      ""
     ]
    },
    "consultFormId": {
     "type": "string"
    },
    "dynamicAttributes": {
     "type": "array",
     "items": {
      "$ref": "Attribute1"
     }
    },
    "issueCategory": {
     "$ref": "Category5"
    },
    "targetCaseCategories": {
     "type": "array",
     "items": {
      "$ref": "Category5"
     }
    }
   }
  },
  "GetConsultSlaResponse": {
   "id": "GetConsultSlaResponse",
   "type": "object",
   "properties": {
    "dueByDuration": {
     "type": "string"
    }
   }
  },
  "GetCustomerSummaryRequest": {
   "id": "GetCustomerSummaryRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "disableEventHistory": {
     "type": "boolean"
    },
    "email": {
     "type": "string"
    },
    "historyCutoff": {
     "type": "string"
    },
    "lastNumberDays": {
     "type": "string",
     "format": "int64"
    },
    "pageSize": {
     "type": "integer",
     "format": "int32"
    },
    "pageToken": {
     "type": "string"
    },
    "productTypes": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "BUNDLE",
       "LIVE_EVENT",
       "MOVIE",
       "PRODUCT_TYPE_UNKNOWN",
       "RED",
       "SEASON",
       "SHOW",
       "UNPLUGGED"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "GetCustomerSummaryResponse": {
   "id": "GetCustomerSummaryResponse",
   "type": "object",
   "properties": {
    "cancelHistory": {
     "type": "array",
     "items": {
      "$ref": "CancelHistorySummaryInfo"
     }
    },
    "entitlements": {
     "type": "array",
     "items": {
      "$ref": "Entitlement"
     }
    },
    "hasOneTimeContentPurchase": {
     "type": "boolean"
    },
    "nextPageToken": {
     "type": "string"
    },
    "offsetFromUtc": {
     "type": "number",
     "format": "double"
    },
    "oneTimeContentPurchaseCount": {
     "type": "integer",
     "format": "int32"
    },
    "refundHistory": {
     "type": "array",
     "items": {
      "$ref": "RefundHistorySummaryInfo"
     }
    },
    "timezone": {
     "type": "string"
    }
   }
  },
  "GetEscalationTargetsResponse": {
   "id": "GetEscalationTargetsResponse",
   "type": "object",
   "properties": {
    "escalationTargets": {
     "type": "array",
     "items": {
      "$ref": "EscalationTarget"
     }
    }
   }
  },
  "GetHardwareOrderDetailRequest": {
   "id": "GetHardwareOrderDetailRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "GetHardwareSignalsRequest": {
   "id": "GetHardwareSignalsRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    }
   }
  },
  "GetHardwareSignalsResponse": {
   "id": "GetHardwareSignalsResponse",
   "type": "object",
   "properties": {
    "hasStandardExchange": {
     "type": "boolean"
    }
   }
  },
  "GetLostStolenEligibilityRequest": {
   "id": "GetLostStolenEligibilityRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "GetLostStolenRefundEligibilityRequest": {
   "id": "GetLostStolenRefundEligibilityRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "GetMailingAddressRequest": {
   "id": "GetMailingAddressRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "isRequiredAction": {
     "type": "boolean"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "GetMyAssignStreamSearchesResponse": {
   "id": "GetMyAssignStreamSearchesResponse",
   "type": "object",
   "properties": {
    "searches": {
     "type": "array",
     "items": {
      "$ref": "Search"
     }
    },
    "teams": {
     "type": "array",
     "items": {
      "$ref": "Team"
     }
    }
   }
  },
  "GetOneTimePurchasesRequest": {
   "id": "GetOneTimePurchasesRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "email": {
     "type": "string"
    },
    "pageSize": {
     "type": "integer",
     "format": "int32"
    },
    "pageToken": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "GetOneTimePurchasesResponse": {
   "id": "GetOneTimePurchasesResponse",
   "type": "object",
   "properties": {
    "nextPageToken": {
     "type": "string"
    },
    "purchases": {
     "type": "array",
     "items": {
      "$ref": "Purchase"
     }
    }
   }
  },
  "GetOrdersRequest": {
   "id": "GetOrdersRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "customerEmail": {
     "type": "string"
    },
    "finskyPurchaseIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "locale": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "GetOrdersResponse": {
   "id": "GetOrdersResponse",
   "type": "object",
   "properties": {
    "orders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    }
   }
  },
  "GetPaymentMethodHijackReviewsStatusRequest": {
   "id": "GetPaymentMethodHijackReviewsStatusRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "reviewKeys": {
     "type": "array",
     "items": {
      "$ref": "ReviewKey"
     }
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "GetPaymentMethodHijackReviewsStatusResponse": {
   "id": "GetPaymentMethodHijackReviewsStatusResponse",
   "type": "object",
   "properties": {
    "allTransactions": {
     "type": "array",
     "items": {
      "$ref": "TransactionsSummary"
     }
    },
    "alreadyRefundedTransactions": {
     "type": "array",
     "items": {
      "$ref": "TransactionsSummary"
     }
    },
    "chargedBackTransactions": {
     "type": "array",
     "items": {
      "$ref": "TransactionsSummary"
     }
    },
    "newlyRefundedTransactions": {
     "type": "array",
     "items": {
      "$ref": "TransactionsSummary"
     }
    },
    "notFoundTransactions": {
     "type": "array",
     "items": {
      "$ref": "PaymentMethodHijackTransaction"
     }
    },
    "notRefundedTransactions": {
     "type": "array",
     "items": {
      "$ref": "PaymentMethodHijackTransaction"
     }
    },
    "resolvedTransactions": {
     "type": "array",
     "items": {
      "$ref": "TransactionsSummary"
     }
    },
    "reviewAgentLdaps": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "reviewKeys": {
     "type": "array",
     "items": {
      "$ref": "ReviewKey"
     }
    },
    "state": {
     "type": "string",
     "enum": [
      "ASSIGNED",
      "CLOSED",
      "REVIEW_STATE_UNSPECIFIED",
      "UNASSIGNED",
      "UNKNOWN_REVIEW_STATE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "underReviewTransactions": {
     "type": "array",
     "items": {
      "$ref": "TransactionsSummary"
     }
    }
   }
  },
  "GetPaymentsInfoRequest": {
   "id": "GetPaymentsInfoRequest",
   "type": "object",
   "properties": {
    "agentSso": {
     "type": "string"
    },
    "caseId": {
     "type": "string"
    }
   }
  },
  "GetPaymentsInfoResponse": {
   "id": "GetPaymentsInfoResponse",
   "type": "object",
   "properties": {
    "paymentsInfo": {
     "$ref": "PaymentsInfo"
    }
   }
  },
  "GetPhoneSettingResponse": {
   "id": "GetPhoneSettingResponse",
   "type": "object",
   "properties": {
    "phoneSetting": {
     "$ref": "PhoneSetting"
    }
   }
  },
  "GetRefundStatusRequest": {
   "id": "GetRefundStatusRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "GetRefundStatusResponse": {
   "id": "GetRefundStatusResponse",
   "type": "object",
   "properties": {
    "approvedOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "approvedOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "escalateOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "escalateOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "failedOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "failedOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "inProgress": {
     "type": "boolean"
    },
    "inProgressOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "inProgressOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "optionalEscalateOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "optionalEscalateOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "processLaterOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "processLaterOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "refundReason": {
     "type": "string",
     "enum": [
      "ACCIDENTAL_PURCHASE",
      "DEFECTIVE",
      "DID_NOT_RECEIVE",
      "FRAUD",
      "FRIENDLY_FRAUD",
      "REFUND_REASON_UNSPECIFIED",
      "REMORSE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "rejectedOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "rejectedOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "sidewinderRejectedOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    }
   }
  },
  "GetReplacementDetailRequest": {
   "id": "GetReplacementDetailRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "GetRmaOrderDetailRequest": {
   "id": "GetRmaOrderDetailRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "GetRoutingTargetsResponse": {
   "id": "GetRoutingTargetsResponse",
   "type": "object",
   "properties": {
    "products": {
     "type": "array",
     "items": {
      "$ref": "Product2"
     }
    }
   }
  },
  "GetShippingAddressRequest": {
   "id": "GetShippingAddressRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "isRequiredAction": {
     "type": "boolean"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "GetShippingCustomerNameRequest": {
   "id": "GetShippingCustomerNameRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "GetShippingCustomerPhoneNumberRequest": {
   "id": "GetShippingCustomerPhoneNumberRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "GetSubscriptionsRequest": {
   "id": "GetSubscriptionsRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "customerEmail": {
     "type": "string"
    },
    "locale": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    },
    "subscriptionIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "GetSubscriptionsResponse": {
   "id": "GetSubscriptionsResponse",
   "type": "object",
   "properties": {
    "subscriptions": {
     "type": "array",
     "items": {
      "$ref": "Subscription"
     }
    }
   }
  },
  "GiftCard": {
   "id": "GiftCard",
   "type": "object",
   "properties": {
    "activationNumber": {
     "type": "string"
    },
    "amount": {
     "$ref": "Money"
    },
    "redemptionDate": {
     "$ref": "Date"
    },
    "redemptionToken": {
     "$ref": "RedemptionToken"
    },
    "status": {
     "type": "string",
     "enum": [
      "ACTIVATED",
      "CANCELED",
      "CREATED",
      "EXPIRED",
      "GIFT_CARD_STATUS_UNSPECIFIED",
      "REDEEMED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "HardwareDiscount": {
   "id": "HardwareDiscount",
   "type": "object",
   "properties": {
    "description": {
     "type": "string"
    },
    "totalAmount": {
     "$ref": "Money"
    }
   }
  },
  "HardwareId": {
   "id": "HardwareId",
   "type": "object",
   "properties": {
    "esn": {
     "type": "string"
    },
    "imei": {
     "type": "string"
    },
    "macAddress": {
     "type": "string"
    },
    "meid": {
     "type": "string"
    },
    "serialNumber": {
     "type": "string"
    },
    "unknown": {
     "type": "string"
    }
   }
  },
  "HardwareOrderDetail": {
   "id": "HardwareOrderDetail",
   "type": "object",
   "properties": {
    "hasRefund": {
     "type": "boolean"
    },
    "orderId": {
     "type": "string"
    },
    "orderTime": {
     "type": "string"
    },
    "shipments": {
     "type": "array",
     "items": {
      "$ref": "HardwareShipment"
     }
    },
    "taxAmount": {
     "$ref": "Money"
    },
    "totalAmount": {
     "$ref": "Money"
    },
    "totalAmountExcludingTax": {
     "$ref": "Money"
    }
   }
  },
  "HardwareOrderLineItem": {
   "id": "HardwareOrderLineItem",
   "type": "object",
   "properties": {
    "description": {
     "type": "string"
    },
    "discounts": {
     "type": "array",
     "items": {
      "$ref": "HardwareDiscount"
     }
    },
    "extendedWarrantyInfo": {
     "$ref": "ExtendedWarrantyInfo"
    },
    "finskyLineNumber": {
     "type": "integer",
     "format": "int32"
    },
    "hardwareId": {
     "$ref": "HardwareId"
    },
    "hasRefund": {
     "type": "boolean"
    },
    "hashedFullHardwareId": {
     "$ref": "HardwareId"
    },
    "lineItemId": {
     "type": "string"
    },
    "listPrice": {
     "$ref": "Money"
    },
    "price": {
     "$ref": "Money"
    },
    "productSku": {
     "type": "string"
    },
    "rmaInfo": {
     "$ref": "RmaInfo"
    },
    "totalWithDiscountsWithoutTax": {
     "$ref": "Money"
    }
   }
  },
  "HardwareOrderLineItemRefund": {
   "id": "HardwareOrderLineItemRefund",
   "type": "object",
   "properties": {
    "description": {
     "type": "string"
    },
    "hardwareId": {
     "$ref": "HardwareId"
    },
    "lineItemId": {
     "type": "string"
    },
    "shipmentId": {
     "type": "string"
    },
    "shippingInfo": {
     "$ref": "ShippingInfo"
    }
   }
  },
  "HardwareOrderListItem": {
   "id": "HardwareOrderListItem",
   "type": "object",
   "properties": {
    "authHold": {
     "type": "boolean"
    },
    "orderId": {
     "type": "string"
    },
    "orderTime": {
     "type": "string"
    },
    "replacement": {
     "type": "boolean"
    },
    "rmaNumber": {
     "type": "string"
    },
    "summary": {
     "type": "string"
    }
   }
  },
  "HardwareOrderRefund": {
   "id": "HardwareOrderRefund",
   "type": "object"
  },
  "HardwareOrderWorkflow": {
   "id": "HardwareOrderWorkflow",
   "type": "object",
   "properties": {
    "hardwareShipmentInvestigation": {
     "$ref": "HardwareShipmentInvestigation"
    },
    "state": {
     "type": "string",
     "enum": [
      "DEFAULT",
      "IN_SHIPPING_SPECIALIST_CONSULT_FOR_LOST_STOLEN",
      "SHIPPING_SPECIALIST_CONSULT_FOR_LOST_STOLEN_COMPLETE",
      "STATE_UNSPECIFIED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "HardwareRefund": {
   "id": "HardwareRefund",
   "type": "object",
   "properties": {
    "lineItemRefund": {
     "$ref": "HardwareOrderLineItemRefund"
    },
    "orderRefund": {
     "$ref": "HardwareOrderRefund"
    },
    "paymentDetail": {
     "$ref": "PaymentDetail"
    },
    "refundActions": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "REFUND_ACTION_NOT_SET",
       "SEND_REFUND_STATUS"
      ],
      "enumDescriptions": [
       "",
       ""
      ]
     }
    },
    "refundReason": {
     "type": "string",
     "enum": [
      "DELIVERY_RETURNED",
      "EXTENDED_WARRANTY_CANCELATION",
      "IN_BOX_ACCESSORIES",
      "LOST_STOLEN",
      "OTHER",
      "PRICE_PROTECTION",
      "REFUND_REASON_NOT_SET",
      "RMA",
      "SHIPPING",
      "TAX_EXEMPT",
      "UNDELIVERABLE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "refundRequestTime": {
     "type": "string"
    },
    "refundedTime": {
     "type": "string"
    },
    "shipmentRefund": {
     "$ref": "HardwareShipmentRefund"
    },
    "status": {
     "type": "string",
     "enum": [
      "REFUNDED",
      "REFUND_ERROR",
      "REFUND_PENDING",
      "REFUND_PENDING_RETURN",
      "REFUND_PENDING_STUCK",
      "STATUS_NOT_SET"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "totalAmount": {
     "$ref": "Money"
    }
   }
  },
  "HardwareShipment": {
   "id": "HardwareShipment",
   "type": "object",
   "properties": {
    "addressLastUpdated": {
     "type": "string"
    },
    "addressUpdateable": {
     "type": "boolean"
    },
    "authHold": {
     "type": "boolean"
    },
    "cancelInfo": {
     "$ref": "CancelInfo"
    },
    "financialStatus": {
     "type": "string",
     "enum": [
      "ABANDONED",
      "ADDED",
      "APPROVED",
      "CANCELLED",
      "CHARGED",
      "CHARGED_BACK",
      "CONFIRMED",
      "DENIED",
      "DISBURSED",
      "EXPIRED",
      "FAILED",
      "FINANCIAL_STATUS_NOT_SET",
      "INDETERMINATE",
      "PENDING",
      "REFUNDED",
      "UNAVAILABLE",
      "WAITING_FOR_CLIENT_RETRY"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "lineItems": {
     "type": "array",
     "items": {
      "$ref": "HardwareOrderLineItem"
     }
    },
    "orderActions": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "CANCEL_EXTENDED_WARRANTY",
       "CANCEL_ORDER",
       "ESCALATE_CANCELED",
       "HARDWARE_ORDER_ACTION_NOT_SET",
       "INITIATE_RMA",
       "INVESTIGATE_AUTH_HOLD",
       "INVESTIGATE_CANCELED",
       "INVESTIGATE_GOOGLE_FINANCING",
       "INVESTIGATE_SHIPPING",
       "REJECT_OR_RETURN",
       "REVIEW_REFUND",
       "REVIEW_RMA",
       "REVIEW_RMA_REFUND",
       "SEND_STATUS"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "paymentDetail": {
     "$ref": "PaymentDetail"
    },
    "shipmentId": {
     "type": "string"
    },
    "shipmentNumber": {
     "type": "integer",
     "format": "int32"
    },
    "shipmentState": {
     "type": "string",
     "enum": [
      "CANCEL",
      "FC_TRANSFER",
      "HARDWARE_SHIPMENT_STATE_NOT_SET",
      "ON_HOLD_CHARGEABLE",
      "ON_HOLD_QUANTITY",
      "ON_HOLD_WAIT",
      "READY_TO_SHIP",
      "SENT",
      "SHIPPED",
      "SPLIT"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "shippingInfo": {
     "$ref": "ShippingInfo"
    },
    "state": {
     "type": "string",
     "enum": [
      "CANCELED",
      "HARDWARE_ORDER_STATE_NOT_SET",
      "PROCESSING",
      "SHIPPED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "stuckOrderAlert": {
     "type": "string",
     "enum": [
      "STUCK_INVENTORY",
      "STUCK_ORDER_ALERT_NOT_SET",
      "STUCK_PAYMENT",
      "STUCK_PROCESSING",
      "STUCK_TRANSIT"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "totalAmount": {
     "$ref": "Money"
    }
   }
  },
  "HardwareShipmentInvestigation": {
   "id": "HardwareShipmentInvestigation",
   "type": "object",
   "properties": {
    "isOrderFromStore": {
     "type": "boolean"
    },
    "issue": {
     "type": "string"
    },
    "orderId": {
     "type": "string"
    },
    "shipmentId": {
     "type": "string"
    }
   }
  },
  "HardwareShipmentRefund": {
   "id": "HardwareShipmentRefund",
   "type": "object",
   "properties": {
    "shipmentId": {
     "type": "string"
    }
   }
  },
  "Headers": {
   "id": "Headers",
   "type": "object",
   "properties": {
    "bccAddresses": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "ccAddresses": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "fromAddress": {
     "type": "string"
    },
    "inReplyTo": {
     "type": "string"
    },
    "subject": {
     "type": "string"
    },
    "toAddresses": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "HelpCenterContent": {
   "id": "HelpCenterContent",
   "type": "object",
   "properties": {
    "hcId": {
     "type": "string"
    },
    "helpCenter": {
     "type": "string"
    },
    "isPublic": {
     "type": "boolean"
    },
    "locale": {
     "type": "string"
    },
    "type": {
     "type": "string",
     "enum": [
      "ANSWER",
      "TOPIC",
      "TROUBLESHOOTER",
      "UNKNOWN_CONTENT_TYPE",
      "UNSUPPORTED_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "url": {
     "type": "string"
    }
   }
  },
  "HelpCenterContent1": {
   "id": "HelpCenterContent1",
   "type": "object",
   "properties": {
    "contentId": {
     "type": "string"
    },
    "displayName": {
     "type": "string"
    },
    "helpCenter": {
     "type": "string"
    },
    "isPublic": {
     "type": "boolean"
    },
    "locale": {
     "type": "string"
    },
    "type": {
     "type": "string",
     "enum": [
      "ANSWER",
      "TOPIC",
      "TROUBLESHOOTER",
      "UNKNOWN_CONTENT_TYPE",
      "UNSUPPORTED_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "url": {
     "type": "string"
    }
   }
  },
  "HelpCenterContent2": {
   "id": "HelpCenterContent2",
   "type": "object",
   "properties": {
    "hcId": {
     "type": "string"
    },
    "helpCenter": {
     "type": "string"
    },
    "isPublic": {
     "type": "boolean"
    },
    "locale": {
     "type": "string"
    },
    "type": {
     "type": "string",
     "enum": [
      "ANSWER",
      "TOPIC",
      "TROUBLESHOOTER",
      "UNKNOWN_CONTENT_TYPE",
      "UNSUPPORTED_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "url": {
     "type": "string"
    }
   }
  },
  "HelpCenterContent3": {
   "id": "HelpCenterContent3",
   "type": "object",
   "properties": {
    "hcId": {
     "type": "string"
    },
    "helpCenter": {
     "type": "string"
    },
    "isPublic": {
     "type": "boolean"
    },
    "locale": {
     "type": "string"
    },
    "requirementTypes": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "INTERNET",
       "OPERATE",
       "REQUIREMENT_NOT_SET"
      ],
      "enumDescriptions": [
       "",
       "",
       ""
      ]
     }
    },
    "requirementsSnippetId": {
     "type": "string"
    },
    "title": {
     "type": "string"
    },
    "type": {
     "type": "string",
     "enum": [
      "ANSWER",
      "TOPIC",
      "TROUBLESHOOTER",
      "UNKNOWN_CONTENT_TYPE",
      "UNSUPPORTED_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "url": {
     "type": "string"
    }
   }
  },
  "HelpCenterDeepLinkSource": {
   "id": "HelpCenterDeepLinkSource",
   "type": "object"
  },
  "Identity": {
   "id": "Identity",
   "type": "object",
   "properties": {
    "displayName": {
     "type": "string"
    },
    "emailAddress": {
     "type": "string"
    },
    "profileImageUrl": {
     "type": "string"
    },
    "teamId": {
     "type": "string"
    }
   }
  },
  "InitiatePaymentMethodHijackReviewsRequest": {
   "id": "InitiatePaymentMethodHijackReviewsRequest",
   "type": "object",
   "properties": {
    "bankAccount": {
     "$ref": "BankAccount"
    },
    "caseId": {
     "type": "string"
    },
    "creditCard": {
     "$ref": "CreditCard"
    },
    "dcb": {
     "$ref": "DirectCarrierBilling"
    },
    "instrumentIssuerToken": {
     "type": "string"
    },
    "paypal": {
     "$ref": "Paypal"
    },
    "ssoCookie": {
     "type": "string"
    },
    "transactions": {
     "type": "array",
     "items": {
      "$ref": "PaymentMethodHijackTransaction"
     }
    }
   }
  },
  "InitiatePaymentMethodHijackReviewsResponse": {
   "id": "InitiatePaymentMethodHijackReviewsResponse",
   "type": "object",
   "properties": {
    "result": {
     "type": "string",
     "enum": [
      "INITIATE_PAYMENT_METHOD_HIJACK_POSSIBLE_ACCOUNT_TAKEOVER",
      "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_CREATED",
      "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_NOT_FOUND",
      "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_NOT_UNIQUE",
      "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_RESOLVED",
      "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_RESULT_UNSPECIFIED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "reviewKeys": {
     "type": "array",
     "items": {
      "$ref": "ReviewKey"
     }
    }
   }
  },
  "Interaction": {
   "id": "Interaction",
   "type": "object",
   "properties": {
    "caseData": {
     "$ref": "CaseData"
    },
    "endTime": {
     "type": "string"
    },
    "eventTypes": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "ADOPTION",
       "CHAT",
       "EMAIL",
       "GOAL",
       "HANGOUT",
       "INCENTIVE",
       "MARKETING_EMAIL",
       "MEETING",
       "NOTE",
       "PHONE",
       "STUB",
       "TRAX",
       "UNKNOWN_EVENT_TYPE",
       "WEB"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "startTime": {
     "type": "string"
    },
    "summary": {
     "type": "string"
    }
   }
  },
  "InteractionCount": {
   "id": "InteractionCount",
   "type": "object",
   "properties": {
    "count": {
     "type": "integer",
     "format": "int32"
    },
    "startTime": {
     "type": "string"
    }
   }
  },
  "Issue": {
   "id": "Issue",
   "type": "object",
   "properties": {
    "accounts": {
     "type": "array",
     "items": {
      "$ref": "Account"
     }
    },
    "localeCode": {
     "type": "string"
    },
    "previewText": {
     "type": "string"
    },
    "product": {
     "$ref": "Product"
    },
    "subProducts": {
     "type": "array",
     "items": {
      "$ref": "Product"
     }
    },
    "summary": {
     "type": "string"
    }
   }
  },
  "Issue1": {
   "id": "Issue1",
   "type": "object",
   "properties": {
    "categoryPath": {
     "type": "string"
    },
    "issueId": {
     "type": "string"
    },
    "partialCategoryPath": {
     "type": "string"
    },
    "title": {
     "type": "string"
    },
    "unresolvedDifmId": {
     "type": "string"
    }
   }
  },
  "IssueCategoryAction": {
   "id": "IssueCategoryAction",
   "type": "object",
   "properties": {
    "issueCategories": {
     "type": "array",
     "items": {
      "$ref": "CategoryPath1"
     }
    }
   }
  },
  "IssueCategorySettings": {
   "id": "IssueCategorySettings",
   "type": "object",
   "properties": {
    "allowUncategorizedCases": {
     "type": "boolean"
    },
    "categoryRootName": {
     "type": "string"
    },
    "secondaryProductRequirementCategoryId": {
     "type": "string"
    },
    "subProductTopCategories": {
     "type": "array",
     "items": {
      "$ref": "Category2"
     }
    },
    "topCategory": {
     "$ref": "Category2"
    }
   }
  },
  "IssueFailure": {
   "id": "IssueFailure",
   "type": "object",
   "properties": {
    "difmId": {
     "type": "string"
    },
    "helpCenterContent": {
     "$ref": "HelpCenterContent1"
    },
    "reason": {
     "type": "string"
    },
    "reasonDescription": {
     "type": "string"
    },
    "supportLinks": {
     "type": "array",
     "items": {
      "$ref": "SupportLink"
     }
    },
    "targetId": {
     "type": "string"
    },
    "targetName": {
     "type": "string"
    },
    "targetType": {
     "type": "string",
     "enum": [
      "TARGET_TYPE_UNSPECIFIED",
      "URL"
     ],
     "enumDescriptions": [
      "",
      ""
     ]
    }
   }
  },
  "LineItem": {
   "id": "LineItem",
   "type": "object",
   "properties": {
    "description": {
     "type": "string"
    },
    "hardwareId": {
     "type": "string"
    },
    "hashedHardwareId": {
     "type": "string"
    },
    "productSku": {
     "type": "string"
    },
    "rmaAction": {
     "type": "string",
     "enum": [
      "ADVANCED_EXCHANGE",
      "EXCHANGE",
      "EXCHANGE_WITHOUT_RETURN",
      "REPAIR",
      "RETURN",
      "UNKNOWN_ACTION",
      "WARRANTY_REFUND"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "rmaNumber": {
     "type": "string"
    },
    "unmaskedHardwareId": {
     "type": "string"
    }
   }
  },
  "ListAgentActivitiesResponse": {
   "id": "ListAgentActivitiesResponse",
   "type": "object",
   "properties": {
    "agentActivities": {
     "type": "array",
     "items": {
      "$ref": "AgentActivity"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "ListAgentSettingsResponse": {
   "id": "ListAgentSettingsResponse",
   "type": "object",
   "properties": {
    "agentSettings": {
     "type": "array",
     "items": {
      "$ref": "AgentSetting"
     }
    }
   }
  },
  "ListBankAccountCountriesRequest": {
   "id": "ListBankAccountCountriesRequest",
   "type": "object",
   "properties": {
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "ListBankAccountCountriesResponse": {
   "id": "ListBankAccountCountriesResponse",
   "type": "object",
   "properties": {
    "bankAccountCountries": {
     "type": "array",
     "items": {
      "$ref": "BankAccountCountry"
     }
    }
   }
  },
  "ListBillingAddressesRequest": {
   "id": "ListBillingAddressesRequest",
   "type": "object",
   "properties": {
    "customerEmail": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "ListBillingAddressesResponse": {
   "id": "ListBillingAddressesResponse",
   "type": "object",
   "properties": {
    "billingAddresses": {
     "type": "array",
     "items": {
      "$ref": "Address"
     }
    }
   }
  },
  "ListBuyersRemorseCountryCodesResponse": {
   "id": "ListBuyersRemorseCountryCodesResponse",
   "type": "object",
   "properties": {
    "countryCodes": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "ListCasesByAgentResponse": {
   "id": "ListCasesByAgentResponse",
   "type": "object",
   "properties": {
    "cases": {
     "type": "array",
     "items": {
      "$ref": "Case"
     }
    },
    "pageToken": {
     "type": "string"
    },
    "searchCount": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "ListChildrenCategoryInfosResponse": {
   "id": "ListChildrenCategoryInfosResponse",
   "type": "object",
   "properties": {
    "categoryInfos": {
     "type": "array",
     "items": {
      "$ref": "CategoryInfo"
     }
    }
   }
  },
  "ListCommunicationsResponse": {
   "id": "ListCommunicationsResponse",
   "type": "object",
   "properties": {
    "communications": {
     "type": "array",
     "items": {
      "$ref": "Communication"
     }
    }
   }
  },
  "ListCreditCardTypesRequest": {
   "id": "ListCreditCardTypesRequest",
   "type": "object",
   "properties": {
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "ListCreditCardTypesResponse": {
   "id": "ListCreditCardTypesResponse",
   "type": "object",
   "properties": {
    "creditCardTypes": {
     "type": "array",
     "items": {
      "$ref": "CreditCardType"
     }
    }
   }
  },
  "ListCustomerIssuesResponse": {
   "id": "ListCustomerIssuesResponse",
   "type": "object",
   "properties": {
    "customerIssues": {
     "type": "array",
     "items": {
      "$ref": "CustomerIssue"
     }
    },
    "supportLinks": {
     "type": "array",
     "items": {
      "$ref": "SupportLink"
     }
    }
   }
  },
  "ListDevicesRequest": {
   "id": "ListDevicesRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "ListDevicesResponse": {
   "id": "ListDevicesResponse",
   "type": "object",
   "properties": {
    "devices": {
     "type": "array",
     "items": {
      "$ref": "Device"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "ListDevicesResponse1": {
   "id": "ListDevicesResponse1",
   "type": "object",
   "properties": {
    "devices": {
     "type": "array",
     "items": {
      "$ref": "Device2"
     }
    }
   }
  },
  "ListHardwareOrdersRequest": {
   "id": "ListHardwareOrdersRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "ListHardwareOrdersResponse": {
   "id": "ListHardwareOrdersResponse",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "HardwareOrderListItem"
     }
    }
   }
  },
  "ListHardwareRefundsRequest": {
   "id": "ListHardwareRefundsRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "ListHardwareRefundsResponse": {
   "id": "ListHardwareRefundsResponse",
   "type": "object",
   "properties": {
    "refunds": {
     "type": "array",
     "items": {
      "$ref": "HardwareRefund"
     }
    }
   }
  },
  "ListInteractionsResponse": {
   "id": "ListInteractionsResponse",
   "type": "object",
   "properties": {
    "interactions": {
     "type": "array",
     "items": {
      "$ref": "Interaction"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "ListIssuesResponse": {
   "id": "ListIssuesResponse",
   "type": "object",
   "properties": {
    "issues": {
     "type": "array",
     "items": {
      "$ref": "Issue1"
     }
    }
   }
  },
  "ListOpportunitiesResponse": {
   "id": "ListOpportunitiesResponse",
   "type": "object",
   "properties": {
    "eventId": {
     "type": "string"
    },
    "ineligibleReasons": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "CASE_SIGNALS",
       "OTHER",
       "UNKNOWN_INELIGIBLE_REASON"
      ],
      "enumDescriptions": [
       "",
       "",
       ""
      ]
     }
    },
    "opportunities": {
     "type": "array",
     "items": {
      "$ref": "Opportunity1"
     }
    },
    "program": {
     "$ref": "Program1"
    }
   }
  },
  "ListOtherDevicesRequest": {
   "id": "ListOtherDevicesRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "pageSize": {
     "type": "integer",
     "format": "int32"
    },
    "pageToken": {
     "type": "string"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "ListOtherDevicesResponse": {
   "id": "ListOtherDevicesResponse",
   "type": "object",
   "properties": {
    "devices": {
     "type": "array",
     "items": {
      "$ref": "Device1"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "ListPaymentInstrumentTypeInfosResponse": {
   "id": "ListPaymentInstrumentTypeInfosResponse",
   "type": "object",
   "properties": {
    "paymentInstrumentTypes": {
     "type": "array",
     "items": {
      "$ref": "PaymentInstrumentTypeInfo"
     }
    }
   }
  },
  "ListProductsResponse": {
   "id": "ListProductsResponse",
   "type": "object",
   "properties": {
    "allowedProductIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "products": {
     "type": "array",
     "items": {
      "$ref": "Product1"
     }
    }
   }
  },
  "ListPropertiesResponse": {
   "id": "ListPropertiesResponse",
   "type": "object",
   "properties": {
    "properties": {
     "type": "array",
     "items": {
      "$ref": "Property"
     }
    }
   }
  },
  "ListPurchasedAppsRequest": {
   "id": "ListPurchasedAppsRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "filter": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "ListPurchasedAppsResponse": {
   "id": "ListPurchasedAppsResponse",
   "type": "object",
   "properties": {
    "apps": {
     "type": "array",
     "items": {
      "$ref": "PurchasedApp"
     }
    }
   }
  },
  "ListPurchasedBooksRequest": {
   "id": "ListPurchasedBooksRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "filter": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "ListPurchasedBooksResponse": {
   "id": "ListPurchasedBooksResponse",
   "type": "object",
   "properties": {
    "books": {
     "type": "array",
     "items": {
      "$ref": "PurchasedBook"
     }
    }
   }
  },
  "ListPurchasedVideosRequest": {
   "id": "ListPurchasedVideosRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "filter": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "ListPurchasedVideosResponse": {
   "id": "ListPurchasedVideosResponse",
   "type": "object",
   "properties": {
    "videos": {
     "type": "array",
     "items": {
      "$ref": "PurchasedVideo"
     }
    }
   }
  },
  "ListRelatedCommunicationsResponse": {
   "id": "ListRelatedCommunicationsResponse",
   "type": "object",
   "properties": {
    "relatedCommunications": {
     "type": "array",
     "items": {
      "$ref": "RelatedCommunications"
     }
    }
   }
  },
  "ListResolutionsResponse": {
   "id": "ListResolutionsResponse",
   "type": "object",
   "properties": {
    "nextPageToken": {
     "type": "string"
    },
    "resolutions": {
     "type": "array",
     "items": {
      "$ref": "Resolution"
     }
    },
    "resultsToken": {
     "type": "string"
    }
   }
  },
  "ListRmasResponse": {
   "id": "ListRmasResponse",
   "type": "object",
   "properties": {
    "rmas": {
     "type": "array",
     "items": {
      "$ref": "Rma"
     }
    }
   }
  },
  "ListSettingsResponse": {
   "id": "ListSettingsResponse",
   "type": "object",
   "properties": {
    "agentSetting": {
     "$ref": "AgentSetting"
    },
    "searchSetting": {
     "$ref": "SearchSetting"
    }
   }
  },
  "ListSettingsResponse1": {
   "id": "ListSettingsResponse1",
   "type": "object",
   "properties": {
    "allowedProductIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "settings": {
     "type": "array",
     "items": {
      "$ref": "Settings"
     }
    }
   }
  },
  "ListShippingAddressesRequest": {
   "id": "ListShippingAddressesRequest",
   "type": "object",
   "properties": {
    "customerEmail": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "ListShippingAddressesResponse": {
   "id": "ListShippingAddressesResponse",
   "type": "object",
   "properties": {
    "shippingAddresses": {
     "type": "array",
     "items": {
      "$ref": "Address"
     }
    }
   }
  },
  "ListSubscriptionsRequest": {
   "id": "ListSubscriptionsRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "customerEmail": {
     "type": "string"
    },
    "locale": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "ListSubscriptionsResponse": {
   "id": "ListSubscriptionsResponse",
   "type": "object",
   "properties": {
    "activeSubscriptions": {
     "type": "array",
     "items": {
      "$ref": "Subscription"
     }
    },
    "inactiveSubscriptions": {
     "type": "array",
     "items": {
      "$ref": "Subscription"
     }
    }
   }
  },
  "ListTopLevelCategoryInfosResponse": {
   "id": "ListTopLevelCategoryInfosResponse",
   "type": "object",
   "properties": {
    "categoryInfos": {
     "type": "array",
     "items": {
      "$ref": "CategoryInfo"
     }
    },
    "consultCategoryInfo": {
     "$ref": "CategoryInfo"
    }
   }
  },
  "ListTransactionsRequest": {
   "id": "ListTransactionsRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "email": {
     "type": "string"
    },
    "endAmount": {
     "$ref": "Money"
    },
    "endDate": {
     "type": "string"
    },
    "instrumentLastFourCharacters": {
     "type": "string"
    },
    "pageSize": {
     "type": "integer",
     "format": "int32"
    },
    "pageToken": {
     "type": "string"
    },
    "q": {
     "type": "string"
    },
    "queryId": {
     "type": "string"
    },
    "queryIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "ssoCookie": {
     "type": "string"
    },
    "startAmount": {
     "$ref": "Money"
    },
    "startDate": {
     "type": "string"
    },
    "statuses": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "CANCELLED",
       "CHARGED",
       "CHARGED_BACK",
       "DECLINED",
       "OTHER_STATUS",
       "PENDING",
       "REFUNDED",
       "REJECTED",
       "UNKNOWN_WALLET_TRANSACTION_STATUS"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    }
   }
  },
  "ListTransactionsRequest1": {
   "id": "ListTransactionsRequest1",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "email": {
     "type": "string"
    },
    "entitlementToken": {
     "type": "string"
    },
    "entitlementTokens": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "includeUpcomingCharges": {
     "type": "boolean"
    },
    "pageSize": {
     "type": "integer",
     "format": "int32"
    },
    "pageToken": {
     "type": "string"
    },
    "productTypes": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "BUNDLE",
       "LIVE_EVENT",
       "MOVIE",
       "PRODUCT_TYPE_UNKNOWN",
       "RED",
       "SEASON",
       "SHOW",
       "UNPLUGGED"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "ssoCookie": {
     "type": "string"
    },
    "timezone": {
     "type": "string"
    }
   }
  },
  "ListTransactionsResponse": {
   "id": "ListTransactionsResponse",
   "type": "object",
   "properties": {
    "nextPageToken": {
     "type": "string"
    },
    "results": {
     "type": "array",
     "items": {
      "$ref": "WalletTransaction"
     }
    }
   }
  },
  "ListTransactionsResponse1": {
   "id": "ListTransactionsResponse1",
   "type": "object",
   "properties": {
    "nextPageToken": {
     "type": "string"
    },
    "transactions": {
     "type": "array",
     "items": {
      "$ref": "Transaction"
     }
    },
    "upcomingCharge": {
     "type": "array",
     "items": {
      "$ref": "Charge"
     }
    }
   }
  },
  "LocaleTransfer": {
   "id": "LocaleTransfer",
   "type": "object",
   "properties": {
    "sourceLocale": {
     "type": "string"
    },
    "targetLocale": {
     "type": "string"
    }
   }
  },
  "LocalizedTimestamp": {
   "id": "LocalizedTimestamp",
   "type": "object",
   "properties": {
    "timestamp": {
     "type": "string"
    },
    "timezone": {
     "type": "string"
    },
    "utcOffset": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "LogDataAccessRequest": {
   "id": "LogDataAccessRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "event": {
     "type": "string",
     "enum": [
      "CLICK_TO_REVEAL_PHONE_NUMBER",
      "DATA_ACCESS_EVENT_UNSPECIFIED"
     ],
     "enumDescriptions": [
      "",
      ""
     ]
    }
   }
  },
  "LogResolutionRequest": {
   "id": "LogResolutionRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "resolutionEvent": {
     "$ref": "ResolutionEvent"
    }
   }
  },
  "LogTroubleshooterActivityRequest": {
   "id": "LogTroubleshooterActivityRequest",
   "type": "object",
   "properties": {
    "activity": {
     "$ref": "ResolutionActivity"
    },
    "caseId": {
     "type": "string"
    }
   }
  },
  "LookupGiftCardRequest": {
   "id": "LookupGiftCardRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "lookupCriteria": {
     "$ref": "CardLookupCriteria"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "LookupGiftCardResponse": {
   "id": "LookupGiftCardResponse",
   "type": "object",
   "properties": {
    "giftCard": {
     "$ref": "GiftCard"
    }
   }
  },
  "LostStolenDevice": {
   "id": "LostStolenDevice",
   "type": "object",
   "properties": {
    "deviceId": {
     "type": "string"
    },
    "deviceSku": {
     "type": "string"
    },
    "originalOrderId": {
     "type": "string"
    },
    "originalShipmentId": {
     "type": "string"
    }
   }
  },
  "LostStolenEligibility": {
   "id": "LostStolenEligibility",
   "type": "object",
   "properties": {
    "reasons": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "DEVICE_ACTIVATED",
       "INELIGIBLE_REASON_NOT_SET",
       "TOO_MANY_CLAIMS"
      ],
      "enumDescriptions": [
       "",
       "",
       ""
      ]
     }
    }
   }
  },
  "LostStolenRefundEligibility": {
   "id": "LostStolenRefundEligibility",
   "type": "object",
   "properties": {
    "isEligible": {
     "type": "boolean"
    },
    "reasons": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "DEVICE_ACTIVATED",
       "INELIGIBLE_REASON_NOT_SET",
       "TOO_MANY_CLAIMS"
      ],
      "enumDescriptions": [
       "",
       "",
       ""
      ]
     }
    }
   }
  },
  "LostStolenShipment": {
   "id": "LostStolenShipment",
   "type": "object",
   "properties": {
    "originalOrderId": {
     "type": "string"
    },
    "originalShipmentId": {
     "type": "string"
    }
   }
  },
  "MailingAddress": {
   "id": "MailingAddress",
   "type": "object",
   "properties": {
    "addressLine1": {
     "type": "string"
    },
    "addressLine2": {
     "type": "string"
    },
    "addressLine3": {
     "type": "string"
    },
    "addressee": {
     "type": "string"
    },
    "city": {
     "type": "string"
    },
    "countryCode": {
     "type": "string"
    },
    "phoneNumber": {
     "type": "string"
    },
    "postalCode": {
     "type": "string"
    },
    "stateProvinceCode": {
     "type": "string"
    }
   }
  },
  "MarkOriginalDeviceReceivedRequest": {
   "id": "MarkOriginalDeviceReceivedRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "MatchDetail": {
   "id": "MatchDetail",
   "type": "object",
   "properties": {
    "matchPairs": {
     "type": "array",
     "items": {
      "$ref": "MatchPair"
     }
    }
   }
  },
  "MatchPair": {
   "id": "MatchPair",
   "type": "object",
   "properties": {
    "matchTypes": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "EXACT",
       "PREFIX",
       "SPELLING_CORRECTION",
       "STEMMING",
       "SYNONYM",
       "UNKNOWN_MATCH_TYPE"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "matchedTerm": {
     "type": "string"
    },
    "queryTerm": {
     "type": "string"
    }
   }
  },
  "MobileScreenshareAcceptEvent": {
   "id": "MobileScreenshareAcceptEvent",
   "type": "object"
  },
  "MobileScreenshareAutoDeclineEvent": {
   "id": "MobileScreenshareAutoDeclineEvent",
   "type": "object",
   "properties": {
    "declineType": {
     "type": "string",
     "enum": [
      "APP_UPDATE",
      "EXISTING_INVITATION",
      "NEWER_INVITATION",
      "SAFE_MODE",
      "UNKNOWN_AUTO_DECLINE_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "MobileScreenshareCancelEvent": {
   "id": "MobileScreenshareCancelEvent",
   "type": "object"
  },
  "MobileScreenshareCleanupEvent": {
   "id": "MobileScreenshareCleanupEvent",
   "type": "object"
  },
  "MobileScreenshareConnectEvent": {
   "id": "MobileScreenshareConnectEvent",
   "type": "object"
  },
  "MobileScreenshareDeclineEvent": {
   "id": "MobileScreenshareDeclineEvent",
   "type": "object"
  },
  "MobileScreenshareDisconnectEvent": {
   "id": "MobileScreenshareDisconnectEvent",
   "type": "object"
  },
  "MobileScreenshareEndEvent": {
   "id": "MobileScreenshareEndEvent",
   "type": "object",
   "properties": {
    "agentEnded": {
     "type": "boolean"
    }
   }
  },
  "MobileScreenshareEvent": {
   "id": "MobileScreenshareEvent",
   "type": "object",
   "properties": {
    "acceptEvent": {
     "$ref": "MobileScreenshareAcceptEvent"
    },
    "autoDeclineEvent": {
     "$ref": "MobileScreenshareAutoDeclineEvent"
    },
    "cancelEvent": {
     "$ref": "MobileScreenshareCancelEvent"
    },
    "cleanupEvent": {
     "$ref": "MobileScreenshareCleanupEvent"
    },
    "connectEvent": {
     "$ref": "MobileScreenshareConnectEvent"
    },
    "declineEvent": {
     "$ref": "MobileScreenshareDeclineEvent"
    },
    "disconnectEvent": {
     "$ref": "MobileScreenshareDisconnectEvent"
    },
    "endEvent": {
     "$ref": "MobileScreenshareEndEvent"
    },
    "initiateEvent": {
     "$ref": "MobileScreenshareInitiateEvent"
    },
    "invitationId": {
     "type": "string"
    },
    "inviteEvent": {
     "$ref": "MobileScreenshareInviteEvent"
    },
    "receivedEvent": {
     "$ref": "MobileScreenshareReceivedEvent"
    },
    "startingConnectEvent": {
     "$ref": "MobileScreenshareStartingConnectEvent"
    }
   }
  },
  "MobileScreenshareInitiateEvent": {
   "id": "MobileScreenshareInitiateEvent",
   "type": "object"
  },
  "MobileScreenshareInviteEvent": {
   "id": "MobileScreenshareInviteEvent",
   "type": "object"
  },
  "MobileScreenshareReceivedEvent": {
   "id": "MobileScreenshareReceivedEvent",
   "type": "object"
  },
  "MobileScreenshareStartingConnectEvent": {
   "id": "MobileScreenshareStartingConnectEvent",
   "type": "object"
  },
  "Money": {
   "id": "Money",
   "type": "object",
   "properties": {
    "currencyCode": {
     "type": "string"
    },
    "nanos": {
     "type": "integer",
     "format": "int32"
    },
    "units": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "NeedsInfoRequest": {
   "id": "NeedsInfoRequest",
   "type": "object"
  },
  "NeedsInfoResponse": {
   "id": "NeedsInfoResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "Node": {
   "id": "Node",
   "type": "object",
   "properties": {
    "categoryId": {
     "type": "integer",
     "format": "int32"
    },
    "categoryName": {
     "type": "string"
    },
    "isInvalid": {
     "type": "boolean"
    }
   }
  },
  "Node1": {
   "id": "Node1",
   "type": "object",
   "properties": {
    "isValid": {
     "type": "boolean"
    },
    "name": {
     "type": "string"
    },
    "nodeId": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "Node2": {
   "id": "Node2",
   "type": "object",
   "properties": {
    "categoryId": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "Node3": {
   "id": "Node3",
   "type": "object",
   "properties": {
    "categoryId": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "Node4": {
   "id": "Node4",
   "type": "object",
   "properties": {
    "categoryId": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "Node5": {
   "id": "Node5",
   "type": "object",
   "properties": {
    "categoryId": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "Note": {
   "id": "Note",
   "type": "object",
   "properties": {
    "author": {
     "$ref": "Identity"
    },
    "inResponseTo": {
     "type": "string"
    },
    "isHtml": {
     "type": "boolean"
    },
    "noteType": {
     "type": "string",
     "enum": [
      "PHONE",
      "RESOLUTION_EVENT",
      "UNKNOWN_NOTE_TYPE",
      "USER"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "payload": {
     "type": "string"
    },
    "recipients": {
     "type": "array",
     "items": {
      "$ref": "Identity"
     }
    },
    "subject": {
     "type": "string"
    }
   }
  },
  "OfferedSolutionRequest": {
   "id": "OfferedSolutionRequest",
   "type": "object",
   "properties": {
    "communicationId": {
     "type": "string"
    }
   }
  },
  "OfferedSolutionResponse": {
   "id": "OfferedSolutionResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "Opportunity": {
   "id": "Opportunity",
   "type": "object",
   "properties": {
    "campaignName": {
     "type": "string"
    },
    "opportunityName": {
     "type": "string"
    },
    "opportunityType": {
     "type": "string",
     "enum": [
      "ACCOUNT_FEATURE_ADOPTION",
      "CAMPAIGN_GOAL",
      "UNKNOWN_OPPORTUNITY_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "points": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "Opportunity1": {
   "id": "Opportunity1",
   "type": "object",
   "properties": {
    "campaigns": {
     "type": "array",
     "items": {
      "$ref": "Campaign"
     }
    },
    "category": {
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "opportunityType": {
     "type": "string",
     "enum": [
      "ACCOUNT_FEATURE_ADOPTION",
      "CAMPAIGN_GOAL",
      "UNKNOWN_OPPORTUNITY_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "points": {
     "type": "integer",
     "format": "int32"
    },
    "rank": {
     "type": "number",
     "format": "double"
    }
   }
  },
  "Order": {
   "id": "Order",
   "type": "object",
   "properties": {
    "checkoutOrderId": {
     "type": "string"
    },
    "finskyPurchaseId": {
     "type": "string"
    },
    "isNotRefundable": {
     "type": "boolean"
    },
    "name": {
     "type": "string"
    },
    "orderId": {
     "type": "string"
    },
    "orderItems": {
     "type": "array",
     "items": {
      "$ref": "OrderItem"
     }
    },
    "orderValue": {
     "$ref": "Money"
    },
    "paymentMethod": {
     "type": "string",
     "enum": [
      "ACCOUNTING",
      "BILLING_ACCOUNT",
      "CARD",
      "CARRIER_BILLING",
      "DIRECT_DEBIT",
      "ELECTRONIC_FUNDS_TRANSFER",
      "GIFT_CARD",
      "MONETIZATION_CHANNEL",
      "PAYMENT_METHOD_UNSPECIFIED",
      "PAYPAL",
      "PROXY_CARD",
      "REDIRECT",
      "STORED_VALUE",
      "TERMS"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "paymentState": {
     "type": "string",
     "enum": [
      "ADDED",
      "CANCELLED",
      "CANCELLING",
      "CHARGEABLE",
      "CHARGED",
      "CHARGING",
      "COMPING",
      "CONTESTED",
      "CONTESTING",
      "ONE_SIDED_REFUNDED",
      "ONE_SIDED_REFUNDING",
      "PARTIAL_REFUNDING",
      "PAYMENT_DECLINED",
      "PAYMENT_STATE_UNSPECIFIED",
      "PENDING",
      "REFUNDED",
      "REFUNDING",
      "REJECTED",
      "REVIEW",
      "STUCK",
      "UNRECOVERABLE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "purchaseTime": {
     "type": "string"
    },
    "vertical": {
     "type": "string",
     "enum": [
      "ANDROID_APPS",
      "BOOKS",
      "COMMERCE",
      "DEVICES",
      "MAGAZINES",
      "MOVIES_AND_TV",
      "MULTI_CONTAINER",
      "MUSIC",
      "VERTICAL_UNSPECIFIED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "OrderItem": {
   "id": "OrderItem",
   "type": "object",
   "properties": {
    "contentType": {
     "type": "string"
    },
    "itemId": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "offerType": {
     "type": "string"
    },
    "title": {
     "type": "string"
    },
    "vertical": {
     "type": "string",
     "enum": [
      "ANDROID_APPS",
      "BOOKS",
      "COMMERCE",
      "DEVICES",
      "MAGAZINES",
      "MOVIES_AND_TV",
      "MULTI_CONTAINER",
      "MUSIC",
      "VERTICAL_UNSPECIFIED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "OrderRefundStatusInfo": {
   "id": "OrderRefundStatusInfo",
   "type": "object",
   "properties": {
    "order": {
     "$ref": "Order"
    },
    "statusMessage": {
     "type": "string"
    }
   }
  },
  "Path": {
   "id": "Path",
   "type": "object",
   "properties": {
    "nodes": {
     "type": "array",
     "items": {
      "$ref": "Node"
     }
    }
   }
  },
  "Path1": {
   "id": "Path1",
   "type": "object",
   "properties": {
    "nodes": {
     "type": "array",
     "items": {
      "$ref": "Node1"
     }
    }
   }
  },
  "Path2": {
   "id": "Path2",
   "type": "object",
   "properties": {
    "categoryIds": {
     "type": "array",
     "items": {
      "type": "integer",
      "format": "int32"
     }
    }
   }
  },
  "PaymentDetail": {
   "id": "PaymentDetail",
   "type": "object",
   "properties": {
    "instrumentDescription": {
     "type": "string"
    },
    "instrumentType": {
     "type": "string",
     "enum": [
      "BANK_ACCOUNT",
      "BILLING_ACCOUNT",
      "CARRIER_BILLING",
      "CREDIT_CARD",
      "FINANCING",
      "GOOGLE_STANDARD_TOKENIZED",
      "INSTRUMENT_TYPE_NOT_SET",
      "MONETIZATION_CHANNEL",
      "NETBANKING",
      "PAYPAL",
      "STORED_VALUE_CLOSED_LOOP_PLAY",
      "STORED_VALUE_OPEN_LOOP"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "PaymentDetail1": {
   "id": "PaymentDetail1",
   "type": "object",
   "properties": {
    "instrumentDescription": {
     "type": "string"
    }
   }
  },
  "PaymentInstrumentTypeInfo": {
   "id": "PaymentInstrumentTypeInfo",
   "type": "object",
   "properties": {
    "instrumentDescription": {
     "type": "string"
    },
    "instrumentTypeToken": {
     "type": "string"
    },
    "type": {
     "type": "string",
     "enum": [
      "BANK_ACCOUNT",
      "CARRIER_BILLING",
      "CREDIT_CARD",
      "OTHER",
      "PAYMENT_METHOD_TYPE_UNSPECIFIED",
      "PAYPAL"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "PaymentMethodHijackTransaction": {
   "id": "PaymentMethodHijackTransaction",
   "type": "object",
   "properties": {
    "amount": {
     "$ref": "Money"
    },
    "count": {
     "type": "integer",
     "format": "int32"
    },
    "date": {
     "$ref": "Date"
    }
   }
  },
  "PaymentsInfo": {
   "id": "PaymentsInfo",
   "type": "object",
   "properties": {
    "numPaymentsAccounts": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "PaymentsSuggestion": {
   "id": "PaymentsSuggestion",
   "type": "object",
   "properties": {
    "description": {
     "type": "string"
    },
    "displayName": {
     "type": "string"
    },
    "token": {
     "type": "string"
    }
   }
  },
  "Paypal": {
   "id": "Paypal",
   "type": "object",
   "properties": {
    "email": {
     "type": "string"
    }
   }
  },
  "Paypal1": {
   "id": "Paypal1",
   "type": "object",
   "properties": {
    "account": {
     "type": "string"
    }
   }
  },
  "Period": {
   "id": "Period",
   "type": "object",
   "properties": {
    "count": {
     "type": "integer",
     "format": "int32"
    },
    "units": {
     "type": "string",
     "enum": [
      "DAY",
      "MONTH",
      "UNITS_UNKNOWN",
      "YEAR"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "PhoneCall": {
   "id": "PhoneCall",
   "type": "object",
   "properties": {
    "callId": {
     "type": "string"
    },
    "countryCode": {
     "type": "integer",
     "format": "int32"
    },
    "obfuscatedLineNumber": {
     "type": "string"
    }
   }
  },
  "PhoneInfo": {
   "id": "PhoneInfo",
   "type": "object",
   "properties": {
    "ucid": {
     "type": "string"
    }
   }
  },
  "PhoneNumber": {
   "id": "PhoneNumber",
   "type": "object",
   "properties": {
    "countryCode": {
     "type": "integer",
     "format": "int32"
    },
    "countryCodeSource": {
     "type": "string",
     "enum": [
      "COUNTRY_CODE_SOURCE_UNSPECIFIED",
      "FROM_DEFAULT_COUNTRY",
      "FROM_NUMBER_WITHOUT_PLUS_SIGN",
      "FROM_NUMBER_WITH_IDD",
      "FROM_NUMBER_WITH_PLUS_SIGN"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "extension": {
     "type": "string"
    },
    "isValid": {
     "type": "boolean"
    },
    "lineNumber": {
     "type": "string"
    },
    "nationalNumber": {
     "type": "string",
     "format": "uint64"
    },
    "numberOfLeadingZeros": {
     "type": "integer",
     "format": "int32"
    },
    "preferredDomesticCarrierCode": {
     "type": "string"
    },
    "rawInput": {
     "type": "string"
    }
   }
  },
  "PhoneSetting": {
   "id": "PhoneSetting",
   "type": "object",
   "properties": {
    "agentId": {
     "type": "string"
    },
    "extension": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "region": {
     "type": "string"
    }
   }
  },
  "PhysicalMailingAddress": {
   "id": "PhysicalMailingAddress",
   "type": "object",
   "properties": {
    "addressLine1": {
     "type": "string"
    },
    "addressLine2": {
     "type": "string"
    },
    "addressLine3": {
     "type": "string"
    },
    "addressee": {
     "type": "string"
    },
    "city": {
     "type": "string"
    },
    "countryCode": {
     "type": "string"
    },
    "phoneNumber": {
     "type": "string"
    },
    "postalCode": {
     "type": "string"
    },
    "stateProvinceCode": {
     "type": "string"
    }
   }
  },
  "Pitch": {
   "id": "Pitch",
   "type": "object",
   "properties": {
    "opportunities": {
     "type": "array",
     "items": {
      "$ref": "Opportunity"
     }
    },
    "opportunitiesDisplayType": {
     "type": "string",
     "enum": [
      "APOLLO",
      "TRADITIONAL",
      "UNKNOWN_OPPORTUNITIES_DISPLAY_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "program": {
     "$ref": "Program"
    },
    "totalPoints": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "Pitch1": {
   "id": "Pitch1",
   "type": "object",
   "properties": {
    "campaignIndex": {
     "type": "integer",
     "format": "int32"
    },
    "id": {
     "$ref": "PitchId"
    },
    "opportunityIndex": {
     "type": "integer",
     "format": "int32"
    },
    "opportunityType": {
     "type": "string",
     "enum": [
      "ACCOUNT_FEATURE_ADOPTION",
      "CAMPAIGN_GOAL",
      "UNKNOWN_OPPORTUNITY_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    }
   }
  },
  "PitchId": {
   "id": "PitchId",
   "type": "object",
   "properties": {
    "campaignId": {
     "type": "string",
     "format": "int64"
    },
    "opportunityId": {
     "type": "string"
    }
   }
  },
  "Product": {
   "id": "Product",
   "type": "object",
   "properties": {
    "agentCategories": {
     "type": "array",
     "items": {
      "$ref": "Category"
     }
    },
    "productId": {
     "type": "string"
    },
    "productName": {
     "type": "string"
    },
    "routingCategory": {
     "$ref": "Category"
    }
   }
  },
  "Product1": {
   "id": "Product1",
   "type": "object",
   "properties": {
    "displayName": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "productId": {
     "type": "string"
    },
    "productName": {
     "type": "string"
    }
   }
  },
  "Product2": {
   "id": "Product2",
   "type": "object",
   "properties": {
    "isPinned": {
     "type": "boolean"
    },
    "locales": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "productId": {
     "type": "string"
    },
    "productName": {
     "type": "string"
    },
    "routingTargets": {
     "type": "array",
     "items": {
      "$ref": "RoutingTarget"
     }
    }
   }
  },
  "ProductCount": {
   "id": "ProductCount",
   "type": "object",
   "properties": {
    "count": {
     "type": "integer",
     "format": "int32"
    },
    "productName": {
     "type": "string"
    }
   }
  },
  "ProductTransfer": {
   "id": "ProductTransfer",
   "type": "object",
   "properties": {
    "sourceProduct": {
     "$ref": "Product"
    },
    "targetProduct": {
     "$ref": "Product"
    }
   }
  },
  "Program": {
   "id": "Program",
   "type": "object",
   "properties": {
    "programName": {
     "type": "string"
    },
    "targetPoints": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "Program1": {
   "id": "Program1",
   "type": "object",
   "properties": {
    "name": {
     "type": "string"
    },
    "targetPoints": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "Property": {
   "id": "Property",
   "type": "object",
   "properties": {
    "name": {
     "type": "string"
    },
    "value": {
     "type": "string"
    }
   }
  },
  "Purchase": {
   "id": "Purchase",
   "type": "object",
   "properties": {
    "accessEndTime": {
     "$ref": "LocalizedTimestamp"
    },
    "cancelTime": {
     "$ref": "LocalizedTimestamp"
    },
    "eligibleForSelfServeRefund": {
     "type": "boolean"
    },
    "entitlementToken": {
     "type": "string"
    },
    "isPreorder": {
     "type": "boolean"
    },
    "isRefundable": {
     "type": "boolean"
    },
    "isRefunded": {
     "type": "boolean"
    },
    "isRevokable": {
     "type": "boolean"
    },
    "name": {
     "type": "string"
    },
    "orderId": {
     "type": "string"
    },
    "paymentDescription": {
     "type": "string"
    },
    "paymentMethod": {
     "type": "string",
     "enum": [
      "BANK_ACCOUNT",
      "BILLING_ACCOUNT",
      "CARRIER_BILLING",
      "CREDIT_CARD",
      "FINANCING",
      "GOOGLE_STANDARD_TOKENIZED",
      "MONETIZATION_CHANNEL",
      "NETBANKING",
      "PAYMENT_METHOD_UNKNOWN",
      "PAYPAL",
      "STORED_VALUE_CLOSED_LOOP_PLAY",
      "STORED_VALUE_OPEN_LOOP"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "productType": {
     "type": "string",
     "enum": [
      "BUNDLE",
      "LIVE_EVENT",
      "MOVIE",
      "PRODUCT_TYPE_UNKNOWN",
      "RED",
      "SEASON",
      "SHOW",
      "UNPLUGGED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "purchaseTime": {
     "$ref": "LocalizedTimestamp"
    },
    "purchaseType": {
     "type": "string",
     "enum": [
      "PURCHASE",
      "PURCHASE_TYPE_UNKNOWN",
      "RENTAL"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "qualityCap": {
     "type": "string",
     "enum": [
      "HD",
      "SD",
      "UHD",
      "UNKNOWN_CAP"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "source": {
     "type": "string",
     "enum": [
      "CONTENT_PURCHASE_SOURCE_UNKNOWN",
      "GOOGLE_PLAY",
      "YOUTUBE"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "transactionAmount": {
     "$ref": "Money"
    },
    "transactionStatus": {
     "type": "string",
     "enum": [
      "CANCELLED",
      "CHARGED",
      "CHARGED_BACK",
      "DECLINED",
      "OTHER_STATUS",
      "PENDING",
      "REFUNDED",
      "REJECTED",
      "TRANSACTION_STATUS_UNKNOWN"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "transactionTime": {
     "$ref": "LocalizedTimestamp"
    },
    "transactionToken": {
     "type": "string"
    },
    "viewTime": {
     "$ref": "LocalizedTimestamp"
    }
   }
  },
  "PurchasedApp": {
   "id": "PurchasedApp",
   "type": "object",
   "properties": {
    "appId": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "purchaseTime": {
     "type": "string"
    }
   }
  },
  "PurchasedBook": {
   "id": "PurchasedBook",
   "type": "object",
   "properties": {
    "bookId": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "purchaseTime": {
     "type": "string"
    }
   }
  },
  "PurchasedVideo": {
   "id": "PurchasedVideo",
   "type": "object",
   "properties": {
    "name": {
     "type": "string"
    },
    "purchaseTime": {
     "type": "string"
    },
    "videoId": {
     "type": "string"
    }
   }
  },
  "QuestionSet": {
   "id": "QuestionSet",
   "type": "object",
   "properties": {
    "attemptsRemaining": {
     "type": "integer",
     "format": "int32"
    },
    "authenticationBankAccounts": {
     "type": "array",
     "items": {
      "$ref": "AuthenticationBankAccount"
     }
    },
    "authenticationCreditCards": {
     "type": "array",
     "items": {
      "$ref": "AuthenticationCreditCard1"
     }
    },
    "availableQuestions": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "BANK_ACCOUNT",
       "CREDIT_CARD",
       "DCB",
       "PAYPAL",
       "PHONE_NUMBER",
       "PLAY_BALANCE",
       "POSTAL_CODE",
       "UNKNOWN_QUESTION",
       "WALLET_BALANCE"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "questionSetType": {
     "type": "string",
     "enum": [
      "PAYMENT_METHOD_QUESTION_SET",
      "PHONE_NUMBER_QUESTION_SET",
      "POSTAL_CODE_QUESTION_SET",
      "UNKNOWN_QUESTION_SET_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "questions": {
     "type": "array",
     "items": {
      "$ref": "AvailableQuestion"
     }
    },
    "result": {
     "type": "string",
     "enum": [
      "FAIL",
      "PASS",
      "PENDING",
      "UNKNOWN_RESULT"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "totalNumberOfAttempts": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "QuestionSource": {
   "id": "QuestionSource",
   "type": "object",
   "properties": {
    "questionSourceType": {
     "type": "string",
     "enum": [
      "FOCUS",
      "PAYMENTS",
      "UNKNOWN_QUESTION_SOURCE_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "token": {
     "type": "string"
    }
   }
  },
  "QuickResponse": {
   "id": "QuickResponse",
   "type": "object",
   "properties": {
    "quickResponseName": {
     "type": "string"
    },
    "value": {
     "type": "string"
    }
   }
  },
  "ReadCaseRequest": {
   "id": "ReadCaseRequest",
   "type": "object",
   "properties": {
    "readTime": {
     "type": "string"
    }
   }
  },
  "RealTime": {
   "id": "RealTime",
   "type": "object",
   "properties": {
    "attributeMap": {
     "type": "object",
     "additionalProperties": {
      "type": "string"
     }
    },
    "issue": {
     "type": "string"
    },
    "pool": {
     "$ref": "RealTimePool"
    },
    "realTimeEvents": {
     "type": "array",
     "items": {
      "$ref": "RealTimeEvent"
     }
    },
    "requester": {
     "$ref": "Identity"
    }
   }
  },
  "RealTimeEvent": {
   "id": "RealTimeEvent",
   "type": "object",
   "properties": {
    "chatMessage": {
     "$ref": "ChatMessage"
    },
    "createTime": {
     "type": "string"
    }
   }
  },
  "RealTimePool": {
   "id": "RealTimePool",
   "type": "object",
   "properties": {
    "poolId": {
     "type": "string"
    },
    "poolName": {
     "type": "string"
    }
   }
  },
  "RealTimeSetting": {
   "id": "RealTimeSetting",
   "type": "object",
   "properties": {
    "agentSettingId": {
     "type": "string"
    },
    "enableChatQueueSounds": {
     "type": "boolean"
    },
    "enableModalChatNotifications": {
     "type": "boolean"
    },
    "forceChatQueueNotifications": {
     "type": "boolean"
    },
    "gaiaRobotEntityId": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "plusPageEntityId": {
     "type": "string"
    },
    "quickResponses": {
     "type": "array",
     "items": {
      "$ref": "QuickResponse"
     }
    },
    "realTimeSettingId": {
     "type": "string"
    },
    "supportIdentityType": {
     "type": "string",
     "enum": [
      "GAIA_ROBOT",
      "PLUS_PAGE",
      "UNKNOWN_SUPPORT_IDENTITY_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "switchCaseOnChatFocus": {
     "type": "boolean"
    },
    "useSupportIdentity": {
     "type": "boolean"
    }
   }
  },
  "RecentlyViewedSource": {
   "id": "RecentlyViewedSource",
   "type": "object"
  },
  "RedSignals": {
   "id": "RedSignals",
   "type": "object",
   "properties": {
    "source": {
     "type": "string",
     "enum": [
      "FAMILY_MEMBER",
      "GOOGLE_PLAY",
      "ITUNES",
      "OTHER",
      "RED_SOURCE_UNKNOWN",
      "YOUTUBE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "subscriptionSignals": {
     "$ref": "SubscriptionSignals"
    }
   }
  },
  "RedeemGiftCardRequest": {
   "id": "RedeemGiftCardRequest",
   "type": "object",
   "properties": {
    "activationNumber": {
     "type": "string"
    },
    "caseId": {
     "type": "string"
    },
    "redemptionToken": {
     "$ref": "RedemptionToken"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "RedeemGiftCardResponse": {
   "id": "RedeemGiftCardResponse",
   "type": "object",
   "properties": {
    "amountRedeemed": {
     "$ref": "Money"
    },
    "availableBalance": {
     "$ref": "Money"
    },
    "redemptionStatus": {
     "type": "string",
     "enum": [
      "CURRENCY_MISMATCH",
      "CUSTOMER_CONTROLS_FORBID",
      "EXCEEDS_BALANCE_LIMITS",
      "MULTIPLE_PAYMENT_ACCOUNTS",
      "NO_STORED_VALUE_INSTRUMENT",
      "REDEMPTION_STATUS_UNSPECIFIED",
      "SUCCESS"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "RedemptionToken": {
   "id": "RedemptionToken",
   "type": "object",
   "properties": {
    "token": {
     "type": "string"
    }
   }
  },
  "RefundDetail": {
   "id": "RefundDetail",
   "type": "object",
   "properties": {
    "paymentDetail": {
     "$ref": "PaymentDetail1"
    },
    "refundEntries": {
     "type": "array",
     "items": {
      "$ref": "RefundEntry"
     }
    },
    "refundReason": {
     "type": "string",
     "enum": [
      "DELIVERY_RETURNED",
      "EXTENDED_WARRANTY_CANCELATION",
      "IN_BOX_ACCESSORIES",
      "LOST_STOLEN",
      "OTHER",
      "PRICE_PROTECTION",
      "REFUND_REASON_NOT_SET",
      "RMA",
      "SHIPPING",
      "TAX_EXEMPT",
      "UNDELIVERABLE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "refundTotal": {
     "$ref": "Money"
    }
   }
  },
  "RefundEntry": {
   "id": "RefundEntry",
   "type": "object",
   "properties": {
    "refundAmount": {
     "$ref": "Money"
    },
    "refundDescription": {
     "type": "string"
    },
    "refundRequestTime": {
     "type": "string"
    },
    "refundTime": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "REFUNDED",
      "REFUND_ERROR",
      "REFUND_PENDING",
      "REFUND_PENDING_RETURN",
      "REFUND_PENDING_STUCK",
      "STATUS_NOT_SET"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "RefundHardwareOrderRequest": {
   "id": "RefundHardwareOrderRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoTicket": {
     "type": "string"
    }
   }
  },
  "RefundHardwareOrderResponse": {
   "id": "RefundHardwareOrderResponse",
   "type": "object",
   "properties": {
    "reason": {
     "type": "string",
     "enum": [
      "FAILURE_REASON_NOT_SET",
      "REQUEST_ALREADY_EXISTS"
     ],
     "enumDescriptions": [
      "",
      ""
     ]
    },
    "refundId": {
     "type": "string"
    }
   }
  },
  "RefundHistorySummaryInfo": {
   "id": "RefundHistorySummaryInfo",
   "type": "object",
   "properties": {
    "numberOfRefunds": {
     "type": "integer",
     "format": "int32"
    },
    "productType": {
     "type": "string",
     "enum": [
      "BUNDLE",
      "LIVE_EVENT",
      "MOVIE",
      "PRODUCT_TYPE_UNKNOWN",
      "RED",
      "SEASON",
      "SHOW",
      "UNPLUGGED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "refundResult": {
     "type": "string",
     "enum": [
      "ALREADY_REFUNDED",
      "DENIED_CUSTOMER_ABUSE",
      "DENIED_FRAUD",
      "DENIED_REFUND_EXCEEDS_COURTESY_LIMIT",
      "ISSUED",
      "PERMANENT_REFUND_FAILED",
      "REFUND_RESULT_UNKNOWN",
      "REFUND_RETRIABLE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "RefundOrdersRequest": {
   "id": "RefundOrdersRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "customerEmail": {
     "type": "string"
    },
    "orders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "refundReason": {
     "type": "string",
     "enum": [
      "ACCIDENTAL_PURCHASE",
      "DEFECTIVE",
      "DID_NOT_RECEIVE",
      "FRAUD",
      "FRIENDLY_FRAUD",
      "REFUND_REASON_UNSPECIFIED",
      "REMORSE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "RefundOrdersResponse": {
   "id": "RefundOrdersResponse",
   "type": "object",
   "properties": {
    "approvedOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "approvedOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "escalateOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "escalateOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "failedOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "failedOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "inProgress": {
     "type": "boolean"
    },
    "inProgressOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "inProgressOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "optionalEscalateOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "optionalEscalateOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "processLaterOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "processLaterOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "rejectedOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    },
    "rejectedOrders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    },
    "sidewinderRejectedOrderInfos": {
     "type": "array",
     "items": {
      "$ref": "OrderRefundStatusInfo"
     }
    }
   }
  },
  "RefundTransactionsRequest": {
   "id": "RefundTransactionsRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "forceRefund": {
     "type": "boolean"
    },
    "refundRequestEntries": {
     "type": "array",
     "items": {
      "$ref": "TransactionRefundRequestEntry"
     }
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "RefundTransactionsResponse": {
   "id": "RefundTransactionsResponse",
   "type": "object",
   "properties": {
    "refundStatuses": {
     "type": "array",
     "items": {
      "$ref": "TransactionRefundResponseStatus"
     }
    }
   }
  },
  "RelatedCommunications": {
   "id": "RelatedCommunications",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "communications": {
     "type": "array",
     "items": {
      "$ref": "Communication"
     }
    },
    "relations": {
     "type": "array",
     "items": {
      "$ref": "Relation1"
     }
    },
    "slaTime": {
     "type": "string"
    },
    "state": {
     "type": "string",
     "enum": [
      "ASSIGNED",
      "BLOCKED_BY",
      "FINISHED",
      "IN_CONSULT",
      "NEED_INFO",
      "NEW",
      "SOLUTION_OFFERED",
      "UNASSIGNED",
      "UNKNOWN_CASE_STATE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "Relation": {
   "id": "Relation",
   "type": "object",
   "properties": {
    "duplicate": {
     "$ref": "Duplicate"
    }
   }
  },
  "Relation1": {
   "id": "Relation1",
   "type": "object",
   "properties": {
    "borgAlertId": {
     "type": "string"
    },
    "buganizerId": {
     "type": "string",
     "format": "int64"
    },
    "caseId": {
     "type": "string"
    },
    "legalId": {
     "type": "string"
    },
    "orderId": {
     "type": "string"
    },
    "pcrId": {
     "type": "integer",
     "format": "int32"
    },
    "sourceCaseId": {
     "type": "string"
    },
    "sourceCommunicationId": {
     "type": "string"
    },
    "spixerId": {
     "type": "string"
    },
    "state": {
     "type": "string",
     "enum": [
      "PENDING",
      "RESOLVED",
      "UNKNOWN_RELATION_STATUS"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "type": {
     "type": "string",
     "enum": [
      "BLOCKING",
      "CONSULT",
      "DUPLICATE",
      "SPLIT",
      "UNKNOWN_RELATION_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "walletPaymentMethodHijackReviewIds": {
     "$ref": "WalletPaymentMethodHijackReviewIds"
    },
    "walletSignInReviewIds": {
     "$ref": "WalletSignInReviewIds"
    }
   }
  },
  "ReleaseRequest": {
   "id": "ReleaseRequest",
   "type": "object"
  },
  "ReleaseResponse": {
   "id": "ReleaseResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "ReplacementDetail": {
   "id": "ReplacementDetail",
   "type": "object",
   "properties": {
    "shipments": {
     "type": "array",
     "items": {
      "$ref": "ReplacementShipment"
     }
    }
   }
  },
  "ReplacementDevice": {
   "id": "ReplacementDevice",
   "type": "object",
   "properties": {
    "countryCode": {
     "type": "string"
    },
    "countryExceptionEligible": {
     "type": "boolean"
    },
    "device": {
     "type": "string"
    },
    "gpn": {
     "type": "string"
    },
    "rmaType": {
     "type": "string"
    }
   }
  },
  "ReplacementShipment": {
   "id": "ReplacementShipment",
   "type": "object",
   "properties": {
    "actions": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "INITIATE_RMA",
       "INVESTIGATE_AUTH_HOLD",
       "INVESTIGATE_SHIPPING",
       "REPLACEMENT_SHIPMENT_ACTION_NOT_SET",
       "REVIEW_RMA",
       "SEND_SHIPMENT_STATUS"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "actualDeliveryTime": {
     "type": "string"
    },
    "actualShipDate": {
     "$ref": "Date"
    },
    "carrierName": {
     "type": "string"
    },
    "estimatedDeliveryEndDate": {
     "$ref": "Date"
    },
    "estimatedDeliveryStartDate": {
     "$ref": "Date"
    },
    "isPastEstimatedDeliveryDate": {
     "type": "boolean"
    },
    "lastEventTime": {
     "type": "string"
    },
    "lineItems": {
     "type": "array",
     "items": {
      "$ref": "LineItem"
     }
    },
    "state": {
     "type": "string",
     "enum": [
      "DELIVERED",
      "ERROR",
      "IN_TRANSIT",
      "NOT_SHIPPED",
      "REPLACEMENT_SHIPMENT_STATE_NOT_SET",
      "REPLACEMENT_SHIPMENT_STATE_UNKNOWN"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "trackingNumber": {
     "type": "string"
    },
    "trackingUrl": {
     "type": "string"
    }
   }
  },
  "RequestDeviceSignalsAcceptEvent": {
   "id": "RequestDeviceSignalsAcceptEvent",
   "type": "object",
   "properties": {
    "deviceId": {
     "type": "string"
    }
   }
  },
  "RequestDeviceSignalsCancelEvent": {
   "id": "RequestDeviceSignalsCancelEvent",
   "type": "object"
  },
  "RequestDeviceSignalsCleanupEvent": {
   "id": "RequestDeviceSignalsCleanupEvent",
   "type": "object"
  },
  "RequestDeviceSignalsDeclineEvent": {
   "id": "RequestDeviceSignalsDeclineEvent",
   "type": "object"
  },
  "RequestDeviceSignalsEvent": {
   "id": "RequestDeviceSignalsEvent",
   "type": "object",
   "properties": {
    "acceptEvent": {
     "$ref": "RequestDeviceSignalsAcceptEvent"
    },
    "cancelEvent": {
     "$ref": "RequestDeviceSignalsCancelEvent"
    },
    "cleanupEvent": {
     "$ref": "RequestDeviceSignalsCleanupEvent"
    },
    "declineEvent": {
     "$ref": "RequestDeviceSignalsDeclineEvent"
    },
    "initiateEvent": {
     "$ref": "RequestDeviceSignalsInitiateEvent"
    },
    "invitationId": {
     "type": "string"
    },
    "inviteEvent": {
     "$ref": "RequestDeviceSignalsInviteEvent"
    },
    "receivedEvent": {
     "$ref": "RequestDeviceSignalsReceivedEvent"
    },
    "timeoutEvent": {
     "$ref": "RequestDeviceSignalsTimeoutEvent"
    }
   }
  },
  "RequestDeviceSignalsInitiateEvent": {
   "id": "RequestDeviceSignalsInitiateEvent",
   "type": "object"
  },
  "RequestDeviceSignalsInviteEvent": {
   "id": "RequestDeviceSignalsInviteEvent",
   "type": "object"
  },
  "RequestDeviceSignalsReceivedEvent": {
   "id": "RequestDeviceSignalsReceivedEvent",
   "type": "object"
  },
  "RequestDeviceSignalsTimeoutEvent": {
   "id": "RequestDeviceSignalsTimeoutEvent",
   "type": "object"
  },
  "Requirement": {
   "id": "Requirement",
   "type": "object",
   "properties": {
    "requirementType": {
     "type": "string",
     "enum": [
      "INTERNET",
      "OPERATE",
      "REQUIREMENT_NOT_SET"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "snippetId": {
     "type": "string"
    }
   }
  },
  "Resolution": {
   "id": "Resolution",
   "type": "object",
   "properties": {
    "cannedResponse": {
     "$ref": "CannedResponse1"
    },
    "helpCenter": {
     "$ref": "HelpCenterContent2"
    },
    "matchReason": {
     "type": "string"
    },
    "matchTerms": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "postActions": {
     "type": "array",
     "items": {
      "$ref": "Action"
     }
    },
    "preActions": {
     "type": "array",
     "items": {
      "$ref": "Action"
     }
    },
    "score": {
     "type": "integer",
     "format": "int32"
    },
    "snippet": {
     "type": "string"
    },
    "title": {
     "type": "string"
    },
    "troubleshooter": {
     "$ref": "TroubleShooter"
    },
    "workflow": {
     "$ref": "Workflow1"
    }
   }
  },
  "Resolution1": {
   "id": "Resolution1",
   "type": "object",
   "properties": {
    "helpCenterContent": {
     "$ref": "HelpCenterContent3"
    },
    "score": {
     "type": "number",
     "format": "float"
    },
    "status": {
     "type": "string",
     "enum": [
      "ESCALATED",
      "FAILED",
      "RESOLUTION_STATUS_NOT_SET",
      "SUCCEEDED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "workflowId": {
     "type": "string"
    }
   }
  },
  "ResolutionActivity": {
   "id": "ResolutionActivity",
   "type": "object",
   "properties": {
    "helpCenterArticleId": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "ESCALATED",
      "FAILED",
      "RESOLUTION_STATUS_NOT_SET",
      "SUCCEEDED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "workflowId": {
     "type": "string"
    }
   }
  },
  "ResolutionEvent": {
   "id": "ResolutionEvent",
   "type": "object",
   "properties": {
    "articleId": {
     "type": "string"
    },
    "categories": {
     "type": "array",
     "items": {
      "$ref": "CategoryPath1"
     }
    },
    "description": {
     "type": "string"
    },
    "resolutionId": {
     "type": "string"
    },
    "troubleshooterId": {
     "type": "string"
    }
   }
  },
  "ResolutionOpened": {
   "id": "ResolutionOpened",
   "type": "object",
   "properties": {
    "agentActivitySource": {
     "$ref": "AgentActivitySource"
    },
    "cannedResponse": {
     "$ref": "CannedResponse"
    },
    "deepLinkSource": {
     "$ref": "HelpCenterDeepLinkSource"
    },
    "helpCenterContent": {
     "$ref": "HelpCenterContent"
    },
    "recentlyViewedSource": {
     "$ref": "RecentlyViewedSource"
    },
    "searchSource": {
     "$ref": "ResolutionSearchSource"
    },
    "workflow": {
     "$ref": "Workflow"
    }
   }
  },
  "ResolutionSearchSource": {
   "id": "ResolutionSearchSource",
   "type": "object",
   "properties": {
    "query": {
     "type": "string"
    }
   }
  },
  "ReviewKey": {
   "id": "ReviewKey",
   "type": "object",
   "properties": {
    "review3Id": {
     "type": "string"
    },
    "reviewId": {
     "type": "string"
    },
    "targetUnderReview": {
     "type": "string"
    },
    "token": {
     "type": "string"
    }
   }
  },
  "Rma": {
   "id": "Rma",
   "type": "object",
   "properties": {
    "addressUpdateable": {
     "type": "boolean"
    },
    "bizappSubmitted": {
     "type": "boolean"
    },
    "caseId": {
     "type": "string"
    },
    "deviceId": {
     "type": "string"
    },
    "emailAddress": {
     "type": "string"
    },
    "exchangeDeviceName": {
     "type": "string"
    },
    "exchangeGpn": {
     "type": "string"
    },
    "extendedWarrantyClaimId": {
     "type": "string"
    },
    "failureReason": {
     "type": "string"
    },
    "failureType": {
     "type": "string",
     "enum": [
      "FAILURE_TYPE_NOT_SET",
      "FAILURE_TYPE_UNKNOWN",
      "NOTES_INVALID",
      "PHONE_NUMBER_INVALID",
      "RMA_ALREADY_OPEN_FOR_ASSET",
      "SHIPPING_ADDRESS_ADDRESSEE_INVALID",
      "SHIPPING_ADDRESS_CITY_INVALID",
      "SHIPPING_ADDRESS_COUNTRY_CODE_INVALID",
      "SHIPPING_ADDRESS_INVALID",
      "SHIPPING_ADDRESS_LINE_1_INVALID",
      "SHIPPING_ADDRESS_LINE_2_INVALID",
      "SHIPPING_ADDRESS_LINE_3_INVALID",
      "SHIPPING_ADDRESS_POSTAL_CODE_INVALID",
      "SHIPPING_ADDRESS_STATE_PROVINCE_CODE_INVALID",
      "WALLET_ACCOUNT_REQUIRED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "failures": {
     "type": "array",
     "items": {
      "$ref": "RmaFailure"
     }
    },
    "gpn": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "notes": {
     "type": "string"
    },
    "orderNumber": {
     "type": "string"
    },
    "packingLabelRequired": {
     "type": "boolean"
    },
    "reasonCodeIdentifier": {
     "type": "string"
    },
    "replacementCartLink": {
     "type": "string"
    },
    "rmaAction": {
     "type": "string",
     "enum": [
      "ADVANCED_EXCHANGE",
      "EXCHANGE",
      "EXCHANGE_WITHOUT_RETURN",
      "REPAIR",
      "RETURN",
      "UNKNOWN_ACTION",
      "WARRANTY_REFUND"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "rmaCategory": {
     "type": "string"
    },
    "rmaId": {
     "type": "string"
    },
    "rmaNumber": {
     "type": "string"
    },
    "rmaSubcategory": {
     "type": "string"
    },
    "rmaType": {
     "type": "string"
    },
    "shipmentId": {
     "type": "string"
    },
    "shippingAddress": {
     "$ref": "MailingAddress"
    },
    "shippingLabelRequired": {
     "type": "boolean"
    },
    "shippingProvider": {
     "type": "string",
     "enum": [
      "FEDEX",
      "UNKNOWN_SHIPPING_PROVIDER",
      "UPS"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "shippingTrackingNumber": {
     "type": "string"
    },
    "state": {
     "type": "string",
     "enum": [
      "RMA_CANCELLED",
      "RMA_COMPLETED",
      "RMA_INCOMPLETE",
      "RMA_PENDING",
      "RMA_SUBMITTED",
      "UNKNOWN_RMA_STATE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "submitTime": {
     "type": "string"
    },
    "warrantyException": {
     "type": "string"
    }
   }
  },
  "RmaCategory": {
   "id": "RmaCategory",
   "type": "object",
   "properties": {
    "categoryName": {
     "type": "string"
    },
    "disabled": {
     "type": "boolean"
    },
    "reasonCodes": {
     "type": "array",
     "items": {
      "$ref": "RmaReasonCode"
     }
    },
    "subcategories": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "RmaDescription": {
   "id": "RmaDescription",
   "type": "object",
   "properties": {
    "notes": {
     "type": "string"
    },
    "rmaAction": {
     "type": "string",
     "enum": [
      "ADVANCED_EXCHANGE",
      "EXCHANGE",
      "EXCHANGE_WITHOUT_RETURN",
      "REPAIR",
      "RETURN",
      "UNKNOWN_ACTION",
      "WARRANTY_REFUND"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "rmaCategory": {
     "type": "string"
    },
    "rmaSubcategory": {
     "type": "string"
    },
    "rmaType": {
     "type": "string"
    }
   }
  },
  "RmaDevice": {
   "id": "RmaDevice",
   "type": "object",
   "properties": {
    "deviceId": {
     "type": "string"
    },
    "deviceName": {
     "type": "string"
    },
    "hashedFullDeviceId": {
     "type": "string"
    },
    "shipmentInfo": {
     "$ref": "ShippingInfo1"
    }
   }
  },
  "RmaFailure": {
   "id": "RmaFailure",
   "type": "object",
   "properties": {
    "failureExceptionMessage": {
     "type": "string"
    },
    "failureType": {
     "type": "string",
     "enum": [
      "FAILURE_TYPE_NOT_SET",
      "FAILURE_TYPE_UNKNOWN",
      "NOTES_INVALID",
      "PHONE_NUMBER_INVALID",
      "RMA_ALREADY_OPEN_FOR_ASSET",
      "SHIPPING_ADDRESS_ADDRESSEE_INVALID",
      "SHIPPING_ADDRESS_CITY_INVALID",
      "SHIPPING_ADDRESS_COUNTRY_CODE_INVALID",
      "SHIPPING_ADDRESS_INVALID",
      "SHIPPING_ADDRESS_LINE_1_INVALID",
      "SHIPPING_ADDRESS_LINE_2_INVALID",
      "SHIPPING_ADDRESS_LINE_3_INVALID",
      "SHIPPING_ADDRESS_POSTAL_CODE_INVALID",
      "SHIPPING_ADDRESS_STATE_PROVINCE_CODE_INVALID",
      "WALLET_ACCOUNT_REQUIRED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "validationReason": {
     "type": "string",
     "enum": [
      "INVALID",
      "TOO_LONG",
      "VALIDATION_FAILURE_NOT_SET"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    }
   }
  },
  "RmaIdentifier": {
   "id": "RmaIdentifier",
   "type": "object",
   "properties": {
    "rmaId": {
     "type": "string"
    },
    "rmaNumber": {
     "type": "string"
    }
   }
  },
  "RmaInfo": {
   "id": "RmaInfo",
   "type": "object",
   "properties": {
    "originalRmaNumber": {
     "type": "string"
    },
    "originalRmaState": {
     "type": "string",
     "enum": [
      "RMA_CANCELLED",
      "RMA_COMPLETED",
      "RMA_INCOMPLETE",
      "RMA_PENDING",
      "RMA_STATE_NOT_SET",
      "RMA_SUBMITTED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "replacementRmaNumber": {
     "type": "string"
    },
    "rmaAction": {
     "type": "string",
     "enum": [
      "ADVANCED_EXCHANGE",
      "EXCHANGE",
      "EXCHANGE_WITHOUT_RETURN",
      "REPAIR",
      "RETURN",
      "RMA_ACTION_NOT_SET",
      "WARRANTY_REFUND"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "RmaOrderDetail": {
   "id": "RmaOrderDetail",
   "type": "object",
   "properties": {
    "actions": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "ACTION_NOT_SET",
       "CANCEL_AUTH_HOLD",
       "CANCEL_RMA",
       "MARK_ORIGINAL_DEVICE_RECEIVED_IN_STANDARD_EXCHANGE",
       "OTHER_ACTIONS_REQUIRE_AUTH",
       "REGENERATE_CART_LINK",
       "RESEND_PACKING_LABEL",
       "RESEND_SHIPPING_LABEL",
       "SEND_STATUS"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "authHold": {
     "type": "boolean"
    },
    "description": {
     "$ref": "RmaDescription"
    },
    "originalDevice": {
     "$ref": "RmaDevice"
    },
    "originalOrderId": {
     "type": "string"
    },
    "originalShipmentId": {
     "type": "string"
    },
    "refundDetails": {
     "$ref": "RefundDetail"
    },
    "replacementDevice": {
     "$ref": "RmaDevice"
    },
    "replacementOrderId": {
     "type": "string"
    },
    "replacementShipmentId": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "CANCEL_AUTH_HOLD_PENDING",
      "CLOSED",
      "PENDING_RETURN",
      "RECEIVED_OLD_DEVICE",
      "REFUND_PENDING",
      "RMA_INCOMPLETE",
      "STATUS_NOT_SET",
      "STATUS_UNAVAILABLE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "RmaReasonCode": {
   "id": "RmaReasonCode",
   "type": "object",
   "properties": {
    "id": {
     "type": "string"
    },
    "subcategory": {
     "type": "string"
    }
   }
  },
  "RmaType": {
   "id": "RmaType",
   "type": "object",
   "properties": {
    "actions": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "ADVANCED_EXCHANGE",
       "EXCHANGE",
       "EXCHANGE_WITHOUT_RETURN",
       "REPAIR",
       "RETURN",
       "UNKNOWN_ACTION",
       "WARRANTY_REFUND"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "rmaCategories": {
     "type": "array",
     "items": {
      "$ref": "RmaCategory"
     }
    },
    "typeName": {
     "type": "string"
    }
   }
  },
  "RouteRequest": {
   "id": "RouteRequest",
   "type": "object",
   "properties": {
    "locale": {
     "type": "string"
    },
    "productId": {
     "type": "string"
    },
    "reason": {
     "type": "string"
    },
    "routingId": {
     "type": "string"
    }
   }
  },
  "RouteResponse": {
   "id": "RouteResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "RoutingInfo": {
   "id": "RoutingInfo",
   "type": "object",
   "properties": {
    "agentTransfer": {
     "$ref": "AgentTransfer"
    },
    "chatTransfer": {
     "$ref": "ChatTransfer"
    },
    "localeTransfer": {
     "$ref": "LocaleTransfer"
    },
    "productTransfer": {
     "$ref": "ProductTransfer"
    },
    "routingTargetName": {
     "type": "string"
    }
   }
  },
  "RoutingTarget": {
   "id": "RoutingTarget",
   "type": "object",
   "properties": {
    "chat": {
     "$ref": "Chat1"
    },
    "email": {
     "$ref": "Email2"
    },
    "targetId": {
     "type": "string"
    },
    "targetName": {
     "type": "string"
    }
   }
  },
  "RunRmaStepsRequest": {
   "id": "RunRmaStepsRequest",
   "type": "object",
   "properties": {
    "action": {
     "type": "string",
     "enum": [
      "ADVANCED_EXCHANGE",
      "EXCHANGE",
      "EXCHANGE_WITHOUT_RETURN",
      "REPAIR",
      "RETURN",
      "UNKNOWN_ACTION",
      "WARRANTY_REFUND"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "caseId": {
     "type": "string"
    },
    "draftMessageId": {
     "type": "string"
    },
    "shippingAddress": {
     "$ref": "MailingAddress"
    },
    "skipAddressValidation": {
     "type": "boolean"
    },
    "ssoCookie": {
     "type": "string"
    },
    "steps": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "GENERATE_PACKING_LABEL_STEP",
       "GENERATE_REPLACEMENT_CART_LINK_STEP",
       "GENERATE_SHIPPING_LABEL_STEP",
       "RMA_RUN_STEP_NOT_SET",
       "UNKNOWN_RMA_STEP",
       "UPDATE_ADDRESS_AND_SEND_SHIPPING_EMAIL_STEP"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    }
   }
  },
  "RunRmaStepsResponse": {
   "id": "RunRmaStepsResponse",
   "type": "object",
   "properties": {
    "draftMessageId": {
     "type": "string"
    },
    "rma": {
     "$ref": "Rma"
    }
   }
  },
  "RunWorkflowRequest": {
   "id": "RunWorkflowRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "draftMessageId": {
     "type": "string"
    },
    "rmaId": {
     "type": "string"
    },
    "rmaNumber": {
     "type": "string"
    },
    "shippingAddress": {
     "$ref": "MailingAddress"
    },
    "ssoCookie": {
     "type": "string"
    },
    "steps": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "GENERATE_PACKING_LABEL",
       "GENERATE_REPLACEMENT_CART_LINK",
       "GENERATE_SHIPPING_LABEL",
       "SUBMIT_RMA",
       "UNKNOWN_FLOW",
       "UPDATE_ADDRESS_AND_SEND_SHIPPING_EMAIL"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       "",
       ""
      ]
     }
    }
   }
  },
  "RunWorkflowResponse": {
   "id": "RunWorkflowResponse",
   "type": "object",
   "properties": {
    "result": {
     "$ref": "WorkflowResult"
    }
   }
  },
  "SaveRmaRequest": {
   "id": "SaveRmaRequest",
   "type": "object",
   "properties": {
    "rma": {
     "$ref": "Rma"
    }
   }
  },
  "SaveRmaResponse": {
   "id": "SaveRmaResponse",
   "type": "object",
   "properties": {
    "rma": {
     "$ref": "Rma"
    }
   }
  },
  "Search": {
   "id": "Search",
   "type": "object",
   "properties": {
    "displayName": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "searchId": {
     "type": "string"
    },
    "teamId": {
     "type": "string"
    }
   }
  },
  "SearchAccountReviewsRequest": {
   "id": "SearchAccountReviewsRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "SearchAccountReviewsResponse": {
   "id": "SearchAccountReviewsResponse",
   "type": "object",
   "properties": {
    "review": {
     "type": "array",
     "items": {
      "$ref": "AccountReview"
     }
    }
   }
  },
  "SearchCategoryInfosResponse": {
   "id": "SearchCategoryInfosResponse",
   "type": "object",
   "properties": {
    "categoryInfos": {
     "type": "array",
     "items": {
      "$ref": "CategoryInfo"
     }
    }
   }
  },
  "SearchCount": {
   "id": "SearchCount",
   "type": "object",
   "properties": {
    "casesType": {
     "type": "string",
     "enum": [
      "ASSIGNED",
      "UNKNOWN_CASE_TYPE",
      "WAITING"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "dueByStatus": {
     "type": "string",
     "enum": [
      "NONE",
      "OVERDUE",
      "UNKNOWN_DUE_BY_STATUS",
      "URGENT"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "searchCount": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "SearchMultipleCategoryInfosRequest": {
   "id": "SearchMultipleCategoryInfosRequest",
   "type": "object",
   "properties": {
    "filterConsultCategories": {
     "type": "boolean"
    },
    "maximumResults": {
     "type": "integer",
     "format": "int32"
    },
    "productIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "query": {
     "type": "string"
    },
    "topCategoryPaths": {
     "type": "array",
     "items": {
      "$ref": "CategoryPath"
     }
    }
   }
  },
  "SearchOrdersRequest": {
   "id": "SearchOrdersRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "customerEmail": {
     "type": "string"
    },
    "endAmount": {
     "$ref": "Money"
    },
    "endDate": {
     "type": "string"
    },
    "includeFreeOrders": {
     "type": "boolean"
    },
    "instrumentLastFourCharacters": {
     "type": "string"
    },
    "locale": {
     "type": "string"
    },
    "pageSize": {
     "type": "integer",
     "format": "int32"
    },
    "pageToken": {
     "type": "string"
    },
    "q": {
     "type": "string"
    },
    "queryId": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    },
    "startAmount": {
     "$ref": "Money"
    },
    "startDate": {
     "type": "string"
    },
    "subscriptionId": {
     "type": "string"
    }
   }
  },
  "SearchOrdersResponse": {
   "id": "SearchOrdersResponse",
   "type": "object",
   "properties": {
    "nextPageToken": {
     "type": "string"
    },
    "orders": {
     "type": "array",
     "items": {
      "$ref": "Order"
     }
    }
   }
  },
  "SearchSetting": {
   "id": "SearchSetting",
   "type": "object",
   "properties": {
    "activeTeamSearches": {
     "type": "array",
     "items": {
      "$ref": "TeamSearches"
     }
    },
    "disabledTeamSearches": {
     "type": "array",
     "items": {
      "$ref": "TeamSearches"
     }
    },
    "enableAssignStream": {
     "type": "boolean"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "SendEmailRequest": {
   "id": "SendEmailRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "sendDelay": {
     "type": "string"
    }
   }
  },
  "SendEmailResponse": {
   "id": "SendEmailResponse",
   "type": "object",
   "properties": {
    "communication": {
     "$ref": "Communication"
    }
   }
  },
  "SendRmaRequest": {
   "id": "SendRmaRequest",
   "type": "object",
   "properties": {
    "draftMessageId": {
     "type": "string"
    },
    "rma": {
     "$ref": "Rma"
    },
    "skipAddressValidation": {
     "type": "boolean"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "SendRmaResponse": {
   "id": "SendRmaResponse",
   "type": "object",
   "properties": {
    "draftMessageId": {
     "type": "string"
    },
    "rma": {
     "$ref": "Rma"
    }
   }
  },
  "SetCallbackNumberRequest": {
   "id": "SetCallbackNumberRequest",
   "type": "object",
   "properties": {
    "phoneNumber": {
     "$ref": "PhoneNumber"
    }
   }
  },
  "SetCallbackNumberResponse": {
   "id": "SetCallbackNumberResponse",
   "type": "object"
  },
  "Settings": {
   "id": "Settings",
   "type": "object",
   "properties": {
    "authenticationSettings": {
     "$ref": "AuthenticationSettings"
    },
    "consultSettings": {
     "$ref": "ConsultSettings"
    },
    "displayName": {
     "type": "string"
    },
    "dueTimeCalculationMethod": {
     "type": "string",
     "enum": [
      "DUE_TIME_CALCULATION_METHOD_NOT_SET",
      "RESOLUTION_TARGET",
      "SLA"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "easterEggSettings": {
     "$ref": "EasterEggSettings"
    },
    "escalateSettings": {
     "$ref": "EscalateSettings"
    },
    "externalToolSettings": {
     "$ref": "ExternalToolSettings"
    },
    "feedbackProductId": {
     "type": "string"
    },
    "issueCategorySettings": {
     "$ref": "IssueCategorySettings"
    },
    "name": {
     "type": "string"
    },
    "productId": {
     "type": "string"
    },
    "productName": {
     "type": "string"
    },
    "supportedLocales": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "ShippingAddress": {
   "id": "ShippingAddress",
   "type": "object",
   "properties": {
    "address": {
     "$ref": "PhysicalMailingAddress"
    },
    "addressLines": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "ShippingCustomerName": {
   "id": "ShippingCustomerName",
   "type": "object",
   "properties": {
    "customerName": {
     "type": "string"
    }
   }
  },
  "ShippingCustomerPhoneNumber": {
   "id": "ShippingCustomerPhoneNumber",
   "type": "object",
   "properties": {
    "phoneNumber": {
     "type": "string"
    }
   }
  },
  "ShippingInfo": {
   "id": "ShippingInfo",
   "type": "object",
   "properties": {
    "actualDeliveryTime": {
     "type": "string"
    },
    "actualShipDate": {
     "$ref": "Date"
    },
    "carrierName": {
     "type": "string"
    },
    "estimatedDeliveryEndDate": {
     "$ref": "Date"
    },
    "estimatedDeliveryStartDate": {
     "$ref": "Date"
    },
    "estimatedShipDate": {
     "$ref": "Date"
    },
    "isDelivered": {
     "type": "boolean"
    },
    "isPastEstimatedDeliveryDate": {
     "type": "boolean"
    },
    "lastEventTime": {
     "type": "string"
    },
    "shippingType": {
     "type": "string",
     "enum": [
      "BUDGET_GROUND",
      "GROUND",
      "INTERNATIONAL_PRIORITY",
      "OVERNIGHT",
      "SHIPPING_TYPE_NOT_SET",
      "STANDARD",
      "TWO_DAY_AIR"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "totalAmount": {
     "$ref": "Money"
    },
    "trackingNumber": {
     "type": "string"
    }
   }
  },
  "ShippingInfo1": {
   "id": "ShippingInfo1",
   "type": "object",
   "properties": {
    "actualDeliveryTime": {
     "type": "string"
    },
    "actualShipDate": {
     "$ref": "Date"
    },
    "carrierName": {
     "type": "string"
    },
    "estimatedDeliveryEndDate": {
     "$ref": "Date"
    },
    "estimatedDeliveryStartDate": {
     "$ref": "Date"
    },
    "estimatedShipDate": {
     "$ref": "Date"
    },
    "shipmentState": {
     "type": "string",
     "enum": [
      "NOT_YET_SHIPPED",
      "SHIPMENT_ERROR",
      "SHIPPED",
      "SHIPPING_INFO_STATE_NOT_SET"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "trackingNumber": {
     "type": "string"
    },
    "trackingUrl": {
     "type": "string"
    }
   }
  },
  "ShmoovieSignals": {
   "id": "ShmoovieSignals",
   "type": "object",
   "properties": {
    "episode": {
     "type": "string"
    },
    "expireTimeFromPurchaseTime": {
     "type": "string"
    },
    "localizedExpireTimeFromPurchaseTime": {
     "$ref": "LocalizedTimestamp"
    },
    "localizedRentalExpireTime": {
     "$ref": "LocalizedTimestamp"
    },
    "localizedRentalStartWatchByTime": {
     "$ref": "LocalizedTimestamp"
    },
    "localizedRentalStartWatchTime": {
     "$ref": "LocalizedTimestamp"
    },
    "model": {
     "type": "string",
     "enum": [
      "PURCHASE",
      "RENTAL",
      "SELLING_MODEL_UNKNOWN"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "price": {
     "$ref": "Money"
    },
    "rentalExpireTime": {
     "type": "string"
    },
    "rentalStartWatchByTime": {
     "type": "string"
    },
    "rentalStartWatchTime": {
     "type": "string"
    },
    "season": {
     "type": "string"
    },
    "source": {
     "type": "string",
     "enum": [
      "GOOGLE_PLAY",
      "SHMOOVIE_SOURCE_UNKNOWN",
      "YOUTUBE"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    }
   }
  },
  "ShowSummaryAction": {
   "id": "ShowSummaryAction",
   "type": "object",
   "properties": {
    "accountInfo": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "ACCOUNT_INFO_UNSPECIFIED",
       "ALERT_REVIEW"
      ],
      "enumDescriptions": [
       "",
       ""
      ]
     }
    },
    "declinedTxCount": {
     "type": "integer",
     "format": "int32"
    },
    "pendingTxCount": {
     "type": "integer",
     "format": "int32"
    },
    "recentStartTime": {
     "type": "string"
    },
    "rejectedTxCount": {
     "type": "integer",
     "format": "int32"
    },
    "searchContext": {
     "type": "string"
    },
    "transactionNotFoundDifmId": {
     "type": "integer",
     "format": "int32"
    },
    "transactionNotFoundScriptId": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "SidewinderRole": {
   "id": "SidewinderRole",
   "type": "object",
   "properties": {
    "isOnsite": {
     "type": "boolean"
    }
   }
  },
  "Source": {
   "id": "Source",
   "type": "object",
   "properties": {
    "agentEmailAddress": {
     "type": "string"
    },
    "atlasProduct": {
     "type": "string"
    },
    "casesService": {
     "type": "string",
     "enum": [
      "BACKEND",
      "CHAT",
      "EMAIL_PROCESSOR",
      "FINISHER",
      "OUTBOX_SENDER",
      "QUALITY_REVIEW_SELECTOR",
      "UNKNOWN_CASES_SERVICE",
      "WIPEOUT"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "externalService": {
     "type": "string",
     "enum": [
      "CUF",
      "MEDLEY",
      "MOJO",
      "UDS",
      "UNKNOWN_EXTERNAL_SERVICE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "robotEmailAddress": {
     "type": "string"
    },
    "routingRuleId": {
     "type": "string"
    }
   }
  },
  "SpamRequest": {
   "id": "SpamRequest",
   "type": "object"
  },
  "SpamResponse": {
   "id": "SpamResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "SplitRequest": {
   "id": "SplitRequest",
   "type": "object",
   "properties": {
    "communicationId": {
     "type": "string"
    }
   }
  },
  "SplitResponse": {
   "id": "SplitResponse",
   "type": "object",
   "properties": {
    "sourceCase": {
     "$ref": "Case"
    },
    "targetCase": {
     "$ref": "Case"
    }
   }
  },
  "SplitTender": {
   "id": "SplitTender",
   "type": "object",
   "properties": {
    "amount": {
     "$ref": "Money"
    },
    "instrument": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "CANCELLED",
      "CHARGED",
      "CHARGED_BACK",
      "DECLINED",
      "OTHER_STATUS",
      "PENDING",
      "REFUNDED",
      "REJECTED",
      "UNKNOWN_WALLET_TRANSACTION_STATUS"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "Status": {
   "id": "Status",
   "type": "object",
   "properties": {
    "code": {
     "type": "integer",
     "format": "int32"
    },
    "details": {
     "type": "array",
     "items": {
      "type": "object",
      "additionalProperties": {
       "type": "any"
      }
     }
    },
    "message": {
     "type": "string"
    }
   }
  },
  "StepResult": {
   "id": "StepResult",
   "type": "object",
   "properties": {
    "errorMessage": {
     "type": "string"
    },
    "status": {
     "type": "string",
     "enum": [
      "FAILED",
      "NOT_PROCESSED",
      "SUCCESSFUL",
      "UNKNOWN_STEP_STATUS"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "step": {
     "type": "string",
     "enum": [
      "GENERATE_PACKING_LABEL",
      "GENERATE_REPLACEMENT_CART_LINK",
      "GENERATE_SHIPPING_LABEL",
      "SUBMIT_RMA",
      "UNKNOWN_FLOW",
      "UPDATE_ADDRESS_AND_SEND_SHIPPING_EMAIL"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "SubmitRmaRequest": {
   "id": "SubmitRmaRequest",
   "type": "object",
   "properties": {
    "draftMessageId": {
     "type": "string"
    },
    "rma": {
     "$ref": "Rma"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "SubmitRmaResponse": {
   "id": "SubmitRmaResponse",
   "type": "object",
   "properties": {
    "draftMessageId": {
     "type": "string"
    },
    "isDraftMessageUpdated": {
     "type": "boolean"
    },
    "rma": {
     "$ref": "Rma"
    }
   }
  },
  "Subscription": {
   "id": "Subscription",
   "type": "object",
   "properties": {
    "amount": {
     "$ref": "Money"
    },
    "billingPeriod": {
     "type": "string",
     "enum": [
      "BILLING_PERIOD_UNSPECIFIED",
      "DAY",
      "HOUR",
      "MONTH",
      "SEASONAL",
      "SIX_MONTHS",
      "THREE_MONTHS",
      "WEEK",
      "YEAR"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "cancelDate": {
     "type": "string"
    },
    "docid": {
     "$ref": "Docid"
    },
    "firstChargedDate": {
     "type": "string"
    },
    "id": {
     "type": "string"
    },
    "isTrial": {
     "type": "boolean"
    },
    "offerType": {
     "type": "string",
     "enum": [
      "BUNDLED",
      "GROUP_LICENSE",
      "LICENSE",
      "NONE",
      "OFFER_TYPE_UNSPECIFIED",
      "PREORDER",
      "PURCHASE",
      "PURCHASE_HIGH_DEF",
      "RENTAL",
      "RENTAL_HIGH_DEF",
      "SAMPLE",
      "SUBSCRIPTION",
      "SUBSCRIPTION_CONTENT"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "paymentDeclinedDate": {
     "type": "string"
    },
    "purchaseIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "renewDate": {
     "type": "string"
    },
    "state": {
     "type": "string",
     "enum": [
      "ACTIVE",
      "CANCELED",
      "EXPIRED",
      "IN_GRACE_PERIOD",
      "SUBSCRIPTION_STATE_UNSPECIFIED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "terminateDate": {
     "type": "string"
    },
    "title": {
     "type": "string"
    },
    "vertical": {
     "type": "string",
     "enum": [
      "ANDROID_APPS",
      "BOOKS",
      "COMMERCE",
      "DEVICES",
      "MAGAZINES",
      "MOVIES_AND_TV",
      "MULTI_CONTAINER",
      "MUSIC",
      "VERTICAL_UNSPECIFIED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "SubscriptionComponent": {
   "id": "SubscriptionComponent",
   "type": "object",
   "properties": {
    "componentData": {
     "$ref": "ComponentData"
    },
    "name": {
     "type": "string"
    },
    "token": {
     "$ref": "ComponentToken"
    }
   }
  },
  "SubscriptionSignals": {
   "id": "SubscriptionSignals",
   "type": "object",
   "properties": {
    "featureExpireTime": {
     "type": "string"
    },
    "freeTrialPeriod": {
     "$ref": "Period"
    },
    "introductoryPeriod": {
     "$ref": "Period"
    },
    "introductoryPrice": {
     "$ref": "Money"
    },
    "localizedFeatureExpireTime": {
     "$ref": "LocalizedTimestamp"
    },
    "localizedNextPaymentTime": {
     "$ref": "LocalizedTimestamp"
    },
    "nextPaymentTime": {
     "type": "string"
    },
    "pricePerMonth": {
     "$ref": "Money"
    }
   }
  },
  "SuggestNewEmailHeadersResponse": {
   "id": "SuggestNewEmailHeadersResponse",
   "type": "object",
   "properties": {
    "fromHeaders": {
     "type": "array",
     "items": {
      "$ref": "Contact"
     }
    },
    "toHeaders": {
     "type": "array",
     "items": {
      "$ref": "Contact"
     }
    }
   }
  },
  "SuggestNoteHeadersResponse": {
   "id": "SuggestNoteHeadersResponse",
   "type": "object",
   "properties": {
    "fromHeaders": {
     "type": "array",
     "items": {
      "$ref": "Contact"
     }
    },
    "toHeaders": {
     "type": "array",
     "items": {
      "$ref": "Contact"
     }
    }
   }
  },
  "SuggestPaymentInstrumentIssuerResponse": {
   "id": "SuggestPaymentInstrumentIssuerResponse",
   "type": "object",
   "properties": {
    "suggestions": {
     "type": "array",
     "items": {
      "$ref": "PaymentsSuggestion"
     }
    }
   }
  },
  "SuggestReplyEmailHeadersResponse": {
   "id": "SuggestReplyEmailHeadersResponse",
   "type": "object",
   "properties": {
    "ccHeaders": {
     "type": "array",
     "items": {
      "$ref": "Contact"
     }
    },
    "fromHeaders": {
     "type": "array",
     "items": {
      "$ref": "Contact"
     }
    },
    "toHeaders": {
     "type": "array",
     "items": {
      "$ref": "Contact"
     }
    }
   }
  },
  "SuggestResolutionsRequest": {
   "id": "SuggestResolutionsRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    }
   }
  },
  "SuggestResolutionsResponse": {
   "id": "SuggestResolutionsResponse",
   "type": "object",
   "properties": {
    "resolutions": {
     "type": "array",
     "items": {
      "$ref": "SuggestedResolution"
     }
    }
   }
  },
  "SuggestedResolution": {
   "id": "SuggestedResolution",
   "type": "object",
   "properties": {
    "id": {
     "type": "string"
    },
    "type": {
     "type": "string",
     "enum": [
      "CANNED_RESPONSE",
      "EXTERNAL_HC",
      "INTERNAL_HC",
      "SUGGESTED_RESOLUTION_TYPE_UNSPECIFIED",
      "TROUBLESHOOTER",
      "WORKFLOW"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "SummarizeResponse": {
   "id": "SummarizeResponse",
   "type": "object",
   "properties": {
    "adwordsCid": {
     "type": "boolean"
    },
    "emailAddress": {
     "type": "boolean"
    },
    "summary": {
     "$ref": "Summary"
    }
   }
  },
  "Summary": {
   "id": "Summary",
   "type": "object",
   "properties": {
    "casesByChannel": {
     "type": "array",
     "items": {
      "$ref": "ChannelCount"
     }
    },
    "casesByProduct": {
     "type": "array",
     "items": {
      "$ref": "ProductCount"
     }
    },
    "mostRecentClosedCase": {
     "$ref": "Interaction"
    },
    "mostRecentOpenCase": {
     "$ref": "Interaction"
    },
    "openCases": {
     "$ref": "InteractionCount"
    },
    "totalCases": {
     "$ref": "InteractionCount"
    }
   }
  },
  "SupportLink": {
   "id": "SupportLink",
   "type": "object",
   "properties": {
    "displayName": {
     "type": "string"
    },
    "linkUrl": {
     "type": "string"
    }
   }
  },
  "TakeRequest": {
   "id": "TakeRequest",
   "type": "object"
  },
  "TakeResponse": {
   "id": "TakeResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "Tax": {
   "id": "Tax",
   "type": "object",
   "properties": {
    "amount": {
     "$ref": "Money"
    },
    "type": {
     "type": "string",
     "enum": [
      "SALES_TAX",
      "TELECOM_TAX",
      "UNKNOWN_TAX"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    }
   }
  },
  "Team": {
   "id": "Team",
   "type": "object",
   "properties": {
    "displayName": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "teamId": {
     "type": "string"
    }
   }
  },
  "TeamSearches": {
   "id": "TeamSearches",
   "type": "object",
   "properties": {
    "searchIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "teamId": {
     "type": "string"
    }
   }
  },
  "Timezone": {
   "id": "Timezone",
   "type": "object",
   "properties": {
    "utcOffset": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "Transaction": {
   "id": "Transaction",
   "type": "object",
   "properties": {
    "billingBackend": {
     "type": "string",
     "enum": [
      "BILLING",
      "CDP",
      "PAYMENT_BACKEND_UNDEFINED"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "isProratedCharge": {
     "type": "boolean"
    },
    "isRefund": {
     "type": "boolean"
    },
    "isRefundable": {
     "type": "boolean"
    },
    "isRefunded": {
     "type": "boolean"
    },
    "lineItems": {
     "type": "array",
     "items": {
      "$ref": "TransactionLineItem"
     }
    },
    "localizedRefundTime": {
     "$ref": "LocalizedTimestamp"
    },
    "localizedTransactionTime": {
     "$ref": "LocalizedTimestamp"
    },
    "name": {
     "type": "string"
    },
    "orderCode": {
     "type": "string"
    },
    "paymentDescription": {
     "type": "string"
    },
    "paymentMethod": {
     "type": "string",
     "enum": [
      "BANK_ACCOUNT",
      "BILLING_ACCOUNT",
      "CARRIER_BILLING",
      "CREDIT_CARD",
      "FINANCING",
      "GOOGLE_STANDARD_TOKENIZED",
      "MONETIZATION_CHANNEL",
      "NETBANKING",
      "PAYMENT_METHOD_UNKNOWN",
      "PAYPAL",
      "STORED_VALUE_CLOSED_LOOP_PLAY",
      "STORED_VALUE_OPEN_LOOP"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "refundReason": {
     "type": "string",
     "enum": [
      "CANCEL_REFUND_REASON_UNKNOWN",
      "FEATURE_NOT_WORKING",
      "FRIEND_OR_FAMILY_CHARGES",
      "NO_LONGER_WANTED_REMORSE",
      "PURCHASE_BY_ACCIDENT",
      "SELF_SERVICE_REFUND",
      "UNRECOGNIZED_CHARGES_PAYMENT_FRAUD"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "refundTime": {
     "type": "string"
    },
    "state": {
     "type": "string",
     "enum": [
      "TRANSACTION_NOT_REFUNDABLE",
      "TRANSACTION_REFUNDABLE",
      "TRANSACTION_REFUNDED",
      "TRANSACTION_STATE_UNKNOWN"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "textDescription": {
     "type": "string"
    },
    "transactionAmount": {
     "$ref": "Money"
    },
    "transactionId": {
     "type": "string"
    },
    "transactionStatus": {
     "type": "string",
     "enum": [
      "CANCELLED",
      "CHARGED",
      "CHARGED_BACK",
      "DECLINED",
      "OTHER_STATUS",
      "PENDING",
      "REFUNDED",
      "REJECTED",
      "TRANSACTION_STATUS_UNKNOWN"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "transactionTime": {
     "type": "string"
    },
    "transactionToken": {
     "type": "string"
    }
   }
  },
  "TransactionIdentifier": {
   "id": "TransactionIdentifier",
   "type": "object",
   "properties": {
    "orderId": {
     "type": "string"
    },
    "transactionId": {
     "type": "string"
    },
    "transactionType": {
     "type": "string",
     "enum": [
      "GOOGLE_PLAY",
      "GOOGLE_STORE",
      "P2P_RECEIVER",
      "P2P_SENDER",
      "TAP_AND_PAY",
      "UNKNOWN_WALLET_TRANSACTION_TYPE",
      "WALLET_CARD",
      "YOUTUBE_PURCHASE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "youtubeVideoId": {
     "type": "string"
    }
   }
  },
  "TransactionLineItem": {
   "id": "TransactionLineItem",
   "type": "object",
   "properties": {
    "componentKey": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "lineItemIndex": {
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "type": "string"
    },
    "price": {
     "$ref": "Money"
    },
    "tax": {
     "type": "array",
     "items": {
      "$ref": "Tax"
     }
    }
   }
  },
  "TransactionRefundRequestEntry": {
   "id": "TransactionRefundRequestEntry",
   "type": "object",
   "properties": {
    "refundReason": {
     "type": "string",
     "enum": [
      "CANCEL_REFUND_REASON_UNKNOWN",
      "FEATURE_NOT_WORKING",
      "FRIEND_OR_FAMILY_CHARGES",
      "NO_LONGER_WANTED_REMORSE",
      "PURCHASE_BY_ACCIDENT",
      "SELF_SERVICE_REFUND",
      "UNRECOGNIZED_CHARGES_PAYMENT_FRAUD"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "transactionTokens": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "TransactionRefundResponseStatus": {
   "id": "TransactionRefundResponseStatus",
   "type": "object",
   "properties": {
    "refundResult": {
     "type": "string",
     "enum": [
      "ALREADY_REFUNDED",
      "DENIED_CUSTOMER_ABUSE",
      "DENIED_FRAUD",
      "DENIED_REFUND_EXCEEDS_COURTESY_LIMIT",
      "ISSUED",
      "PERMANENT_REFUND_FAILED",
      "REFUND_RESULT_UNKNOWN",
      "REFUND_RETRIABLE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "transactionToken": {
     "type": "string"
    }
   }
  },
  "TransactionsSummary": {
   "id": "TransactionsSummary",
   "type": "object",
   "properties": {
    "amount": {
     "$ref": "Money"
    },
    "count": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "TransferAction": {
   "id": "TransferAction",
   "type": "object",
   "properties": {
    "resolutionId": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "TransferRequest": {
   "id": "TransferRequest",
   "type": "object",
   "properties": {
    "emailAddress": {
     "type": "string"
    }
   }
  },
  "TransferResponse": {
   "id": "TransferResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "TroubleShooter": {
   "id": "TroubleShooter",
   "type": "object",
   "properties": {
    "hcId": {
     "type": "string"
    },
    "helpCenter": {
     "type": "string"
    },
    "isPublic": {
     "type": "boolean"
    },
    "locale": {
     "type": "string"
    },
    "url": {
     "type": "string"
    }
   }
  },
  "TroubleshootAccountRequest": {
   "id": "TroubleshootAccountRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "email": {
     "type": "string"
    },
    "searchRecentStartTimestamp": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "TroubleshootAccountResponse": {
   "id": "TroubleshootAccountResponse",
   "type": "object",
   "properties": {
    "action": {
     "$ref": "Action1"
    }
   }
  },
  "TroubleshootIssueRequest": {
   "id": "TroubleshootIssueRequest",
   "type": "object",
   "properties": {
    "answers": {
     "type": "array",
     "items": {
      "$ref": "Answer"
     }
    },
    "caseId": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "TroubleshootIssueResponse": {
   "id": "TroubleshootIssueResponse",
   "type": "object",
   "properties": {
    "autocheckResults": {
     "type": "array",
     "items": {
      "$ref": "AutocheckResult"
     }
    },
    "issues": {
     "type": "array",
     "items": {
      "$ref": "Issue1"
     }
    },
    "questions": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "DEVICE_TYPE",
       "PURCHASED_APP_NAME",
       "PURCHASED_BOOK_NAME",
       "PURCHASED_VIDEO_NAME",
       "QUESTION_NOT_SET"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "requirements": {
     "type": "array",
     "items": {
      "$ref": "Requirement"
     }
    },
    "resolutions": {
     "type": "array",
     "items": {
      "$ref": "Resolution1"
     }
    }
   }
  },
  "TroubleshootTransactionRequest": {
   "id": "TroubleshootTransactionRequest",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "orderId": {
     "type": "string"
    },
    "searchContext": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    },
    "transactionId": {
     "type": "string"
    },
    "transactionIdentifier": {
     "$ref": "TransactionIdentifier"
    },
    "transactionType": {
     "type": "string",
     "enum": [
      "GOOGLE_PLAY",
      "GOOGLE_STORE",
      "P2P_RECEIVER",
      "P2P_SENDER",
      "TAP_AND_PAY",
      "UNKNOWN_WALLET_TRANSACTION_TYPE",
      "WALLET_CARD",
      "YOUTUBE_PURCHASE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    }
   }
  },
  "TroubleshootTransactionResponse": {
   "id": "TroubleshootTransactionResponse",
   "type": "object",
   "properties": {
    "action": {
     "$ref": "Action1"
    }
   }
  },
  "TroubleshooterSession": {
   "id": "TroubleshooterSession",
   "type": "object",
   "properties": {
    "autocheckResults": {
     "type": "array",
     "items": {
      "$ref": "AutocheckResult"
     }
    },
    "caseId": {
     "type": "string"
    },
    "issueId": {
     "type": "string"
    },
    "questions": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "DEVICE_TYPE",
       "PURCHASED_APP_NAME",
       "PURCHASED_BOOK_NAME",
       "PURCHASED_VIDEO_NAME",
       "QUESTION_NOT_SET"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       ""
      ]
     }
    },
    "requirements": {
     "type": "array",
     "items": {
      "$ref": "Requirement"
     }
    },
    "resolutions": {
     "type": "array",
     "items": {
      "$ref": "Resolution1"
     }
    },
    "sessionId": {
     "type": "string"
    },
    "subIssues": {
     "type": "array",
     "items": {
      "$ref": "Issue1"
     }
    }
   }
  },
  "UnassignRequest": {
   "id": "UnassignRequest",
   "type": "object"
  },
  "UnassignResponse": {
   "id": "UnassignResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "UnauthorizedChargesWorkflow": {
   "id": "UnauthorizedChargesWorkflow",
   "type": "object",
   "properties": {
    "paymentMethodHijackReviewKeys": {
     "type": "array",
     "items": {
      "$ref": "CasesReviewKey"
     }
    },
    "state": {
     "type": "string",
     "enum": [
      "ACCOUNT_TAKE_OVER_PLAYDC_REFUNDING",
      "CANCELLED",
      "COMPLETED",
      "FRIENDLY_FRAUD_PLAYDC_REFUNDING",
      "INITITIATED",
      "PAYMENT_METHOD_HIJACK_REVIEWING",
      "PAYMENT_METHOD_HIJACK_REVIEW_COMPLETED",
      "STATE_UNSPECIFIED"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "userTransactionIds": {
     "type": "array",
     "items": {
      "$ref": "CasesTransactionIdentifier"
     }
    }
   }
  },
  "UnblockRequest": {
   "id": "UnblockRequest",
   "type": "object",
   "properties": {
    "borgAlertId": {
     "type": "string"
    },
    "buganizerId": {
     "type": "string",
     "format": "int64"
    },
    "orderId": {
     "type": "string"
    },
    "pcrId": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "UnblockResponse": {
   "id": "UnblockResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "UnpluggedSignals": {
   "id": "UnpluggedSignals",
   "type": "object",
   "properties": {
    "components": {
     "type": "array",
     "items": {
      "$ref": "EntitlementComponent"
     }
    },
    "source": {
     "type": "string",
     "enum": [
      "FAMILY_MEMBER",
      "INDIVIDUAL",
      "ITUNES",
      "OTHER",
      "UNKNOWN"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "subscriptionSignals": {
     "$ref": "SubscriptionSignals"
    }
   }
  },
  "UnreadCaseInfo": {
   "id": "UnreadCaseInfo",
   "type": "object",
   "properties": {
    "caseId": {
     "type": "string"
    },
    "isAssigned": {
     "type": "boolean"
    },
    "unreadTime": {
     "type": "string"
    }
   }
  },
  "UnspamRequest": {
   "id": "UnspamRequest",
   "type": "object"
  },
  "UnspamResponse": {
   "id": "UnspamResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "UpdateAccountsRequest": {
   "id": "UpdateAccountsRequest",
   "type": "object",
   "properties": {
    "accounts": {
     "type": "array",
     "items": {
      "$ref": "Account"
     }
    }
   }
  },
  "UpdateAccountsResponse": {
   "id": "UpdateAccountsResponse",
   "type": "object",
   "properties": {
    "accounts": {
     "type": "array",
     "items": {
      "$ref": "Account"
     }
    }
   }
  },
  "UpdateAgentCategoriesRequest": {
   "id": "UpdateAgentCategoriesRequest",
   "type": "object",
   "properties": {
    "paths": {
     "type": "array",
     "items": {
      "$ref": "Path2"
     }
    }
   }
  },
  "UpdateAgentCategoriesResponse": {
   "id": "UpdateAgentCategoriesResponse",
   "type": "object",
   "properties": {
    "product": {
     "$ref": "Product"
    },
    "subProducts": {
     "type": "array",
     "items": {
      "$ref": "Product"
     }
    }
   }
  },
  "UpdateAttributesRequest": {
   "id": "UpdateAttributesRequest",
   "type": "object",
   "properties": {
    "attributes": {
     "type": "array",
     "items": {
      "$ref": "Attribute1"
     }
    }
   }
  },
  "UpdateAttributesResponse": {
   "id": "UpdateAttributesResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "UpdateConsultNoteRequest": {
   "id": "UpdateConsultNoteRequest",
   "type": "object",
   "properties": {
    "body": {
     "type": "string"
    },
    "caseId": {
     "type": "string"
    },
    "inReplyTo": {
     "type": "string"
    },
    "isHtml": {
     "type": "boolean"
    },
    "subject": {
     "type": "string"
    }
   }
  },
  "UpdateConsultNoteResponse": {
   "id": "UpdateConsultNoteResponse",
   "type": "object",
   "properties": {
    "communication": {
     "$ref": "Communication"
    }
   }
  },
  "UpdateContactEmailRequest": {
   "id": "UpdateContactEmailRequest",
   "type": "object",
   "properties": {
    "contactEmail": {
     "type": "string"
    }
   }
  },
  "UpdateContactEmailResponse": {
   "id": "UpdateContactEmailResponse",
   "type": "object",
   "properties": {
    "customer": {
     "$ref": "Customer"
    }
   }
  },
  "UpdateContactNameRequest": {
   "id": "UpdateContactNameRequest",
   "type": "object",
   "properties": {
    "contactName": {
     "type": "string"
    }
   }
  },
  "UpdateContactNameResponse": {
   "id": "UpdateContactNameResponse",
   "type": "object",
   "properties": {
    "customer": {
     "$ref": "Customer"
    }
   }
  },
  "UpdateCustomerAttributesRequest": {
   "id": "UpdateCustomerAttributesRequest",
   "type": "object",
   "properties": {
    "adwordsExternalCid": {
     "type": "string"
    },
    "adwordsInternalCid": {
     "type": "string"
    },
    "emailAddress": {
     "type": "string"
    },
    "phoneNumber": {
     "type": "string"
    }
   }
  },
  "UpdateCustomerAttributesResponse": {
   "id": "UpdateCustomerAttributesResponse",
   "type": "object",
   "properties": {
    "customer": {
     "$ref": "Customer"
    }
   }
  },
  "UpdateDisconnectedChannelRequest": {
   "id": "UpdateDisconnectedChannelRequest",
   "type": "object",
   "properties": {
    "channel": {
     "type": "string",
     "enum": [
      "CHANNEL_UNSPECIFIED",
      "CHAT",
      "PHONE"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    }
   }
  },
  "UpdateEligibleProgramRequest": {
   "id": "UpdateEligibleProgramRequest",
   "type": "object",
   "properties": {
    "programName": {
     "type": "string"
    }
   }
  },
  "UpdateEligibleProgramResponse": {
   "id": "UpdateEligibleProgramResponse",
   "type": "object",
   "properties": {
    "customer": {
     "$ref": "Customer"
    }
   }
  },
  "UpdateEmailRequest": {
   "id": "UpdateEmailRequest",
   "type": "object",
   "properties": {
    "afterSendSetting": {
     "$ref": "AfterSendSetting"
    },
    "bccAddresses": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "body": {
     "type": "string"
    },
    "cannedResponseIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "caseId": {
     "type": "string"
    },
    "ccAddresses": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "footerIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "fromAddress": {
     "type": "string"
    },
    "headerIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "inReplyTo": {
     "type": "string"
    },
    "isHtml": {
     "type": "boolean"
    },
    "subject": {
     "type": "string"
    },
    "toAddresses": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "UpdateEmailResponse": {
   "id": "UpdateEmailResponse",
   "type": "object",
   "properties": {
    "communication": {
     "$ref": "Communication"
    }
   }
  },
  "UpdateLocaleRequest": {
   "id": "UpdateLocaleRequest",
   "type": "object",
   "properties": {
    "locale": {
     "type": "string"
    }
   }
  },
  "UpdateLocaleResponse": {
   "id": "UpdateLocaleResponse",
   "type": "object",
   "properties": {
    "issue": {
     "$ref": "Issue"
    }
   }
  },
  "UpdateNoteRequest": {
   "id": "UpdateNoteRequest",
   "type": "object",
   "properties": {
    "body": {
     "type": "string"
    },
    "cannedResponseIds": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "caseId": {
     "type": "string"
    },
    "isHtml": {
     "type": "boolean"
    },
    "noteType": {
     "type": "string",
     "enum": [
      "PHONE",
      "UNKNOWN_NOTE_TYPE",
      "USER"
     ],
     "enumDescriptions": [
      "",
      "",
      ""
     ]
    },
    "subject": {
     "type": "string"
    }
   }
  },
  "UpdateNoteResponse": {
   "id": "UpdateNoteResponse",
   "type": "object",
   "properties": {
    "communication": {
     "$ref": "Communication"
    }
   }
  },
  "UpdateOwnerResponse": {
   "id": "UpdateOwnerResponse",
   "type": "object"
  },
  "UpdateProductRequest": {
   "id": "UpdateProductRequest",
   "type": "object",
   "properties": {
    "fieldMask": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "product": {
     "$ref": "Product"
    }
   }
  },
  "UpdateSummaryRequest": {
   "id": "UpdateSummaryRequest",
   "type": "object",
   "properties": {
    "summary": {
     "type": "string"
    }
   }
  },
  "UpdateSummaryResponse": {
   "id": "UpdateSummaryResponse",
   "type": "object",
   "properties": {
    "issue": {
     "$ref": "Issue"
    }
   }
  },
  "UpdateWorkflowRequest": {
   "id": "UpdateWorkflowRequest",
   "type": "object",
   "properties": {
    "fieldMask": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "workflow": {
     "$ref": "CasesWorkflow"
    }
   }
  },
  "ValidateConsultCategory": {
   "id": "ValidateConsultCategory",
   "type": "object",
   "properties": {
    "nodes": {
     "type": "array",
     "items": {
      "$ref": "ValidateConsultNode"
     }
    }
   }
  },
  "ValidateConsultFormRequest": {
   "id": "ValidateConsultFormRequest",
   "type": "object",
   "properties": {
    "consultFormHelpCenterName": {
     "type": "string"
    },
    "consultFormId": {
     "type": "string"
    },
    "originatingCategory": {
     "$ref": "ValidateConsultCategory"
    },
    "poolId": {
     "type": "string"
    },
    "productId": {
     "type": "string"
    },
    "targetCaseCategories": {
     "type": "array",
     "items": {
      "$ref": "ValidateConsultCategory"
     }
    },
    "teamId": {
     "type": "string"
    }
   }
  },
  "ValidateConsultFormResponse": {
   "id": "ValidateConsultFormResponse",
   "type": "object",
   "properties": {
    "validationErrors": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "CATEGORY",
       "CONSULT_FORM",
       "POOL",
       "TEAM",
       "VALIDATION_ERROR_NOT_SET"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       "",
       ""
      ]
     }
    }
   }
  },
  "ValidateConsultNode": {
   "id": "ValidateConsultNode",
   "type": "object",
   "properties": {
    "categoryId": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "VerificationResult": {
   "id": "VerificationResult",
   "type": "object",
   "properties": {
    "answerResults": {
     "type": "array",
     "items": {
      "type": "string",
      "enum": [
       "FAILED",
       "PASSED",
       "UNABLE_TO_VERIFY",
       "UNKNOWN_ANSWER_RESULT"
      ],
      "enumDescriptions": [
       "",
       "",
       "",
       ""
      ]
     }
    },
    "attemptsRemaining": {
     "type": "integer",
     "format": "int32"
    },
    "questionSetType": {
     "type": "string",
     "enum": [
      "PAYMENT_METHOD_QUESTION_SET",
      "PHONE_NUMBER_QUESTION_SET",
      "POSTAL_CODE_QUESTION_SET",
      "UNKNOWN_QUESTION_SET_TYPE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "verificationResults": {
     "type": "array",
     "items": {
      "$ref": "Status"
     }
    }
   }
  },
  "VerifyGiftCardRequest": {
   "id": "VerifyGiftCardRequest",
   "type": "object",
   "properties": {
    "activationNumber": {
     "type": "string"
    },
    "caseId": {
     "type": "string"
    },
    "partialCode": {
     "type": "string"
    },
    "ssoCookie": {
     "type": "string"
    }
   }
  },
  "VerifyGiftCardResponse": {
   "id": "VerifyGiftCardResponse",
   "type": "object",
   "properties": {
    "redemptionToken": {
     "$ref": "RedemptionToken"
    }
   }
  },
  "WaitForConsultRequest": {
   "id": "WaitForConsultRequest",
   "type": "object"
  },
  "WaitForConsultResponse": {
   "id": "WaitForConsultResponse",
   "type": "object",
   "properties": {
    "case": {
     "$ref": "Case"
    }
   }
  },
  "WalletPaymentMethodHijackReviewIds": {
   "id": "WalletPaymentMethodHijackReviewIds",
   "type": "object",
   "properties": {
    "ids": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "WalletSignInReviewIds": {
   "id": "WalletSignInReviewIds",
   "type": "object",
   "properties": {
    "ids": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "WalletTransaction": {
   "id": "WalletTransaction",
   "type": "object",
   "properties": {
    "creationTime": {
     "type": "string"
    },
    "description": {
     "type": "string"
    },
    "instrument": {
     "type": "string"
    },
    "isAuthorizationHold": {
     "type": "boolean"
    },
    "originalAmount": {
     "$ref": "Money"
    },
    "playSubscriptionId": {
     "type": "string"
    },
    "productLinks": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "productVertical": {
     "type": "string",
     "enum": [
      "DRIVE",
      "FI",
      "HARDWARE",
      "PLAY_APPS",
      "PLAY_BOOKS",
      "PLAY_GIFT_CARDS",
      "PLAY_MOVIES",
      "PLAY_MUSIC",
      "PLAY_NEWSSTAND",
      "PRODUCT_VERTICAL_UNSPECIFIED",
      "UNKNOWN",
      "WALLET_ANDROID_PAY",
      "WALLET_APP",
      "WALLET_HANDS_FREE",
      "YOUTUBE"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "qualityCap": {
     "type": "string",
     "enum": [
      "HD",
      "SD",
      "UHD",
      "UNKNOWN_QUALITY",
      "VR"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "splitTenders": {
     "type": "array",
     "items": {
      "$ref": "SplitTender"
     }
    },
    "status": {
     "type": "string",
     "enum": [
      "CANCELLED",
      "CHARGED",
      "CHARGED_BACK",
      "DECLINED",
      "OTHER_STATUS",
      "PENDING",
      "REFUNDED",
      "REJECTED",
      "UNKNOWN_WALLET_TRANSACTION_STATUS"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      ""
     ]
    },
    "transactionId": {
     "$ref": "TransactionIdentifier"
    }
   }
  },
  "Workflow": {
   "id": "Workflow",
   "type": "object",
   "properties": {
    "troubleshooterType": {
     "type": "string",
     "enum": [
      "NOE",
      "PLAY_APPS",
      "PLAY_PURCHASES",
      "TROUBLESHOOTER_TYPE_NOT_SET"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "workflowId": {
     "type": "string"
    }
   }
  },
  "Workflow1": {
   "id": "Workflow1",
   "type": "object",
   "properties": {
    "checkForDraft": {
     "type": "boolean"
    },
    "troubleshooterType": {
     "type": "string",
     "enum": [
      "NOE",
      "PLAY_APPS",
      "PLAY_PURCHASES",
      "TROUBLESHOOTER_TYPE_NOT_SET"
     ],
     "enumDescriptions": [
      "",
      "",
      "",
      ""
     ]
    },
    "url": {
     "type": "string"
    },
    "workflowId": {
     "type": "string"
    }
   }
  },
  "WorkflowInfo": {
   "id": "WorkflowInfo",
   "type": "object",
   "properties": {
    "workflowIds": {
     "type": "array",
     "items": {
      "type": "integer",
      "format": "int32"
     }
    }
   }
  },
  "WorkflowResult": {
   "id": "WorkflowResult",
   "type": "object",
   "properties": {
    "draftMessageId": {
     "type": "string"
    },
    "rma": {
     "$ref": "Rma"
    },
    "stepResults": {
     "type": "array",
     "items": {
      "$ref": "StepResult"
     }
    }
   }
  }
 },
 "resources": {
  "agentActivities": {
   "methods": {
    "create": {
     "id": "supportcases.agentActivities.create",
     "path": "agentActivities",
     "httpMethod": "POST",
     "description": "Adds an agent activity.",
     "request": {
      "$ref": "CreateAgentActivityRequest"
     },
     "response": {
      "$ref": "AgentActivity"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "createFromHelpCenterDeepLink": {
     "id": "supportcases.agentActivities.createFromHelpCenterDeepLink",
     "path": "agentActivities:createFromHelpCenterDeepLink",
     "httpMethod": "POST",
     "description": "Creates an agent activity from a help center deep link.",
     "request": {
      "$ref": "CreateFromHelpCenterDeepLinkRequest"
     },
     "response": {
      "$ref": "AgentActivity"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases",
      "https://www.googleapis.com/auth/supportcontent"
     ]
    },
    "list": {
     "id": "supportcases.agentActivities.list",
     "path": "agentActivities",
     "httpMethod": "GET",
     "description": "Lists an agent activities.",
     "parameters": {
      "caseId": {
       "type": "string",
       "location": "query"
      },
      "pageSize": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "ListAgentActivitiesResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   }
  },
  "agentSettings": {
   "methods": {
    "get": {
     "id": "supportcases.agentSettings.get",
     "path": "{+name}",
     "httpMethod": "GET",
     "description": "Gets agent setting for the agent id in the resource name. If agent id is \"me\", get agent setting for the current logged in agent.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "AgentSetting"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getPhoneSetting": {
     "id": "supportcases.agentSettings.getPhoneSetting",
     "path": "{+name}",
     "httpMethod": "GET",
     "description": "Gets phone setting for the given agent id. If agent id is \"me\", gets phone setting for the agent currently logged in. This call is already deprecated.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "GetPhoneSettingResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getRealTimeSetting": {
     "id": "supportcases.agentSettings.getRealTimeSetting",
     "path": "{+name}",
     "httpMethod": "GET",
     "description": "Gets agent's real time setting for the given agent id in the resource name. If agent id is \"me\", use the current logged in agent.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "RealTimeSetting"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getSearchSetting": {
     "id": "supportcases.agentSettings.getSearchSetting",
     "path": "{+name}",
     "httpMethod": "GET",
     "description": "Gets agent's search settings for the agent id in the resource name. If agent id is \"me\", use the current logged in agent.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "SearchSetting"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "list": {
     "id": "supportcases.agentSettings.list",
     "path": "agentSettings",
     "httpMethod": "GET",
     "description": "List all agent settings.",
     "response": {
      "$ref": "ListAgentSettingsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "listSettings": {
     "id": "supportcases.agentSettings.listSettings",
     "path": "{+name}:listSettings",
     "httpMethod": "GET",
     "description": "Lists settings for the agent id in the resource name. If agent id is \"me\", get agent setting for the current logged in agent.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      },
      "requestedSettingTypes": {
       "type": "string",
       "enum": [
        "AGENT_SETTING",
        "SEARCH_SETTING",
        "UNKNOWN_AGENT_SETTING_TYPE"
       ],
       "enumDescriptions": [
        "",
        "",
        ""
       ],
       "repeated": true,
       "location": "query"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "ListSettingsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "updateSearchSetting": {
     "id": "supportcases.agentSettings.updateSearchSetting",
     "path": "{+name}",
     "httpMethod": "PUT",
     "description": "Updates search settings for the agent id in the resource name. If agent id is \"me\", use the current logged in agent.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "SearchSetting"
     },
     "response": {
      "$ref": "SearchSetting"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    }
   }
  },
  "attributes": {
   "methods": {
    "get": {
     "id": "supportcases.attributes.get",
     "path": "{+name}",
     "httpMethod": "GET",
     "description": "Gets the specified attribute.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "Attribute"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   }
  },
  "cases": {
   "methods": {
    "assign": {
     "id": "supportcases.cases.assign",
     "path": "{+name}:assign",
     "httpMethod": "POST",
     "description": "Assigns the specified case.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "AssignRequest"
     },
     "response": {
      "$ref": "AssignResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "autoAssign": {
     "id": "supportcases.cases.autoAssign",
     "path": "cases:autoAssign",
     "httpMethod": "POST",
     "description": "Auto assign a case to the calling user.",
     "request": {
      "$ref": "AutoAssignRequest"
     },
     "response": {
      "$ref": "AutoAssignResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "block": {
     "id": "supportcases.cases.block",
     "path": "{+name}:block",
     "httpMethod": "POST",
     "description": "Indicate the specified case is blocked by a bug/case/legal order, etc.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "BlockRequest"
     },
     "response": {
      "$ref": "BlockResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "callBack": {
     "id": "supportcases.cases.callBack",
     "path": "{+name}:callBack",
     "httpMethod": "POST",
     "description": "Makes a callback. Deauthenticates customer.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "CallBackRequest"
     },
     "response": {
      "$ref": "CallBackResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "createNewCase": {
     "id": "supportcases.cases.createNewCase",
     "path": "cases:createNewCase",
     "httpMethod": "POST",
     "description": "Creates a new case (Note this is not a true CRUD method as no resource is being passed in).",
     "request": {
      "$ref": "CreateNewCaseRequest"
     },
     "response": {
      "$ref": "CreateNewCaseResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "createNoteConsult": {
     "id": "supportcases.cases.createNoteConsult",
     "path": "{+name}:createNoteConsult",
     "httpMethod": "POST",
     "description": "Creates a consult case via note channel for this case.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "CreateNoteConsultCaseRequest"
     },
     "response": {
      "$ref": "CreateNoteConsultCaseResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "createRealTimeConsult": {
     "id": "supportcases.cases.createRealTimeConsult",
     "path": "{+name}:createRealTimeConsult",
     "httpMethod": "POST",
     "description": "Creates a consult case via RealTime channel for this case.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "CreateRealTimeConsultCaseRequest"
     },
     "response": {
      "$ref": "CreateRealTimeConsultCaseResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "dedupe": {
     "id": "supportcases.cases.dedupe",
     "path": "{+name}:dedupe",
     "httpMethod": "POST",
     "description": "Deduplicates a case by closing duplicates cases.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "DedupeRequest"
     },
     "response": {
      "$ref": "DedupeResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "escalate": {
     "id": "supportcases.cases.escalate",
     "path": "{+name}:escalate",
     "httpMethod": "POST",
     "description": "Escalates a case.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "EscalateRequest"
     },
     "response": {
      "$ref": "EscalateResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "finish": {
     "id": "supportcases.cases.finish",
     "path": "{+name}:finish",
     "httpMethod": "POST",
     "description": "Sets the specified case to the finished state and triggers other finisher related workflows.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "FinishRequest"
     },
     "response": {
      "$ref": "FinishResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "get": {
     "id": "supportcases.cases.get",
     "path": "{+name}",
     "httpMethod": "GET",
     "description": "Gets the specified case.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "Case"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getAgentSearchCount": {
     "id": "supportcases.cases.getAgentSearchCount",
     "path": "cases:getAgentSearchCount",
     "httpMethod": "GET",
     "description": "Gets the search count for cases associated with the calling agent, and begin sending Tango notifications when the count changes.",
     "response": {
      "$ref": "GetAgentSearchCountResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getAgentUnreadCasesInfo": {
     "id": "supportcases.cases.getAgentUnreadCasesInfo",
     "path": "cases:GetAgentUnreadCasesInfo",
     "httpMethod": "GET",
     "description": "Gets information about unread cases for the calling agent. Only intended for use by the Cases frontend.",
     "response": {
      "$ref": "GetAgentUnreadCasesInfoResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getConsultSla": {
     "id": "supportcases.cases.getConsultSla",
     "path": "{+name}:getConsultSla",
     "httpMethod": "POST",
     "description": "Calculates the SLA due by time that a new consult case would have.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetConsultSlaRequest"
     },
     "response": {
      "$ref": "GetConsultSlaResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "listByAgent": {
     "id": "supportcases.cases.listByAgent",
     "path": "cases:listByAgent",
     "httpMethod": "GET",
     "description": "Lists cases associated with the agent. Only intended for use by the Cases frontend.",
     "parameters": {
      "caseType": {
       "type": "string",
       "enum": [
        "ASSIGNED",
        "RECENT",
        "UNKNOWN_CASE_TYPE",
        "WAITING"
       ],
       "enumDescriptions": [
        "",
        "",
        "",
        ""
       ],
       "location": "query"
      },
      "pageSize": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "ListCasesByAgentResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "needsInfo": {
     "id": "supportcases.cases.needsInfo",
     "path": "{+name}:needsInfo",
     "httpMethod": "POST",
     "description": "Sets the specified case to the needs info state.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "NeedsInfoRequest"
     },
     "response": {
      "$ref": "NeedsInfoResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "offeredSolution": {
     "id": "supportcases.cases.offeredSolution",
     "path": "{+name}:offeredSolution",
     "httpMethod": "POST",
     "description": "Sets the specified case to the solution offered state indicating that a previous communication was a \"solution\".",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "OfferedSolutionRequest"
     },
     "response": {
      "$ref": "OfferedSolutionResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "read": {
     "id": "supportcases.cases.read",
     "path": "{+name}:read",
     "httpMethod": "POST",
     "description": "Marks a case as read by the calling agent if they are the assignee.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "ReadCaseRequest"
     },
     "response": {
      "$ref": "Empty"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "release": {
     "id": "supportcases.cases.release",
     "path": "{+name}:release",
     "httpMethod": "POST",
     "description": "Unassigns the specified case from the gaia user associated with this call.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "ReleaseRequest"
     },
     "response": {
      "$ref": "ReleaseResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "route": {
     "id": "supportcases.cases.route",
     "path": "{+name}:route",
     "httpMethod": "POST",
     "description": "Routes the specified case to another product or team.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "RouteRequest"
     },
     "response": {
      "$ref": "RouteResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "spam": {
     "id": "supportcases.cases.spam",
     "path": "{+name}:spam",
     "httpMethod": "POST",
     "description": "Marks the specified case as spam.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "SpamRequest"
     },
     "response": {
      "$ref": "SpamResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "split": {
     "id": "supportcases.cases.split",
     "path": "{+name}:split",
     "httpMethod": "POST",
     "description": "Move a case's communication into a new case.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "SplitRequest"
     },
     "response": {
      "$ref": "SplitResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "suggestNewEmailHeaders": {
     "id": "supportcases.cases.suggestNewEmailHeaders",
     "path": "{+name}:suggestNewEmailHeaders",
     "httpMethod": "GET",
     "description": "Suggests a set of headers (like from aliases) for a new email on a case. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "SuggestNewEmailHeadersResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "suggestNoteHeaders": {
     "id": "supportcases.cases.suggestNoteHeaders",
     "path": "{+name}:suggestNoteHeaders",
     "httpMethod": "GET",
     "description": "Suggests a set of headers (like from aliases) for a note Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "SuggestNoteHeadersResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "take": {
     "id": "supportcases.cases.take",
     "path": "{+name}:take",
     "httpMethod": "POST",
     "description": "Assigns the specified case to the gaia user associated with this call.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "TakeRequest"
     },
     "response": {
      "$ref": "TakeResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "transfer": {
     "id": "supportcases.cases.transfer",
     "path": "{+name}:transfer",
     "httpMethod": "POST",
     "description": "Transfers the specified case from the gaia user associated with this call to another user.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "TransferRequest"
     },
     "response": {
      "$ref": "TransferResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "unassign": {
     "id": "supportcases.cases.unassign",
     "path": "{+name}:unassign",
     "httpMethod": "POST",
     "description": "Unassigns the specified case from its current assignee. Note that this also moves the case to the UNASSIGNED state.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "UnassignRequest"
     },
     "response": {
      "$ref": "UnassignResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "unblock": {
     "id": "supportcases.cases.unblock",
     "path": "{+name}:unblock",
     "httpMethod": "POST",
     "description": "Indicate the specified case is no longer blocked by a bug/case/ legal order, etc.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "UnblockRequest"
     },
     "response": {
      "$ref": "UnblockResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "unspam": {
     "id": "supportcases.cases.unspam",
     "path": "{+name}:unspam",
     "httpMethod": "POST",
     "description": "Unmark the specified case as spam.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "UnspamRequest"
     },
     "response": {
      "$ref": "UnspamResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "updateDisconnectedChannel": {
     "id": "supportcases.cases.updateDisconnectedChannel",
     "path": "{+name}:updateDisconnectedChannel",
     "httpMethod": "POST",
     "description": "Updates disconnected channel for the specified case.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "UpdateDisconnectedChannelRequest"
     },
     "response": {
      "$ref": "Empty"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "updateEligibleProgram": {
     "id": "supportcases.cases.updateEligibleProgram",
     "path": "{+name}:updateEligibleProgram",
     "httpMethod": "POST",
     "description": "Update customer attributes indicating eligibility for opportunities.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "UpdateEligibleProgramRequest"
     },
     "response": {
      "$ref": "UpdateEligibleProgramResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "validateConsultForm": {
     "id": "supportcases.cases.validateConsultForm",
     "path": "cases:validateConsultForm",
     "httpMethod": "POST",
     "description": "Validates that consult forms are properly configured.",
     "request": {
      "$ref": "ValidateConsultFormRequest"
     },
     "response": {
      "$ref": "ValidateConsultFormResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly",
      "https://www.googleapis.com/auth/supportcontent"
     ]
    },
    "waitForConsult": {
     "id": "supportcases.cases.waitForConsult",
     "path": "{+name}:WaitForConsult",
     "httpMethod": "POST",
     "description": "Sets a case with an active consult case to IN_CONSULT state.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "WaitForConsultRequest"
     },
     "response": {
      "$ref": "WaitForConsultResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    }
   },
   "resources": {
    "attributes": {
     "methods": {
      "batchUpdate": {
       "id": "supportcases.cases.attributes.batchUpdate",
       "path": "{+name}:batchUpdate",
       "httpMethod": "POST",
       "description": "Updates attributes for a case in batch.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "BatchUpdateAttributesRequest"
       },
       "response": {
        "$ref": "BatchUpdateAttributesResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "update": {
       "id": "supportcases.cases.attributes.update",
       "path": "{+name}:update",
       "httpMethod": "POST",
       "description": "Updates attributes for the specified case. Note: This call adds the attributes that are not present on the case to the case. If attribute is already present on the case, the value is replaced.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "UpdateAttributesRequest"
       },
       "response": {
        "$ref": "UpdateAttributesResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      }
     }
    },
    "customer": {
     "methods": {
      "authenticate": {
       "id": "supportcases.cases.customer.authenticate",
       "path": "{+name}:authenticate",
       "httpMethod": "POST",
       "description": "Authenticates a customer for a case.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "AuthenticateRequest"
       },
       "response": {
        "$ref": "AuthenticateResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "billingAddresses": {
       "id": "supportcases.cases.customer.billingAddresses",
       "path": "{+name}/customer/billingAddresses",
       "httpMethod": "POST",
       "description": "Lists customer billing addresses. Only intended for use by the Cases frontend.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "ListBillingAddressesRequest"
       },
       "response": {
        "$ref": "ListBillingAddressesResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "checkWalletAccount": {
       "id": "supportcases.cases.customer.checkWalletAccount",
       "path": "{+name}:checkWalletAccount",
       "httpMethod": "GET",
       "description": "Check if a customer has a valid Wallet account. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
       "parameters": {
        "email": {
         "type": "string",
         "location": "query"
        },
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "response": {
        "$ref": "CheckWalletAccountResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "deauthenticate": {
       "id": "supportcases.cases.customer.deauthenticate",
       "path": "{+name}:deauthenticate",
       "httpMethod": "POST",
       "description": "Deauthenticates a customer for a case.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "DeauthenticateRequest"
       },
       "response": {
        "$ref": "DeauthenticateResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "getAuthenticationCreditCardTypes": {
       "id": "supportcases.cases.customer.getAuthenticationCreditCardTypes",
       "path": "{+name}:getAuthenticationCreditCardTypes",
       "httpMethod": "POST",
       "description": "Get credit card types for authentication.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "GetAuthenticationCreditCardTypesRequest"
       },
       "response": {
        "$ref": "GetAuthenticationCreditCardTypesResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "getAuthenticationQuestions": {
       "id": "supportcases.cases.customer.getAuthenticationQuestions",
       "path": "{+name}:getAuthenticationQuestions",
       "httpMethod": "POST",
       "description": "Get authentication options for a customer for a case.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "GetAuthenticationQuestionsRequest"
       },
       "response": {
        "$ref": "GetAuthenticationQuestionsResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "getAuthenticationResult": {
       "id": "supportcases.cases.customer.getAuthenticationResult",
       "path": "{+name}:getAuthenticationResult",
       "httpMethod": "POST",
       "description": "Get authentication status for a customer of a case.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "GetAuthenticationResultRequest"
       },
       "response": {
        "$ref": "GetAuthenticationResultResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "getBusinessListings": {
       "id": "supportcases.cases.customer.getBusinessListings",
       "path": "{+name}:getBusinessListings",
       "httpMethod": "POST",
       "description": "Gets the business listings for a customer.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "GetBusinessListingsRequest"
       },
       "response": {
        "$ref": "GetBusinessListingsResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "shippingAddresses": {
       "id": "supportcases.cases.customer.shippingAddresses",
       "path": "{+name}/customer/shippingAddresses",
       "httpMethod": "POST",
       "description": "Lists customer shipping addresses. Only intended for use by the Cases frontend.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "ListShippingAddressesRequest"
       },
       "response": {
        "$ref": "ListShippingAddressesResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "updateContactEmail": {
       "id": "supportcases.cases.customer.updateContactEmail",
       "path": "{+name}:updateContactEmail",
       "httpMethod": "POST",
       "description": "Updates contact email for the specified case.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "UpdateContactEmailRequest"
       },
       "response": {
        "$ref": "UpdateContactEmailResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "updateContactName": {
       "id": "supportcases.cases.customer.updateContactName",
       "path": "{+name}:updateContactName",
       "httpMethod": "POST",
       "description": "Updates contact name for the specified case.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "UpdateContactNameRequest"
       },
       "response": {
        "$ref": "UpdateContactNameResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "updateCustomerAttributes": {
       "id": "supportcases.cases.customer.updateCustomerAttributes",
       "path": "{+name}:updateCustomerAttributes",
       "httpMethod": "POST",
       "description": "Updates customer attributes for the specified case.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "UpdateCustomerAttributesRequest"
       },
       "response": {
        "$ref": "UpdateCustomerAttributesResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      }
     },
     "resources": {
      "contact": {
       "methods": {
        "callbackNumber": {
         "id": "supportcases.cases.customer.contact.callbackNumber",
         "path": "{+name}",
         "httpMethod": "POST",
         "description": "Sets a callback phone number.",
         "parameters": {
          "name": {
           "type": "string",
           "required": true,
           "location": "path"
          }
         },
         "parameterOrder": [
          "name"
         ],
         "request": {
          "$ref": "SetCallbackNumberRequest"
         },
         "response": {
          "$ref": "SetCallbackNumberResponse"
         },
         "scopes": [
          "https://www.googleapis.com/auth/cases"
         ]
        },
        "getCallbackNumber": {
         "id": "supportcases.cases.customer.contact.getCallbackNumber",
         "path": "{+name}",
         "httpMethod": "GET",
         "description": "Gets the callback phone number associated with a case.",
         "parameters": {
          "name": {
           "type": "string",
           "required": true,
           "location": "path"
          }
         },
         "parameterOrder": [
          "name"
         ],
         "response": {
          "$ref": "PhoneNumber"
         },
         "scopes": [
          "https://www.googleapis.com/auth/cases.readonly"
         ]
        }
       }
      }
     }
    },
    "issue": {
     "methods": {
      "updateAccounts": {
       "id": "supportcases.cases.issue.updateAccounts",
       "path": "{+name}",
       "httpMethod": "PUT",
       "description": "Updates case's accounts.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "UpdateAccountsRequest"
       },
       "response": {
        "$ref": "UpdateAccountsResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "updateLocale": {
       "id": "supportcases.cases.issue.updateLocale",
       "path": "{+name}:updateLocale",
       "httpMethod": "POST",
       "description": "Updates the case's issue locale.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "UpdateLocaleRequest"
       },
       "response": {
        "$ref": "UpdateLocaleResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "updateProduct": {
       "id": "supportcases.cases.issue.updateProduct",
       "path": "{+name}",
       "httpMethod": "PUT",
       "description": "Updates product for the specified case.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "UpdateProductRequest"
       },
       "response": {
        "$ref": "Product"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "updateSummary": {
       "id": "supportcases.cases.issue.updateSummary",
       "path": "{+name}:updateSummary",
       "httpMethod": "POST",
       "description": "Updates case's issue summary.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "UpdateSummaryRequest"
       },
       "response": {
        "$ref": "UpdateSummaryResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      }
     },
     "resources": {
      "product": {
       "methods": {
        "updateAgentCategories": {
         "id": "supportcases.cases.issue.product.updateAgentCategories",
         "path": "{+name}:updateAgentCategories",
         "httpMethod": "POST",
         "description": "Updates agent categories for the specified case. Note: This call replaces categories on the case by new categories passed in the request.",
         "parameters": {
          "name": {
           "type": "string",
           "required": true,
           "location": "path"
          }
         },
         "parameterOrder": [
          "name"
         ],
         "request": {
          "$ref": "UpdateAgentCategoriesRequest"
         },
         "response": {
          "$ref": "UpdateAgentCategoriesResponse"
         },
         "scopes": [
          "https://www.googleapis.com/auth/cases"
         ]
        }
       }
      }
     }
    },
    "workflows": {
     "methods": {
      "get": {
       "id": "supportcases.cases.workflows.get",
       "path": "{+name}",
       "httpMethod": "GET",
       "description": "Get workflow state.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "response": {
        "$ref": "CasesWorkflow"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "post": {
       "id": "supportcases.cases.workflows.post",
       "path": "{+name}",
       "httpMethod": "POST",
       "description": "Creates a new workflow state on a case.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "CreateWorkflowRequest"
       },
       "response": {
        "$ref": "CasesWorkflow"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "update": {
       "id": "supportcases.cases.workflows.update",
       "path": "{+name}:update",
       "httpMethod": "PUT",
       "description": "Updates workflow state.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "UpdateWorkflowRequest"
       },
       "response": {
        "$ref": "CasesWorkflow"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      }
     }
    }
   }
  },
  "categoryInfos": {
   "methods": {
    "batchGet": {
     "id": "supportcases.categoryInfos.batchGet",
     "path": "categoryInfos:batchGet",
     "httpMethod": "GET",
     "description": "Batch gets category info. (Best effort, returns valid category infos only) Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
     "parameters": {
      "names": {
       "type": "string",
       "repeated": true,
       "location": "query"
      }
     },
     "response": {
      "$ref": "BatchGetCategoryInfosResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "get": {
     "id": "supportcases.categoryInfos.get",
     "path": "{+name}",
     "httpMethod": "GET",
     "description": "Gets the specified category info.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "CategoryInfo"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "listChildren": {
     "id": "supportcases.categoryInfos.listChildren",
     "path": "{+name}:listChildren",
     "httpMethod": "GET",
     "description": "Lists children category info.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "ListChildrenCategoryInfosResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "listTopLevel": {
     "id": "supportcases.categoryInfos.listTopLevel",
     "path": "categoryInfos:listTopLevel",
     "httpMethod": "GET",
     "description": "Lists gKMS top level category info.",
     "response": {
      "$ref": "ListTopLevelCategoryInfosResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "search": {
     "id": "supportcases.categoryInfos.search",
     "path": "categoryInfos:search",
     "httpMethod": "GET",
     "description": "Searches category info. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
     "parameters": {
      "baselineOnly": {
       "type": "boolean",
       "location": "query"
      },
      "filterByParentCategoryId": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      },
      "filterConsultCategories": {
       "type": "boolean",
       "location": "query"
      },
      "maximumResults": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      },
      "productIds": {
       "type": "string",
       "repeated": true,
       "location": "query"
      },
      "query": {
       "type": "string",
       "location": "query"
      },
      "topCategoryPathNodeIds": {
       "type": "integer",
       "format": "int32",
       "repeated": true,
       "location": "query"
      }
     },
     "response": {
      "$ref": "SearchCategoryInfosResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "searchMultiple": {
     "id": "supportcases.categoryInfos.searchMultiple",
     "path": "categoryInfos:searchMultiple",
     "httpMethod": "POST",
     "description": "Searches multiple category info.",
     "request": {
      "$ref": "SearchMultipleCategoryInfosRequest"
     },
     "response": {
      "$ref": "SearchCategoryInfosResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   },
   "resources": {
    "properties": {
     "methods": {
      "list": {
       "id": "supportcases.categoryInfos.properties.list",
       "path": "{+name}/properties",
       "httpMethod": "GET",
       "description": "Lists all properties associated with a category info.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "response": {
        "$ref": "ListPropertiesResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      }
     }
    }
   }
  },
  "communications": {
   "methods": {
    "buildNewEmail": {
     "id": "supportcases.communications.buildNewEmail",
     "path": "communications:buildNewEmail",
     "httpMethod": "POST",
     "description": "Builds an email template for the first email on a case.",
     "request": {
      "$ref": "BuildNewEmailRequest"
     },
     "response": {
      "$ref": "BuildNewEmailResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "buildReplyEmail": {
     "id": "supportcases.communications.buildReplyEmail",
     "path": "communications:buildReplyEmail",
     "httpMethod": "POST",
     "description": "Builds an email template for a reply to an existing email.",
     "request": {
      "$ref": "BuildReplyEmailRequest"
     },
     "response": {
      "$ref": "BuildReplyEmailResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "cancelSend": {
     "id": "supportcases.communications.cancelSend",
     "path": "{+name}:cancelSend",
     "httpMethod": "POST",
     "description": "Cancel a pending send (for email only).",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "CancelSendRequest"
     },
     "response": {
      "$ref": "Empty"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "createConsultNote": {
     "id": "supportcases.communications.createConsultNote",
     "path": "communications:createConsultNote",
     "httpMethod": "POST",
     "description": "Creates a draft note that replies to a consult note.",
     "request": {
      "$ref": "CreateConsultNoteRequest"
     },
     "response": {
      "$ref": "CreateConsultNoteResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "createEmail": {
     "id": "supportcases.communications.createEmail",
     "path": "communications:createEmail",
     "httpMethod": "POST",
     "description": "Creates a draft email and adds it to a case.",
     "request": {
      "$ref": "CreateEmailRequest"
     },
     "response": {
      "$ref": "CreateEmailResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "createNote": {
     "id": "supportcases.communications.createNote",
     "path": "communications:createNote",
     "httpMethod": "POST",
     "description": "Creates a note.",
     "request": {
      "$ref": "CreateNoteRequest"
     },
     "response": {
      "$ref": "CreateNoteResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "discardDraft": {
     "id": "supportcases.communications.discardDraft",
     "path": "{+name}:discardDraft",
     "httpMethod": "POST",
     "description": "Discards a draft communication.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "DiscardDraftRequest"
     },
     "response": {
      "$ref": "DiscardDraftResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "finalizeConsultNote": {
     "id": "supportcases.communications.finalizeConsultNote",
     "path": "{+name}:finalizeConsultNote",
     "httpMethod": "POST",
     "description": "Finalizes and sends a draft note for a consult case.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "FinalizeConsultNoteRequest"
     },
     "response": {
      "$ref": "FinalizeConsultNoteResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "finalizeNote": {
     "id": "supportcases.communications.finalizeNote",
     "path": "{+name}:finalizeNote",
     "httpMethod": "POST",
     "description": "Finalize a note (a note cannot be updated after it is finalized).",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "FinalizeNoteRequest"
     },
     "response": {
      "$ref": "FinalizeNoteResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "list": {
     "id": "supportcases.communications.list",
     "path": "communications",
     "httpMethod": "GET",
     "description": "Lists communications that match the filter.",
     "parameters": {
      "caseIds": {
       "type": "string",
       "repeated": true,
       "location": "query"
      }
     },
     "response": {
      "$ref": "ListCommunicationsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "listRelated": {
     "id": "supportcases.communications.listRelated",
     "path": "communications:listRelated",
     "httpMethod": "GET",
     "description": "Lists communications that are related to each other, including the communications on the requested case. Related communications include consult communications from target cases. Currently, only related communications from consult cases are supported.",
     "parameters": {
      "caseId": {
       "type": "string",
       "location": "query"
      },
      "contextCaseId": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "ListRelatedCommunicationsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "send": {
     "id": "supportcases.communications.send",
     "path": "{+name}:send",
     "httpMethod": "POST",
     "description": "Sends a draft email. This finalizes the email.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "SendEmailRequest"
     },
     "response": {
      "$ref": "SendEmailResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "suggestReplyEmailHeaders": {
     "id": "supportcases.communications.suggestReplyEmailHeaders",
     "path": "communications:suggestReplyEmailHeaders",
     "httpMethod": "GET",
     "description": "Suggests a set of email headers for an email reply to another email. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
     "parameters": {
      "caseId": {
       "type": "string",
       "location": "query"
      },
      "messageId": {
       "type": "string",
       "location": "query"
      },
      "replyType": {
       "type": "string",
       "enum": [
        "REPLY",
        "REPLY_ALL",
        "UNKNOWN_REPLY_TYPE"
       ],
       "enumDescriptions": [
        "",
        "",
        ""
       ],
       "location": "query"
      }
     },
     "response": {
      "$ref": "SuggestReplyEmailHeadersResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "updateConsultNote": {
     "id": "supportcases.communications.updateConsultNote",
     "path": "{+name}:updateConsultNote",
     "httpMethod": "POST",
     "description": "Updates a draft consult note with new content.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "UpdateConsultNoteRequest"
     },
     "response": {
      "$ref": "UpdateConsultNoteResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "updateEmail": {
     "id": "supportcases.communications.updateEmail",
     "path": "{+name}:updateEmail",
     "httpMethod": "POST",
     "description": "Updates a draft email.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "UpdateEmailRequest"
     },
     "response": {
      "$ref": "UpdateEmailResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "updateNote": {
     "id": "supportcases.communications.updateNote",
     "path": "{+name}:updateNote",
     "httpMethod": "POST",
     "description": "Updates a draft note.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "UpdateNoteRequest"
     },
     "response": {
      "$ref": "UpdateNoteResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    }
   },
   "resources": {
    "attachments": {
     "methods": {
      "delete": {
       "id": "supportcases.communications.attachments.delete",
       "path": "{+name}",
       "httpMethod": "DELETE",
       "description": "Deletes an attachment from a draft.",
       "parameters": {
        "caseId": {
         "type": "string",
         "location": "query"
        },
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "response": {
        "$ref": "Empty"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      }
     }
    }
   }
  },
  "customerInteractions": {
   "methods": {
    "list": {
     "id": "supportcases.customerInteractions.list",
     "path": "customerInteractions",
     "httpMethod": "GET",
     "description": "List customer interactions.",
     "parameters": {
      "adwordsCid": {
       "type": "string",
       "location": "query"
      },
      "caseId": {
       "type": "string",
       "location": "query"
      },
      "channels": {
       "type": "string",
       "enum": [
        "ADOPTION",
        "CHAT",
        "EMAIL",
        "GOAL",
        "HANGOUT",
        "INCENTIVE",
        "MARKETING_EMAIL",
        "MEETING",
        "NOTE",
        "PHONE",
        "STUB",
        "TRAX",
        "UNKNOWN_EVENT_TYPE",
        "WEB"
       ],
       "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
       ],
       "repeated": true,
       "location": "query"
      },
      "emailAddress": {
       "type": "string",
       "location": "query"
      },
      "excludeCases": {
       "type": "string",
       "repeated": true,
       "location": "query"
      },
      "pageSize": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "location": "query"
      },
      "products": {
       "type": "string",
       "repeated": true,
       "location": "query"
      }
     },
     "response": {
      "$ref": "ListInteractionsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "summarize": {
     "id": "supportcases.customerInteractions.summarize",
     "path": "customerInteractions:summarize",
     "httpMethod": "GET",
     "description": "Summary statistics about the cutomer's interaction history. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
     "parameters": {
      "adwordsCid": {
       "type": "string",
       "location": "query"
      },
      "caseId": {
       "type": "string",
       "location": "query"
      },
      "emailAddress": {
       "type": "string",
       "location": "query"
      },
      "excludeCases": {
       "type": "string",
       "repeated": true,
       "location": "query"
      },
      "startTime": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "SummarizeResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   }
  },
  "customerIssues": {
   "methods": {
    "list": {
     "id": "supportcases.customerIssues.list",
     "path": "customerIssues:list",
     "httpMethod": "GET",
     "description": "List issues and their resolutions for a customer.",
     "parameters": {
      "caseId": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "ListCustomerIssuesResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   }
  },
  "devices": {
   "methods": {
    "getById": {
     "id": "supportcases.devices.getById",
     "path": "devices:getById",
     "httpMethod": "GET",
     "description": "Gets the specified device by any device ID.",
     "parameters": {
      "caseId": {
       "type": "string",
       "location": "query"
      },
      "deviceId": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "GetByDeviceIdResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "list": {
     "id": "supportcases.devices.list",
     "path": "devices",
     "httpMethod": "GET",
     "description": "List devices.",
     "parameters": {
      "caseId": {
       "type": "string",
       "location": "query"
      },
      "email": {
       "type": "string",
       "location": "query"
      },
      "excludeGoogleStoreOrders": {
       "type": "boolean",
       "location": "query"
      },
      "excludeRmaTypes": {
       "type": "boolean",
       "location": "query"
      },
      "pageSize": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "ListDevicesResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "updateOwner": {
     "id": "supportcases.devices.updateOwner",
     "path": "devices:updateOwner",
     "httpMethod": "GET",
     "description": "Updates the owner of a device. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
     "parameters": {
      "address.addressLine1": {
       "type": "string",
       "location": "query"
      },
      "address.addressLine2": {
       "type": "string",
       "location": "query"
      },
      "address.addressLine3": {
       "type": "string",
       "location": "query"
      },
      "address.addressee": {
       "type": "string",
       "location": "query"
      },
      "address.city": {
       "type": "string",
       "location": "query"
      },
      "address.countryCode": {
       "type": "string",
       "location": "query"
      },
      "address.postalCode": {
       "type": "string",
       "location": "query"
      },
      "address.stateProvinceCode": {
       "type": "string",
       "location": "query"
      },
      "deviceId": {
       "type": "string",
       "location": "query"
      },
      "email": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "UpdateOwnerResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    }
   }
  },
  "giftCards": {
   "methods": {
    "checkRedeemer": {
     "id": "supportcases.giftCards.checkRedeemer",
     "path": "giftCards:checkRedeemer",
     "httpMethod": "POST",
     "description": "If the card is already redeemed by somebody else, customer can try a few users.",
     "request": {
      "$ref": "CheckRedeemerRequest"
     },
     "response": {
      "$ref": "CheckRedeemerResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "lookup": {
     "id": "supportcases.giftCards.lookup",
     "path": "giftCards:lookup",
     "httpMethod": "POST",
     "description": "Finds a gift card based on its full redemption code or activation number. With full redemption code, returns redemption token on success.",
     "request": {
      "$ref": "LookupGiftCardRequest"
     },
     "response": {
      "$ref": "LookupGiftCardResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "redeem": {
     "id": "supportcases.giftCards.redeem",
     "path": "giftCards:redeem",
     "httpMethod": "POST",
     "description": "Redeems a gift card to a customer using the redemption token.",
     "request": {
      "$ref": "RedeemGiftCardRequest"
     },
     "response": {
      "$ref": "RedeemGiftCardResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "verify": {
     "id": "supportcases.giftCards.verify",
     "path": "giftCards:verify",
     "httpMethod": "POST",
     "description": "Verifies ownership of a damaged GC by checking if the activation number and partial redemption code are valid and refers to the same card. Returns the redemption token on success.",
     "request": {
      "$ref": "VerifyGiftCardRequest"
     },
     "response": {
      "$ref": "VerifyGiftCardResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   }
  },
  "ginlogs": {
   "methods": {
    "logDataAccess": {
     "id": "supportcases.ginlogs.logDataAccess",
     "path": "ginlogs:logDataAccess",
     "httpMethod": "POST",
     "description": "Logs data access.",
     "request": {
      "$ref": "LogDataAccessRequest"
     },
     "response": {
      "$ref": "Empty"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    }
   }
  },
  "hardwareAuditor": {
   "resources": {
    "orders": {
     "methods": {
      "cancel": {
       "id": "supportcases.hardwareAuditor.orders.cancel",
       "path": "{+name}:cancel",
       "httpMethod": "POST",
       "description": "Cancels the hardware order.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "CancelHardwareOrderRequest"
       },
       "response": {
        "$ref": "Empty"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "getDetail": {
       "id": "supportcases.hardwareAuditor.orders.getDetail",
       "path": "{+name}:getDetail",
       "httpMethod": "POST",
       "description": "Gets detail for a hardware order.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "GetHardwareOrderDetailRequest"
       },
       "response": {
        "$ref": "HardwareOrderDetail"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "getShippingAddress": {
       "id": "supportcases.hardwareAuditor.orders.getShippingAddress",
       "path": "{+name}:getShippingAddress",
       "httpMethod": "POST",
       "description": "Gets shipping address for a purchase. Get by orderId: /v2/hardwareAuditor/orders/ DEPRECATED TODO(b/34705382)",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "GetShippingAddressRequest"
       },
       "response": {
        "$ref": "ShippingAddress"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "getShippingCustomerName": {
       "id": "supportcases.hardwareAuditor.orders.getShippingCustomerName",
       "path": "{+name}:getShippingCustomerName",
       "httpMethod": "POST",
       "description": "Gets the shipping customer name for a hardware order Get by orderId: /v2/hardwareAuditor/orders/ DEPRECATED TODO(b/34705382)",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "GetShippingCustomerNameRequest"
       },
       "response": {
        "$ref": "ShippingCustomerName"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "getShippingCustomerPhoneNumber": {
       "id": "supportcases.hardwareAuditor.orders.getShippingCustomerPhoneNumber",
       "path": "{+name}:getShippingCustomerPhoneNumber",
       "httpMethod": "POST",
       "description": "Gets the shipping customer phone number for a hardware order Get by orderId: /v2/hardwareAuditor/orders/ DEPRECATED TODO(b/34705382)",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "GetShippingCustomerPhoneNumberRequest"
       },
       "response": {
        "$ref": "ShippingCustomerPhoneNumber"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "list": {
       "id": "supportcases.hardwareAuditor.orders.list",
       "path": "hardwareAuditor/orders:list",
       "httpMethod": "POST",
       "description": "Lists hardware orders.",
       "request": {
        "$ref": "ListHardwareOrdersRequest"
       },
       "response": {
        "$ref": "ListHardwareOrdersResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "refunds": {
       "id": "supportcases.hardwareAuditor.orders.refunds",
       "path": "{+name}/refunds",
       "httpMethod": "POST",
       "description": "Lists refunds for a hardware order.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "ListHardwareRefundsRequest"
       },
       "response": {
        "$ref": "ListHardwareRefundsResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      }
     }
    },
    "shipments": {
     "methods": {
      "cancel": {
       "id": "supportcases.hardwareAuditor.shipments.cancel",
       "path": "{+name}:cancel",
       "httpMethod": "POST",
       "description": "Cancels the hardware order by shipment id.",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "CancelHardwareOrderRequest"
       },
       "response": {
        "$ref": "Empty"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      },
      "getShippingAddress": {
       "id": "supportcases.hardwareAuditor.shipments.getShippingAddress",
       "path": "{+name}:getShippingAddress",
       "httpMethod": "POST",
       "description": "--------- Begin of shipment Id based calls ----------------- Gets shipping address for a purchase Get by shipmentId: /v2/hardwareAuditor/shipments/:",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "GetShippingAddressRequest"
       },
       "response": {
        "$ref": "ShippingAddress"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "getShippingCustomerName": {
       "id": "supportcases.hardwareAuditor.shipments.getShippingCustomerName",
       "path": "{+name}:getShippingCustomerName",
       "httpMethod": "POST",
       "description": "Gets the shipping customer name for a hardware order Get by shipmentId: /v2/hardwareAuditor/shipments/:",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "GetShippingCustomerNameRequest"
       },
       "response": {
        "$ref": "ShippingCustomerName"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "getShippingCustomerPhoneNumber": {
       "id": "supportcases.hardwareAuditor.shipments.getShippingCustomerPhoneNumber",
       "path": "{+name}:getShippingCustomerPhoneNumber",
       "httpMethod": "POST",
       "description": "Gets the shipping customer phone number for a hardware order Get by shipmentId: /v2/hardwareAuditor/shipments/:",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "GetShippingCustomerPhoneNumberRequest"
       },
       "response": {
        "$ref": "ShippingCustomerPhoneNumber"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "refunds": {
       "id": "supportcases.hardwareAuditor.shipments.refunds",
       "path": "{+name}/refunds",
       "httpMethod": "POST",
       "description": "Lists refunds for a hardware order. Get by shipmentId: /v2/hardwareAuditor/shipments/:",
       "parameters": {
        "name": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "name"
       ],
       "request": {
        "$ref": "ListHardwareRefundsRequest"
       },
       "response": {
        "$ref": "ListHardwareRefundsResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      }
     }
    }
   }
  },
  "hardwareOrders": {
   "methods": {
    "cancel": {
     "id": "supportcases.hardwareOrders.cancel",
     "path": "{+name}:cancel",
     "httpMethod": "POST",
     "description": "Cancels the hardware order.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "CancelHardwareOrderRequest"
     },
     "response": {
      "$ref": "Empty"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "getDetail": {
     "id": "supportcases.hardwareOrders.getDetail",
     "path": "{+name}:getDetail",
     "httpMethod": "POST",
     "description": "Gets detail for a hardware order.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetHardwareOrderDetailRequest"
     },
     "response": {
      "$ref": "HardwareOrderDetail"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getLostStolenRefundEligibility": {
     "id": "supportcases.hardwareOrders.getLostStolenRefundEligibility",
     "path": "{+name}:getLostStolenRefundEligibility",
     "httpMethod": "POST",
     "description": "Gets lost stolen refund eligibility for account Get by orderId: /v2/hardwareOrders/ DEPRECATED TODO(b/34705382)",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetLostStolenRefundEligibilityRequest"
     },
     "response": {
      "$ref": "LostStolenRefundEligibility"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getShippingAddress": {
     "id": "supportcases.hardwareOrders.getShippingAddress",
     "path": "{+name}:getShippingAddress",
     "httpMethod": "POST",
     "description": "Gets shipping address for a purchase Get by orderId: /v2/hardwareOrders/ DEPRECATED TODO(b/34705382)",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetShippingAddressRequest"
     },
     "response": {
      "$ref": "ShippingAddress"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getShippingCustomerName": {
     "id": "supportcases.hardwareOrders.getShippingCustomerName",
     "path": "{+name}:getShippingCustomerName",
     "httpMethod": "POST",
     "description": "Gets the shipping customer name for a hardware order Get by orderId: /v2/hardwareOrders/ DEPRECATED TODO(b/34705382)",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetShippingCustomerNameRequest"
     },
     "response": {
      "$ref": "ShippingCustomerName"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getShippingCustomerPhoneNumber": {
     "id": "supportcases.hardwareOrders.getShippingCustomerPhoneNumber",
     "path": "{+name}:getShippingCustomerPhoneNumber",
     "httpMethod": "POST",
     "description": "Gets the shipping customer phone number for a hardware order Get by orderId: /v2/hardwareOrders/ DEPRECATED TODO(b/34705382)",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetShippingCustomerPhoneNumberRequest"
     },
     "response": {
      "$ref": "ShippingCustomerPhoneNumber"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "hardwareSignals": {
     "id": "supportcases.hardwareOrders.hardwareSignals",
     "path": "hardwareOrders:hardwareSignals",
     "httpMethod": "POST",
     "description": "Gets hardware signals based on the case and customer.",
     "request": {
      "$ref": "GetHardwareSignalsRequest"
     },
     "response": {
      "$ref": "GetHardwareSignalsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "list": {
     "id": "supportcases.hardwareOrders.list",
     "path": "hardwareOrders:list",
     "httpMethod": "POST",
     "description": "Lists hardware orders.",
     "request": {
      "$ref": "ListHardwareOrdersRequest"
     },
     "response": {
      "$ref": "ListHardwareOrdersResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "listOtherDevices": {
     "id": "supportcases.hardwareOrders.listOtherDevices",
     "path": "hardwareOrders:listOtherDevices",
     "httpMethod": "POST",
     "description": "Gets a user's devices that are not in the ListHardwareOrders result.",
     "request": {
      "$ref": "ListOtherDevicesRequest"
     },
     "response": {
      "$ref": "ListOtherDevicesResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "refund": {
     "id": "supportcases.hardwareOrders.refund",
     "path": "{+name}:refund",
     "httpMethod": "POST",
     "description": "Refunds a hardware order",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "RefundHardwareOrderRequest"
     },
     "response": {
      "$ref": "RefundHardwareOrderResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "refunds": {
     "id": "supportcases.hardwareOrders.refunds",
     "path": "{+name}/refunds",
     "httpMethod": "POST",
     "description": "Lists refunds for a hardware order. Get by orderId: /v2/hardwareOrders/ DEPRECATED TODO(b/34705382)",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "ListHardwareRefundsRequest"
     },
     "response": {
      "$ref": "ListHardwareRefundsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   }
  },
  "hardwareShipments": {
   "methods": {
    "cancel": {
     "id": "supportcases.hardwareShipments.cancel",
     "path": "{+name}:cancel",
     "httpMethod": "POST",
     "description": "Cancels the hardware shipment by shipment id.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "CancelHardwareOrderRequest"
     },
     "response": {
      "$ref": "Empty"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "getLostStolenRefundEligibility": {
     "id": "supportcases.hardwareShipments.getLostStolenRefundEligibility",
     "path": "{+name}:getLostStolenRefundEligibility",
     "httpMethod": "POST",
     "description": "Gets lost stolen refund eligibility for account Get by shipmentId: /v2/hardwareShipments/:",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetLostStolenRefundEligibilityRequest"
     },
     "response": {
      "$ref": "LostStolenRefundEligibility"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getShippingAddress": {
     "id": "supportcases.hardwareShipments.getShippingAddress",
     "path": "{+name}:getShippingAddress",
     "httpMethod": "POST",
     "description": "--------- Begin of shipment Id based calls ----------------- Gets shipping address for a purchase Get by shipmentId: /v2/hardwareShipments/:",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetShippingAddressRequest"
     },
     "response": {
      "$ref": "ShippingAddress"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getShippingCustomerName": {
     "id": "supportcases.hardwareShipments.getShippingCustomerName",
     "path": "{+name}:getShippingCustomerName",
     "httpMethod": "POST",
     "description": "Gets the shipping customer name for a hardware order Get by shipmentId: /v2/hardwareShipments/:",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetShippingCustomerNameRequest"
     },
     "response": {
      "$ref": "ShippingCustomerName"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getShippingCustomerPhoneNumber": {
     "id": "supportcases.hardwareShipments.getShippingCustomerPhoneNumber",
     "path": "{+name}:getShippingCustomerPhoneNumber",
     "httpMethod": "POST",
     "description": "Gets the shipping customer phone number for a hardware order Get by shipmentId: /v2/hardwareShipments/:",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetShippingCustomerPhoneNumberRequest"
     },
     "response": {
      "$ref": "ShippingCustomerPhoneNumber"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "refund": {
     "id": "supportcases.hardwareShipments.refund",
     "path": "{+name}:refund",
     "httpMethod": "POST",
     "description": "Refunds a hardware shipment by shipment id.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "RefundHardwareOrderRequest"
     },
     "response": {
      "$ref": "RefundHardwareOrderResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "refunds": {
     "id": "supportcases.hardwareShipments.refunds",
     "path": "{+name}/refunds",
     "httpMethod": "POST",
     "description": "Lists refunds for a hardware order. Get by shipmentId: /v2/hardwareShipments/:",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "ListHardwareRefundsRequest"
     },
     "response": {
      "$ref": "ListHardwareRefundsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   }
  },
  "opportunities": {
   "methods": {
    "list": {
     "id": "supportcases.opportunities.list",
     "path": "opportunities",
     "httpMethod": "GET",
     "description": "Lists opportunities.",
     "parameters": {
      "agentWhitelistedForApollo": {
       "type": "boolean",
       "location": "query"
      },
      "caseId": {
       "type": "string",
       "location": "query"
      }
     },
     "response": {
      "$ref": "ListOpportunitiesResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   },
   "resources": {
    "pitches": {
     "methods": {
      "batchCreate": {
       "id": "supportcases.opportunities.pitches.batchCreate",
       "path": "opportunities/pitches:batchCreate",
       "httpMethod": "POST",
       "description": "Batch creates pitches.",
       "request": {
        "$ref": "BatchCreatePitchRequest"
       },
       "response": {
        "$ref": "BatchCreatePitchResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      }
     }
    }
   }
  },
  "play": {
   "resources": {
    "digitalContent": {
     "methods": {
      "getRefundStatus": {
       "id": "supportcases.play.digitalContent.getRefundStatus",
       "path": "play/digitalContent:getRefundStatus",
       "httpMethod": "POST",
       "description": "Get refund status.",
       "request": {
        "$ref": "GetRefundStatusRequest"
       },
       "response": {
        "$ref": "GetRefundStatusResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      }
     },
     "resources": {
      "orders": {
       "methods": {
        "batchGet": {
         "id": "supportcases.play.digitalContent.orders.batchGet",
         "path": "play/digitalContent/orders:batchGet",
         "httpMethod": "POST",
         "description": "Get a collection of orders.",
         "request": {
          "$ref": "GetOrdersRequest"
         },
         "response": {
          "$ref": "GetOrdersResponse"
         },
         "scopes": [
          "https://www.googleapis.com/auth/cases.readonly"
         ]
        },
        "refund": {
         "id": "supportcases.play.digitalContent.orders.refund",
         "path": "play/digitalContent/orders:refund",
         "httpMethod": "POST",
         "description": "Refund orders.",
         "request": {
          "$ref": "RefundOrdersRequest"
         },
         "response": {
          "$ref": "RefundOrdersResponse"
         },
         "scopes": [
          "https://www.googleapis.com/auth/cases"
         ]
        },
        "search": {
         "id": "supportcases.play.digitalContent.orders.search",
         "path": "play/digitalContent/orders:search",
         "httpMethod": "POST",
         "description": "Search for orders.",
         "request": {
          "$ref": "SearchOrdersRequest"
         },
         "response": {
          "$ref": "SearchOrdersResponse"
         },
         "scopes": [
          "https://www.googleapis.com/auth/cases.readonly"
         ]
        }
       }
      },
      "subscriptions": {
       "methods": {
        "batchGet": {
         "id": "supportcases.play.digitalContent.subscriptions.batchGet",
         "path": "play/digitalContent/subscriptions:batchGet",
         "httpMethod": "POST",
         "description": "Get a collection of subscriptions.",
         "request": {
          "$ref": "GetSubscriptionsRequest"
         },
         "response": {
          "$ref": "GetSubscriptionsResponse"
         },
         "scopes": [
          "https://www.googleapis.com/auth/cases.readonly"
         ]
        },
        "cancel": {
         "id": "supportcases.play.digitalContent.subscriptions.cancel",
         "path": "play/digitalContent/subscriptions:cancel",
         "httpMethod": "POST",
         "description": "Cancel subscription.",
         "request": {
          "$ref": "CancelSubscriptionRequest"
         },
         "response": {
          "$ref": "CancelSubscriptionResponse"
         },
         "scopes": [
          "https://www.googleapis.com/auth/cases"
         ]
        },
        "getCancellationStatus": {
         "id": "supportcases.play.digitalContent.subscriptions.getCancellationStatus",
         "path": "play/digitalContent/subscriptions:getCancellationStatus",
         "httpMethod": "POST",
         "description": "Get cancellation status.",
         "request": {
          "$ref": "GetCancellationStatusRequest"
         },
         "response": {
          "$ref": "GetCancellationStatusResponse"
         },
         "scopes": [
          "https://www.googleapis.com/auth/cases.readonly"
         ]
        },
        "list": {
         "id": "supportcases.play.digitalContent.subscriptions.list",
         "path": "play/digitalContent/subscriptions:list",
         "httpMethod": "POST",
         "description": "List subscriptions.",
         "request": {
          "$ref": "ListSubscriptionsRequest"
         },
         "response": {
          "$ref": "ListSubscriptionsResponse"
         },
         "scopes": [
          "https://www.googleapis.com/auth/cases.readonly"
         ]
        }
       }
      }
     }
    }
   }
  },
  "products": {
   "methods": {
    "get": {
     "id": "supportcases.products.get",
     "path": "{+name}",
     "httpMethod": "GET",
     "description": "Gets the specified product.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "Product1"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getEscalationTargets": {
     "id": "supportcases.products.getEscalationTargets",
     "path": "{+name}:getEscalationTargets",
     "httpMethod": "GET",
     "description": "Gets the available escalation targets.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "GetEscalationTargetsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getRoutingTargets": {
     "id": "supportcases.products.getRoutingTargets",
     "path": "{+name}:getRoutingTargets",
     "httpMethod": "GET",
     "description": "Gets the available routing targets.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "GetRoutingTargetsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getSettings": {
     "id": "supportcases.products.getSettings",
     "path": "{+name}",
     "httpMethod": "GET",
     "description": "Gets the settings for a specified product.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "Settings"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "list": {
     "id": "supportcases.products.list",
     "path": "products",
     "httpMethod": "GET",
     "description": "Lists products.",
     "response": {
      "$ref": "ListProductsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "listSettings": {
     "id": "supportcases.products.listSettings",
     "path": "{+name}:listSettings",
     "httpMethod": "GET",
     "description": "Lists product settings for an agent.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "ListSettingsResponse1"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   }
  },
  "resolutions": {
   "methods": {
    "list": {
     "id": "supportcases.resolutions.list",
     "path": "resolutions",
     "httpMethod": "GET",
     "description": "Query for resolutions.",
     "parameters": {
      "autocompleteResults": {
       "type": "boolean",
       "location": "query"
      },
      "caseId": {
       "type": "string",
       "location": "query"
      },
      "pageSize": {
       "type": "integer",
       "format": "int32",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "location": "query"
      },
      "q": {
       "type": "string",
       "location": "query"
      },
      "resultsToken": {
       "type": "string",
       "location": "query"
      },
      "searchSessionId": {
       "type": "string",
       "location": "query"
      },
      "type": {
       "type": "string",
       "enum": [
        "CANNED_RESPONSE",
        "HELP_CENTER",
        "TROUBLE_SHOOTER",
        "UNKNOWN_RESOLUTION_TYPE",
        "WORKFLOW"
       ],
       "enumDescriptions": [
        "",
        "",
        "",
        "",
        ""
       ],
       "repeated": true,
       "location": "query"
      }
     },
     "response": {
      "$ref": "ListResolutionsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly",
      "https://www.googleapis.com/auth/supportcontent"
     ]
    },
    "log": {
     "id": "supportcases.resolutions.log",
     "path": "resolutions:log",
     "httpMethod": "POST",
     "description": "Log a resolution.",
     "request": {
      "$ref": "LogResolutionRequest"
     },
     "response": {
      "$ref": "Empty"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "suggest": {
     "id": "supportcases.resolutions.suggest",
     "path": "resolutions:suggest",
     "httpMethod": "POST",
     "description": "Suggest some resolutions to a case based on provided signals.",
     "request": {
      "$ref": "SuggestResolutionsRequest"
     },
     "response": {
      "$ref": "SuggestResolutionsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly",
      "https://www.googleapis.com/auth/supportcontent"
     ]
    }
   },
   "resources": {
    "cohorts": {
     "methods": {
      "assign": {
       "id": "supportcases.resolutions.cohorts.assign",
       "path": "resolutions/cohorts:assign",
       "httpMethod": "POST",
       "description": "Query and assign cohorts for this case.",
       "request": {
        "$ref": "AssignCohortsRequest"
       },
       "response": {
        "$ref": "AssignCohortsResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases",
        "https://www.googleapis.com/auth/supportcontent"
       ]
      }
     }
    }
   }
  },
  "rma": {
   "methods": {
    "save": {
     "id": "supportcases.rma.save",
     "path": "rma:save",
     "httpMethod": "POST",
     "description": "Saves (Insert/Update) an RMA.",
     "request": {
      "$ref": "SaveRmaRequest"
     },
     "response": {
      "$ref": "SaveRmaResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "submit": {
     "id": "supportcases.rma.submit",
     "path": "rma:submit",
     "httpMethod": "POST",
     "description": "DEPRECATED: Use SendRma instead. Submit an RMA.",
     "request": {
      "$ref": "SubmitRmaRequest"
     },
     "response": {
      "$ref": "SubmitRmaResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    }
   }
  },
  "rmas": {
   "methods": {
    "cancel": {
     "id": "supportcases.rmas.cancel",
     "path": "{+name}:cancel",
     "httpMethod": "POST",
     "description": "Cancel an RMA.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "CancelRmaRequest"
     },
     "response": {
      "$ref": "CancelRmaResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "cancelAuthHold": {
     "id": "supportcases.rmas.cancelAuthHold",
     "path": "{+name}:cancelAuthHold",
     "httpMethod": "POST",
     "description": "Cancels an auth hold for an advanced exchange RMA.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "CancelAuthHoldRequest"
     },
     "response": {
      "$ref": "Empty"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "createExchangeWithoutReturn": {
     "id": "supportcases.rmas.createExchangeWithoutReturn",
     "path": "rmas:createExchangeWithoutReturn",
     "httpMethod": "POST",
     "description": "Sends merchandise without expecting a return.",
     "request": {
      "$ref": "CreateExchangeWithoutReturnRequest"
     },
     "response": {
      "$ref": "CreateExchangeWithoutReturnResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "get": {
     "id": "supportcases.rmas.get",
     "path": "{+name}",
     "httpMethod": "GET",
     "description": "Gets the specified RMA.",
     "parameters": {
      "caseId": {
       "type": "string",
       "location": "query"
      },
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "Rma"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getLostStolenEligibility": {
     "id": "supportcases.rmas.getLostStolenEligibility",
     "path": "{+name}:getLostStolenEligibility",
     "httpMethod": "POST",
     "description": "Determines the eligibility of a lost/stolen RMA.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetLostStolenEligibilityRequest"
     },
     "response": {
      "$ref": "LostStolenEligibility"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getMailingAddress": {
     "id": "supportcases.rmas.getMailingAddress",
     "path": "{+name}:getMailingAddress",
     "httpMethod": "POST",
     "description": "Get mailing address for an RMA",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetMailingAddressRequest"
     },
     "response": {
      "$ref": "MailingAddress"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getOrderDetail": {
     "id": "supportcases.rmas.getOrderDetail",
     "path": "{+name}:getOrderDetail",
     "httpMethod": "POST",
     "description": "Gets an RMA's order detail.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetRmaOrderDetailRequest"
     },
     "response": {
      "$ref": "RmaOrderDetail"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "getReplacementDetail": {
     "id": "supportcases.rmas.getReplacementDetail",
     "path": "{+name}:getReplacementDetail",
     "httpMethod": "POST",
     "description": "Get details for a replacement device that is not associated with an order.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "GetReplacementDetailRequest"
     },
     "response": {
      "$ref": "ReplacementDetail"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "list": {
     "id": "supportcases.rmas.list",
     "path": "rmas",
     "httpMethod": "GET",
     "description": "Lists RMAs by Case ID and RMA state",
     "parameters": {
      "caseId": {
       "type": "string",
       "location": "query"
      },
      "state": {
       "type": "string",
       "enum": [
        "RMA_CANCELLED",
        "RMA_COMPLETED",
        "RMA_INCOMPLETE",
        "RMA_PENDING",
        "RMA_SUBMITTED",
        "UNKNOWN_RMA_STATE"
       ],
       "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        ""
       ],
       "location": "query"
      }
     },
     "response": {
      "$ref": "ListRmasResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "listBuyersRemorseCountryCodes": {
     "id": "supportcases.rmas.listBuyersRemorseCountryCodes",
     "path": "rmas:listBuyersRemorseCountryCodes",
     "httpMethod": "GET",
     "description": "Lists two-character country codes valid for Buyer's Remorse RMAs.",
     "response": {
      "$ref": "ListBuyersRemorseCountryCodesResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "markOriginalDeviceReceived": {
     "id": "supportcases.rmas.markOriginalDeviceReceived",
     "path": "{+name}:markOriginalDeviceReceived",
     "httpMethod": "POST",
     "description": "Marks an original device as received in a Standard Exchange.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "MarkOriginalDeviceReceivedRequest"
     },
     "response": {
      "$ref": "Empty"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "runRmaSteps": {
     "id": "supportcases.rmas.runRmaSteps",
     "path": "{+name}:runRmaSteps",
     "httpMethod": "POST",
     "description": "Run the given RMA workflow steps.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "RunRmaStepsRequest"
     },
     "response": {
      "$ref": "RunRmaStepsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "runWorkflow": {
     "id": "supportcases.rmas.runWorkflow",
     "path": "rmas:runWorkflow",
     "httpMethod": "POST",
     "description": "DEPRECATED: Use RunRmaSteps instead. Run the given workflow for an RMA.",
     "request": {
      "$ref": "RunWorkflowRequest"
     },
     "response": {
      "$ref": "RunWorkflowResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    },
    "send": {
     "id": "supportcases.rmas.send",
     "path": "rmas:send",
     "httpMethod": "POST",
     "description": "Initiates a new RMA.",
     "request": {
      "$ref": "SendRmaRequest"
     },
     "response": {
      "$ref": "SendRmaResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases"
     ]
    }
   }
  },
  "teams": {
   "methods": {
    "getMyAssignStreamSearches": {
     "id": "supportcases.teams.getMyAssignStreamSearches",
     "path": "teams:getMyAssignStreamSearches",
     "httpMethod": "GET",
     "description": "Gets assign-stream-enabled searches associated with the agent.",
     "response": {
      "$ref": "GetMyAssignStreamSearchesResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   }
  },
  "troubleshooterSessions": {
   "methods": {
    "create": {
     "id": "supportcases.troubleshooterSessions.create",
     "path": "troubleshooterSessions:create",
     "httpMethod": "POST",
     "description": "Start a new troubleshooter session.",
     "request": {
      "$ref": "CreateTroubleshooterSessionRequest"
     },
     "response": {
      "$ref": "TroubleshooterSession"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases",
      "https://www.googleapis.com/auth/supportcontent"
     ]
    },
    "listDevices": {
     "id": "supportcases.troubleshooterSessions.listDevices",
     "path": "troubleshooterSessions:listDevices",
     "httpMethod": "POST",
     "description": "Lists devices on a customer's account.",
     "request": {
      "$ref": "ListDevicesRequest"
     },
     "response": {
      "$ref": "ListDevicesResponse1"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases",
      "https://www.googleapis.com/auth/supportcontent"
     ]
    },
    "listIssues": {
     "id": "supportcases.troubleshooterSessions.listIssues",
     "path": "troubleshooterSessions:listIssues",
     "httpMethod": "GET",
     "description": "Lists issues.",
     "parameters": {
      "caseId": {
       "type": "string",
       "location": "query"
      },
      "issueId": {
       "type": "string",
       "location": "query"
      },
      "troubleshooterType": {
       "type": "string",
       "enum": [
        "NOE",
        "PLAY_APPS",
        "PLAY_PURCHASES",
        "TROUBLESHOOTER_TYPE_NOT_SET"
       ],
       "enumDescriptions": [
        "",
        "",
        "",
        ""
       ],
       "location": "query"
      }
     },
     "response": {
      "$ref": "ListIssuesResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases",
      "https://www.googleapis.com/auth/supportcontent"
     ]
    },
    "listPurchasedApps": {
     "id": "supportcases.troubleshooterSessions.listPurchasedApps",
     "path": "troubleshooterSessions:listPurchasedApps",
     "httpMethod": "POST",
     "description": "Lists purchased apps on a customer's account.",
     "request": {
      "$ref": "ListPurchasedAppsRequest"
     },
     "response": {
      "$ref": "ListPurchasedAppsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases",
      "https://www.googleapis.com/auth/supportcontent"
     ]
    },
    "listPurchasedBooks": {
     "id": "supportcases.troubleshooterSessions.listPurchasedBooks",
     "path": "troubleshooterSessions:listPurchasedBooks",
     "httpMethod": "POST",
     "description": "Lists purchased books on a customer's account.",
     "request": {
      "$ref": "ListPurchasedBooksRequest"
     },
     "response": {
      "$ref": "ListPurchasedBooksResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases",
      "https://www.googleapis.com/auth/supportcontent"
     ]
    },
    "listPurchasedVideos": {
     "id": "supportcases.troubleshooterSessions.listPurchasedVideos",
     "path": "troubleshooterSessions:listPurchasedVideos",
     "httpMethod": "POST",
     "description": "Lists purchased videos on a customer's account.",
     "request": {
      "$ref": "ListPurchasedVideosRequest"
     },
     "response": {
      "$ref": "ListPurchasedVideosResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases",
      "https://www.googleapis.com/auth/supportcontent"
     ]
    },
    "log": {
     "id": "supportcases.troubleshooterSessions.log",
     "path": "{+name}:log",
     "httpMethod": "POST",
     "description": "Log troubleshooter activity.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "LogTroubleshooterActivityRequest"
     },
     "response": {
      "$ref": "Empty"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases",
      "https://www.googleapis.com/auth/supportcontent"
     ]
    },
    "troubleshootIssue": {
     "id": "supportcases.troubleshooterSessions.troubleshootIssue",
     "path": "{+name}:troubleshootIssue",
     "httpMethod": "POST",
     "description": "Troubleshoot issue.",
     "parameters": {
      "name": {
       "type": "string",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "TroubleshootIssueRequest"
     },
     "response": {
      "$ref": "TroubleshootIssueResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases",
      "https://www.googleapis.com/auth/supportcontent"
     ]
    }
   }
  },
  "wallets": {
   "methods": {
    "bankAccountCountries": {
     "id": "supportcases.wallets.bankAccountCountries",
     "path": "wallets/bankAccountCountries",
     "httpMethod": "POST",
     "description": "List supported Bank Account countries. Initially will only return supported Bank Account countries for Payment Method Hijacks (PMH). This is a POST API because it takes in a sso_ticket.",
     "request": {
      "$ref": "ListBankAccountCountriesRequest"
     },
     "response": {
      "$ref": "ListBankAccountCountriesResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "creditCardTypes": {
     "id": "supportcases.wallets.creditCardTypes",
     "path": "wallets/creditCardTypes",
     "httpMethod": "POST",
     "description": "List supported Credit Card types. Initially will only return supported credit cards for Payment Method Hijacks (PMH). This is a POST API because it takes in a sso_ticket.",
     "request": {
      "$ref": "ListCreditCardTypesRequest"
     },
     "response": {
      "$ref": "ListCreditCardTypesResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "transactions": {
     "id": "supportcases.wallets.transactions",
     "path": "wallets/transactions",
     "httpMethod": "POST",
     "description": "Query for transactions.",
     "request": {
      "$ref": "ListTransactionsRequest"
     },
     "response": {
      "$ref": "ListTransactionsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "troubleshootAccount": {
     "id": "supportcases.wallets.troubleshootAccount",
     "path": "wallets:troubleshootAccount",
     "httpMethod": "POST",
     "description": "Troubleshoots a Wallet account for issues.",
     "request": {
      "$ref": "TroubleshootAccountRequest"
     },
     "response": {
      "$ref": "TroubleshootAccountResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "troubleshootTransaction": {
     "id": "supportcases.wallets.troubleshootTransaction",
     "path": "wallets:troubleshootTransaction",
     "httpMethod": "POST",
     "description": "Troubleshoots a Wallet transaction for issues.",
     "request": {
      "$ref": "TroubleshootTransactionRequest"
     },
     "response": {
      "$ref": "TroubleshootTransactionResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   },
   "resources": {
    "accounts": {
     "methods": {
      "getPaymentsInfo": {
       "id": "supportcases.wallets.accounts.getPaymentsInfo",
       "path": "wallets/accounts:getPaymentsInfo",
       "httpMethod": "POST",
       "description": "Fetches Payments info, such as number of Payments accounts for the user.",
       "request": {
        "$ref": "GetPaymentsInfoRequest"
       },
       "response": {
        "$ref": "GetPaymentsInfoResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "getReviewStatus": {
       "id": "supportcases.wallets.accounts.getReviewStatus",
       "path": "wallets/accounts:getReviewStatus",
       "httpMethod": "POST",
       "description": "Fetches the review status of a wallet account. This is a POST API because it takes in a sso_ticket.",
       "request": {
        "$ref": "GetAccountReviewStatusRequest"
       },
       "response": {
        "$ref": "GetAccountReviewStatusResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "getSignals": {
       "id": "supportcases.wallets.accounts.getSignals",
       "path": "wallets/accounts:getSignals",
       "httpMethod": "GET",
       "description": "Fetches Wallet account signals for troubleshooting Wallet issues.",
       "parameters": {
        "accountSignals": {
         "type": "string",
         "enum": [
          "ACCOUNT_SIGNAL_TYPE_UNSPECIFIED",
          "CUSTOMER_BVID_DOCS_SUBMISSION_STATUS",
          "CUSTOMER_OFFLINE_CHECK_DOCS_SUBMISSION_STATUS",
          "CUSTOMER_RISK_DOCS_SUBMISSION_STATUS",
          "CUSTOMER_SANCTIONS_DOCS_SUBMISSION_STATUS",
          "GAIA_ACCOUNT_CHECKOUT_SERVICE_STATUS",
          "HAS_POSITIVE_WALLET_BALANCE",
          "IS_VIP",
          "MOST_RECENT_TRANSACTION_TYPE"
         ],
         "enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
         ],
         "repeated": true,
         "location": "query"
        },
        "caseId": {
         "type": "string",
         "location": "query"
        }
       },
       "response": {
        "$ref": "GetAccountSignalsResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "searchReviews": {
       "id": "supportcases.wallets.accounts.searchReviews",
       "path": "wallets/accounts:searchReviews",
       "httpMethod": "POST",
       "description": "Initiates a review on the Wallet account. This is a POST API because it takes in a sso_ticket. This API could lead to a review escalation (increase in priority).",
       "request": {
        "$ref": "SearchAccountReviewsRequest"
       },
       "response": {
        "$ref": "SearchAccountReviewsResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      }
     },
     "resources": {
      "paymentInstruments": {
       "methods": {
        "getHijackReviewsStatus": {
         "id": "supportcases.wallets.accounts.paymentInstruments.getHijackReviewsStatus",
         "path": "wallets/accounts/paymentInstruments:getHijackReviewsStatus",
         "httpMethod": "POST",
         "description": "Retrieve status for Payment Method Hijack (PMH) reviews. This is a POST API because it takes in a sso_ticket.",
         "request": {
          "$ref": "GetPaymentMethodHijackReviewsStatusRequest"
         },
         "response": {
          "$ref": "GetPaymentMethodHijackReviewsStatusResponse"
         },
         "scopes": [
          "https://www.googleapis.com/auth/cases.readonly"
         ]
        },
        "initiateHijackReviews": {
         "id": "supportcases.wallets.accounts.paymentInstruments.initiateHijackReviews",
         "path": "wallets/accounts/paymentInstruments:initiateHijackReviews",
         "httpMethod": "POST",
         "description": "Initiate Payment Method Hijack (PMH) reviews.",
         "request": {
          "$ref": "InitiatePaymentMethodHijackReviewsRequest"
         },
         "response": {
          "$ref": "InitiatePaymentMethodHijackReviewsResponse"
         },
         "scopes": [
          "https://www.googleapis.com/auth/cases"
         ]
        }
       }
      }
     }
    },
    "paymentInstrumentTypeInfos": {
     "methods": {
      "list": {
       "id": "supportcases.wallets.paymentInstrumentTypeInfos.list",
       "path": "wallets/paymentInstrumentTypeInfos",
       "httpMethod": "GET",
       "description": "List supported payment instrument types. This API is not customer contextual.",
       "parameters": {
        "caseId": {
         "type": "string",
         "location": "query"
        }
       },
       "response": {
        "$ref": "ListPaymentInstrumentTypeInfosResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      }
     }
    },
    "paymentInstruments": {
     "methods": {
      "suggestIssuer": {
       "id": "supportcases.wallets.paymentInstruments.suggestIssuer",
       "path": "wallets/paymentInstruments:suggestIssuer",
       "httpMethod": "GET",
       "description": "Fetches suggestions for payment(credit card, bank, direct carrier billing) issuers.",
       "parameters": {
        "caseId": {
         "type": "string",
         "location": "query"
        },
        "includeDescription": {
         "type": "boolean",
         "location": "query"
        },
        "instrumentTypeToken": {
         "type": "string",
         "location": "query"
        },
        "searchKey": {
         "type": "string",
         "location": "query"
        }
       },
       "response": {
        "$ref": "SuggestPaymentInstrumentIssuerResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      }
     }
    }
   }
  },
  "youtube": {
   "methods": {
    "onetimepurchases": {
     "id": "supportcases.youtube.onetimepurchases",
     "path": "youtube/onetimepurchases",
     "httpMethod": "POST",
     "description": "Gets a list of one time purchases.",
     "request": {
      "$ref": "GetOneTimePurchasesRequest"
     },
     "response": {
      "$ref": "GetOneTimePurchasesResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    },
    "summary": {
     "id": "supportcases.youtube.summary",
     "path": "youtube/summary",
     "httpMethod": "POST",
     "description": "Get Customer Summary Information for entitlements and refund history.",
     "request": {
      "$ref": "GetCustomerSummaryRequest"
     },
     "response": {
      "$ref": "GetCustomerSummaryResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/cases.readonly"
     ]
    }
   },
   "resources": {
    "components": {
     "methods": {
      "cancel": {
       "id": "supportcases.youtube.components.cancel",
       "path": "youtube/components:cancel",
       "httpMethod": "POST",
       "description": "Cancel/Downgrade component(s).",
       "request": {
        "$ref": "CancelComponentsRequest"
       },
       "response": {
        "$ref": "CancelComponentsResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      }
     }
    },
    "entitlements": {
     "methods": {
      "cancel": {
       "id": "supportcases.youtube.entitlements.cancel",
       "path": "youtube/entitlements:cancel",
       "httpMethod": "POST",
       "description": "Cancel entitlement.",
       "request": {
        "$ref": "CancelEntitlementRequest"
       },
       "response": {
        "$ref": "CancelEntitlementResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      }
     }
    },
    "transactions": {
     "methods": {
      "listByEntitlements": {
       "id": "supportcases.youtube.transactions.listByEntitlements",
       "path": "youtube/transactions:listByEntitlements",
       "httpMethod": "POST",
       "description": "Get all transactions for entitlements.",
       "request": {
        "$ref": "ListTransactionsRequest1"
       },
       "response": {
        "$ref": "ListTransactionsResponse1"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases.readonly"
       ]
      },
      "refund": {
       "id": "supportcases.youtube.transactions.refund",
       "path": "youtube/transactions:refund",
       "httpMethod": "POST",
       "description": "Refund a batch of transactions.",
       "request": {
        "$ref": "RefundTransactionsRequest"
       },
       "response": {
        "$ref": "RefundTransactionsResponse"
       },
       "scopes": [
        "https://www.googleapis.com/auth/cases"
       ]
      }
     }
    }
   }
  }
 }
}
